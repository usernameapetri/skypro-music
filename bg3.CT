<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>4944</ID>
      <Description>"Last Item Moved (moved item must have quantity of 2 or more)"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
aobscanmodule(moved,$process,75 ?? 48 B8 ?? ?? ?? ?? ?? ?? ?? ?? EB ?? 48 8B ?? ?? 0F)
alloc(newmem,$1000,moved)

label(movedPtr)
label(movedBkp)
label(return)

newmem:
movedBkp:
  readmem(moved+0E,7)
  push rdx
  mov rdx,movedPtr
  mov [rdx],rax
  pop rdx
  jmp return

align 10
movedPtr:
  dq 0

moved+0E:
  jmp newmem
  nop 2
return:
registersymbol(moved)
registersymbol(movedBkp)
registersymbol(movedPtr)

[DISABLE]
moved+0E:
  readmem(movedBkp,7)
unregistersymbol(moved)
unregistersymbol(movedBkp)
unregistersymbol(movedPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+24A266F

bg3.exe+24A2646: 48 8B D0                       - mov rdx,rax
bg3.exe+24A2649: 0F 57 C0                       - xorps xmm0,xmm0
bg3.exe+24A264C: 0F 11 45 DF                    - movups [rbp-21],xmm0
bg3.exe+24A2650: 48 85 C0                       - test rax,rax
bg3.exe+24A2653: 0F 84 74 01 00 00              - je bg3.exe+24A27CD
bg3.exe+24A2659: 48 89 45 DF                    - mov [rbp-21],rax
bg3.exe+24A265D: 44 39 60 1C                    - cmp [rax+1C],r12d
bg3.exe+24A2661: 75 0C                          - jne bg3.exe+24A266F
bg3.exe+24A2663: 48 B8 00 00 00 00 00 00 C0 FF  - mov rax,FFC0000000000000
bg3.exe+24A266D: EB 1F                          - jmp bg3.exe+24A268E
// ---------- INJECTING HERE ----------
bg3.exe+24A266F: 48 8B 40 10                    - mov rax,[rax+10]
// ---------- DONE INJECTING  ----------
bg3.exe+24A2673: 0F B7 08                       - movzx ecx,word ptr [rax]
bg3.exe+24A2676: 3B 4A 0C                       - cmp ecx,[rdx+0C]
bg3.exe+24A2679: 7C 0C                          - jl bg3.exe+24A2687
bg3.exe+24A267B: 48 B8 00 00 00 00 00 00 C0 FF  - mov rax,FFC0000000000000
bg3.exe+24A2685: EB 07                          - jmp bg3.exe+24A268E
bg3.exe+24A2687: 48 8B 02                       - mov rax,[rdx]
bg3.exe+24A268A: 48 8B 04 C8                    - mov rax,[rax+rcx*8]
bg3.exe+24A268E: 48 89 45 AF                    - mov [rbp-51],rax
bg3.exe+24A2692: 48 8B 1A                       - mov rbx,[rdx]
bg3.exe+24A2695: 48 85 DB                       - test rbx,rbx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>4945</ID>
          <Description>"Quantity"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>movedPtr</Address>
          <Offsets>
            <Offset>4</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>143</ID>
      <Description>"Character Ability Points Invested"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{
Points spent on Abilities at Character Creation
Group: 4:0 4:2 4:5 4:6 4:2 4:2 4:7
Prior to invested points is also character's name
4:2054054234 4:29285 4:0 4:0 4:6 4:15 4:0 4:2 4:5 4:6 4:2 4:2 4:7
}
[ENABLE]
aobscanmodule(stats,$process,8B ?? ?? 40 89 ?? 41 FF)
alloc(newmem,$1000,stats)

label(statsBkp)
label(return)
label(statsPtr)

newmem:
  test rcx,rcx
  jne statsBkp
  mov rdx,statsPtr
  cmp [rdx],A0
  jl @f
  mov [rdx],0
@@:
  add [rdx],08
  add rdx,[rdx]
  mov [rdx],rsi
statsBkp:
  readmem(stats,6)
  jmp return

statsPtr:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0

stats:
  jmp newmem
  nop
return:
registersymbol(stats)
registersymbol(statsBkp)
registersymbol(statsPtr)

[DISABLE]
stats:
  readmem(statsBkp,6)
unregistersymbol(stats)
unregistersymbol(statsBkp)
unregistersymbol(statsPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+1587413

bg3.exe+15873EF: 89 48 18        - mov [rax+18],ecx
bg3.exe+15873F2: 48 89 44 24 50  - mov [rsp+50],rax
bg3.exe+15873F7: 4C 89 4C 24 58  - mov [rsp+58],r9
bg3.exe+15873FC: 0F 10 44 24 50  - movups xmm0,[rsp+50]
bg3.exe+1587401: 0F 11 45 E8     - movups [rbp-18],xmm0
bg3.exe+1587405: 44 8B C3        - mov r8d,ebx
bg3.exe+1587408: 49 3B C1        - cmp rax,r9
bg3.exe+158740B: 74 18           - je bg3.exe+1587425
bg3.exe+158740D: 0F 1F 00        - nop dword ptr [rax]
bg3.exe+1587410: 49 63 C8        - movsxd  rcx,r8d
// ---------- INJECTING HERE ----------
bg3.exe+1587413: 8B 54 8E 40     - mov edx,[rsi+rcx*4+40]
// ---------- DONE INJECTING  ----------
bg3.exe+1587417: 89 10           - mov [rax],edx
bg3.exe+1587419: 41 FF C0        - inc r8d
bg3.exe+158741C: 48 83 C0 04     - add rax,04
bg3.exe+1587420: 49 3B C1        - cmp rax,r9
bg3.exe+1587423: 75 EB           - jne bg3.exe+1587410
bg3.exe+1587425: 41 8B 4D 30     - mov ecx,[r13+30]
bg3.exe+1587429: 41 8B 45 34     - mov eax,[r13+34]
bg3.exe+158742D: 3B C8           - cmp ecx,eax
bg3.exe+158742F: 7F 17           - jg bg3.exe+1587448
bg3.exe+1587431: FF C0           - inc eax
}

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+8CB7D15

bg3.exe+8CB7CED: 48 89 54 24 38           - mov [rsp+38],rdx
bg3.exe+8CB7CF2: 0F 10 44 24 30           - movups xmm0,[rsp+30]
bg3.exe+8CB7CF7: 0F 11 45 40              - movups [rbp+40],xmm0
bg3.exe+8CB7CFB: 48 8B 4D 40              - mov rcx,[rbp+40]
bg3.exe+8CB7CFF: 48 8B 45 48              - mov rax,[rbp+48]
bg3.exe+8CB7D03: 48 3B C8                 - cmp rcx,rax
bg3.exe+8CB7D06: 74 1E                    - je bg3.exe+8CB7D26
bg3.exe+8CB7D08: 0F 1F 84 00 00 00 00 00  - nop dword ptr [rax+rax+00000000]
bg3.exe+8CB7D10: 48 63 D6                 - movsxd  rdx,esi
bg3.exe+8CB7D13: FF C6                    - inc esi
// ---------- INJECTING HERE ----------
bg3.exe+8CB7D15: 45 8B 44 96 40           - mov r8d,[r14+rdx*4+40] &lt;--- offset
// ---------- DONE INJECTING  ----------
bg3.exe+8CB7D1A: 44 89 01                 - mov [rcx],r8d
bg3.exe+8CB7D1D: 48 83 C1 04              - add rcx,04
bg3.exe+8CB7D21: 48 3B C8                 - cmp rcx,rax
bg3.exe+8CB7D24: 75 EA                    - jne bg3.exe+8CB7D10
bg3.exe+8CB7D26: 48 8B 5C 24 60           - mov rbx,[rsp+60]
bg3.exe+8CB7D2B: 48 8B C5                 - mov rax,rbp
bg3.exe+8CB7D2E: 48 8B 6C 24 70           - mov rbp,[rsp+70]
bg3.exe+8CB7D33: 48 83 C4 40              - add rsp,40
bg3.exe+8CB7D37: 41 5E                    - pop r14
bg3.exe+8CB7D39: 5F                       - pop rdi
}

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+245B375

"bg3.exe"+245B350: 48 89 4C 24 30           -  mov [rsp+30],rcx
"bg3.exe"+245B355: 48 89 54 24 38           -  mov [rsp+38],rdx
"bg3.exe"+245B35A: 0F 10 44 24 30           -  movups xmm0,[rsp+30]
"bg3.exe"+245B35F: 0F 11 45 38              -  movups [rbp+38],xmm0
"bg3.exe"+245B363: 48 8B 4D 38              -  mov rcx,[rbp+38]
"bg3.exe"+245B367: 48 8B 45 40              -  mov rax,[rbp+40]
"bg3.exe"+245B36B: 48 3B C8                 -  cmp rcx,rax
"bg3.exe"+245B36E: 74 16                    -  je bg3.exe+245B386
"bg3.exe"+245B370: 48 63 D6                 -  movsxd  rdx,esi
"bg3.exe"+245B373: FF C6                    -  inc esi
// ---------- INJECTING HERE ----------
"bg3.exe"+245B375: 45 8B 44 96 60           -  mov r8d,[r14+rdx*4+60] &lt;--- offset
// ---------- DONE INJECTING  ----------
"bg3.exe"+245B37A: 44 89 01                 -  mov [rcx],r8d
"bg3.exe"+245B37D: 48 83 C1 04              -  add rcx,04
"bg3.exe"+245B381: 48 3B C8                 -  cmp rcx,rax
"bg3.exe"+245B384: 75 EA                    -  jne bg3.exe+245B370
"bg3.exe"+245B386: 48 8B 5C 24 60           -  mov rbx,[rsp+60]
"bg3.exe"+245B38B: 48 8B C5                 -  mov rax,rbp
"bg3.exe"+245B38E: 48 8B 6C 24 70           -  mov rbp,[rsp+70]
"bg3.exe"+245B393: 48 83 C4 40              -  add rsp,40
"bg3.exe"+245B397: 41 5E                    -  pop r14
"bg3.exe"+245B399: 5F                       -  pop rdi
}

{
bg3.exe+158733C - 84 C0                 - test al,al
bg3.exe+158733E - 0F84 84010000         - je bg3.exe+15874C8
bg3.exe+1587344 - 48 8B 17              - mov rdx,[rdi]
bg3.exe+1587347 - 49 8B 4D 08           - mov rcx,[r13+08]
bg3.exe+158734B - E8 00234FFF           - call bg3.exe+A79650 &lt;--- retrieves pointer
bg3.exe+1587350 - 48 8B F0              - mov rsi,rax
bg3.exe+1587353 - 0F10 00               - movups xmm0,[rax]
bg3.exe+1587356 - 0F29 45 A0            - movaps [rbp-60],xmm0
bg3.exe+158735A - 0F10 48 10            - movups xmm1,[rax+10]
bg3.exe+158735E - 0F29 4D B0            - movaps [rbp-50],xmm1
bg3.exe+1587362 - 0FB6 48 20            - movzx ecx,byte ptr [rax+20]
bg3.exe+1587366 - 88 4D C0              - mov [rbp-40],cl
bg3.exe+1587369 - 0FB6 48 21            - movzx ecx,byte ptr [rax+21]
bg3.exe+158736D - 48 89 4D C8           - mov [rbp-38],rcx
bg3.exe+1587371 - 0FB6 48 5C            - movzx ecx,byte ptr [rax+5C]
bg3.exe+1587375 - 48 89 4D D0           - mov [rbp-30],rcx
bg3.exe+1587379 - 48 8D 48 28           - lea rcx,[rax+28]
bg3.exe+158737D - 83 78 3C 10           - cmp dword ptr [rax+3C],10 { 16
bg3.exe+1587381 - 72 04                 - jb bg3.exe+1587387
bg3.exe+1587383 - 48 8B 48 28           - mov rcx,[rax+28]
bg3.exe+1587387 - 48 89 4C 24 78        - mov [rsp+78],rcx
bg3.exe+158738C - 8B 40 38              - mov eax,[rax+38]
bg3.exe+158738F - 89 45 80              - mov [rbp-80],eax
bg3.exe+1587392 - 0F10 44 24 78         - movups xmm0,[rsp+78]
bg3.exe+1587397 - 0F11 45 D8            - movups [rbp-28],xmm0
bg3.exe+158739B - 48 89 5C 24 60        - mov [rsp+60],rbx
bg3.exe+15873A0 - 48 8B 4C 24 40        - mov rcx,[rsp+40]
bg3.exe+15873A5 - 48 83 C1 08           - add rcx,08 { 8
bg3.exe+15873A9 - 48 8D 44 24 60        - lea rax,[rsp+60]
bg3.exe+15873AE - 48 89 44 24 20        - mov [rsp+20],rax
bg3.exe+15873B3 - 41 B9 04000000        - mov r9d,00000004 { 4
bg3.exe+15873B9 - 45 8D 41 18           - lea r8d,[r9+18]
bg3.exe+15873BD - 48 8D 55 88           - lea rdx,[rbp-78]
bg3.exe+15873C1 - E8 2AAB2E02           - call bg3.exe+3871EF0
bg3.exe+15873C6 - 48 8B 45 88           - mov rax,[rbp-78]
bg3.exe+15873CA - 48 85 C0              - test rax,rax
bg3.exe+15873CD - 74 11                 - je bg3.exe+15873E0
bg3.exe+15873CF - 48 8B 4D 90           - mov rcx,[rbp-70]
bg3.exe+15873D3 - 48 C1 E9 02           - shr rcx,02 { 2
bg3.exe+15873D7 - 48 63 C9              - movsxd  rcx,ecx
bg3.exe+15873DA - 4C 8D 0C 88           - lea r9,[rax+rcx*4]
bg3.exe+15873DE - EB 03                 - jmp bg3.exe+15873E3
bg3.exe+15873E0 - 4C 8B CB              - mov r9,rbx
bg3.exe+15873E3 - 0F57 C0               - xorps xmm0,xmm0
bg3.exe+15873E6 - 33 C9                 - xor ecx,ecx
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>5040</ID>
          <Description>"Save the game in order to populate the below pointers"</Description>
          <Color>008000</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>5041</ID>
          <Description>"After changing a value, you'll have to save and then load to see the changes"</Description>
          <Color>008000</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>5042</ID>
          <Description>"Before each save, disable and re-enable the script in order to reset counters"</Description>
          <Color>008000</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>5043</ID>
          <Description>"Note that pointers may not be stable, so you'll just have to cross your fingers"</Description>
          <Color>008000</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>144</ID>
          <Description>"Character 1"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>statsPtr+8</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>618</ID>
              <Description>"Name (do NOT change)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>99</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>-18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>145</ID>
              <Description>"Strength"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>146</ID>
              <Description>"Dexterity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+08</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>147</ID>
              <Description>"Constitution"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+0C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>148</ID>
              <Description>"Intelligence"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>149</ID>
              <Description>"Wisdom"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+14</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>150</ID>
              <Description>"Charisma"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+18</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>619</ID>
          <Description>"Character 2"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>statsPtr+10</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>620</ID>
              <Description>"Name (do NOT change)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>99</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>-18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>621</ID>
              <Description>"Strength"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>622</ID>
              <Description>"Dexterity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+08</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>623</ID>
              <Description>"Constitution"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+0C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>624</ID>
              <Description>"Intelligence"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>625</ID>
              <Description>"Wisdom"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+14</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>626</ID>
              <Description>"Charisma"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+18</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>627</ID>
          <Description>"Character 3"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>statsPtr+18</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>628</ID>
              <Description>"Name (do NOT change)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>99</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>-18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>629</ID>
              <Description>"Strength"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>630</ID>
              <Description>"Dexterity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+08</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>631</ID>
              <Description>"Constitution"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+0C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>632</ID>
              <Description>"Intelligence"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>633</ID>
              <Description>"Wisdom"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+14</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>634</ID>
              <Description>"Charisma"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+18</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>635</ID>
          <Description>"Character 4"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>statsPtr+20</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>636</ID>
              <Description>"Name (do NOT change)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>99</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>-18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>637</ID>
              <Description>"Strength"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>638</ID>
              <Description>"Dexterity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+08</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>639</ID>
              <Description>"Constitution"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+0C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>640</ID>
              <Description>"Intelligence"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>641</ID>
              <Description>"Wisdom"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+14</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>642</ID>
              <Description>"Charisma"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+18</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>4988</ID>
          <Description>"Character 5"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>statsPtr+28</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>4989</ID>
              <Description>"Name (do NOT change)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>99</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>-18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4990</ID>
              <Description>"Strength"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4991</ID>
              <Description>"Dexterity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+08</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4992</ID>
              <Description>"Constitution"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+0C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4993</ID>
              <Description>"Intelligence"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4994</ID>
              <Description>"Wisdom"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+14</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4995</ID>
              <Description>"Charisma"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+18</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>4996</ID>
          <Description>"Character 6"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>statsPtr+30</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>4997</ID>
              <Description>"Name (do NOT change)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>99</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>-18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4998</ID>
              <Description>"Strength"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4999</ID>
              <Description>"Dexterity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+08</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5000</ID>
              <Description>"Constitution"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+0C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5001</ID>
              <Description>"Intelligence"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5002</ID>
              <Description>"Wisdom"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+14</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5003</ID>
              <Description>"Charisma"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+18</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>5004</ID>
          <Description>"Character 7"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>statsPtr+38</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>5005</ID>
              <Description>"Name (do NOT change)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>99</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>-18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5006</ID>
              <Description>"Strength"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5007</ID>
              <Description>"Dexterity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+08</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5008</ID>
              <Description>"Constitution"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+0C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5009</ID>
              <Description>"Intelligence"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5010</ID>
              <Description>"Wisdom"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+14</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5011</ID>
              <Description>"Charisma"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+18</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>5012</ID>
          <Description>"Character 8"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>statsPtr+40</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>5013</ID>
              <Description>"Name (do NOT change)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>99</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>-18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5014</ID>
              <Description>"Strength"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5015</ID>
              <Description>"Dexterity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+08</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5016</ID>
              <Description>"Constitution"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+0C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5017</ID>
              <Description>"Intelligence"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5018</ID>
              <Description>"Wisdom"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+14</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5019</ID>
              <Description>"Charisma"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+18</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>5020</ID>
          <Description>"Character 9"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>statsPtr+48</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>5021</ID>
              <Description>"Name (do NOT change)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>99</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>-18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5022</ID>
              <Description>"Strength"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5023</ID>
              <Description>"Dexterity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+08</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5024</ID>
              <Description>"Constitution"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+0C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5025</ID>
              <Description>"Intelligence"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5026</ID>
              <Description>"Wisdom"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+14</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5027</ID>
              <Description>"Charisma"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+18</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>5028</ID>
          <Description>"Character 10"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>statsPtr+50</Address>
          <Offsets>
            <Offset>40</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>5029</ID>
              <Description>"Name (do NOT change)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>String</VariableType>
              <Length>99</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>-18</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5030</ID>
              <Description>"Strength"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+04</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5031</ID>
              <Description>"Dexterity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+08</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5032</ID>
              <Description>"Constitution"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+0C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5033</ID>
              <Description>"Intelligence"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5034</ID>
              <Description>"Wisdom"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+14</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>5035</ID>
              <Description>"Charisma"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+18</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>1159</ID>
      <Description>"Unlimited Prepared Spells (just keep selecting more, ignore slots)"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
aobscanmodule(prepareSpells,$process,7C ?? 48 8B ?? ?? ?? 8B ?? ?? ?? 00 00 ?? 00)
prepareSpells+00:
  db EB
registersymbol(prepareSpells)

aobscanmodule(prepareSpells2,$process,8B 00 3B ?? 0F 8E)
prepareSpells2+04:
  db EB 04
registersymbol(prepareSpells2)

[DISABLE]
prepareSpells+00:
  db 7C
unregistersymbol(prepareSpells)

prepareSpells2+04:
  db 0F 8E
unregistersymbol(prepareSpells2)

{
bg3.exe+2AA25C9: 49 8B 80 80 00 00 00     - mov rax,[r8+00000080]
bg3.exe+2AA25D0: 48 8D 14 88              - lea rdx,[rax+rcx*4]
bg3.exe+2AA25D4: 0F 57 C0                 - xorps xmm0,xmm0
bg3.exe+2AA25D7: 0F 11 45 50              - movups [rbp+50],xmm0
bg3.exe+2AA25DB: 48 89 55 50              - mov [rbp+50],rdx
bg3.exe+2AA25DF: 44 8B 3A                 - mov r15d,[rdx]
bg3.exe+2AA25E2: EB 80                    - jmp bg3.exe+2AA2564
bg3.exe+2AA25E4: 41 8B C6                 - mov eax,r14d
bg3.exe+2AA25E7: 4C 8B 64 24 30           - mov r12,[rsp+30]
bg3.exe+2AA25EC: 41 3B C7                 - cmp eax,r15d
// ---------- INJECTING HERE ----------
bg3.exe+2AA25EF: 7C 6B                    - jl bg3.exe+2AA265C
// ---------- DONE INJECTING  ----------
bg3.exe+2AA25F1: 48 8B 44 24 20           - mov rax,[rsp+20]
bg3.exe+2AA25F6: 8B 80 3C 01 00 00        - mov eax,[rax+0000013C]
bg3.exe+2AA25FC: A9 00 00 FF FF           - test eax,FFFF0000
bg3.exe+2AA2601: 66 41 0F 45 C6           - cmovne ax,r14w
bg3.exe+2AA2606: 66 89 44 24 2A           - mov [rsp+2A],ax
bg3.exe+2AA260B: 49 8B 9C 24 A8 00 00 00  - mov rbx,[r12+000000A8]
bg3.exe+2AA2613: 48 85 DB                 - test rbx,rbx
bg3.exe+2AA2616: 0F 84 7F 01 00 00        - je bg3.exe+2AA279B
bg3.exe+2AA261C: 49 63 84 24 B4 00 00 00  - movsxd  rax,dword ptr [r12+000000B4]
bg3.exe+2AA2624: 48 8D 0C C0              - lea rcx,[rax+rax*8]

// old
bg3_dx11.exe+DA5F9F: EB 9C                 - jmp bg3_dx11.exe+DA5F3D
bg3_dx11.exe+DA5FA1: 48 8B 83 80 00 00 00  - mov rax,[rbx+00000080]
bg3_dx11.exe+DA5FA8: 0F 57 C0              - xorps xmm0,xmm0
bg3_dx11.exe+DA5FAB: 48 8D 14 B0           - lea rdx,[rax+rsi*4]
bg3_dx11.exe+DA5FAF: 0F 11 45 40           - movups [rbp+40],xmm0
bg3_dx11.exe+DA5FB3: 48 89 55 40           - mov [rbp+40],rdx
bg3_dx11.exe+DA5FB7: 44 8B 32              - mov r14d,[rdx]
bg3_dx11.exe+DA5FBA: EB 81                 - jmp bg3_dx11.exe+DA5F3D
bg3_dx11.exe+DA5FBC: 33 C0                 - xor eax,eax
bg3_dx11.exe+DA5FBE: 41 3B C6              - cmp eax,r14d
// ---------- INJECTING HERE ----------
bg3_dx11.exe+DA5FC1: 7C 56                 - jl bg3_dx11.exe+DA6019
// ---------- DONE INJECTING  ----------
bg3_dx11.exe+DA5FC3: 48 8B 4C 24 28        - mov rcx,[rsp+28]
bg3_dx11.exe+DA5FC8: B2 01                 - mov dl,01
bg3_dx11.exe+DA5FCA: E8 11 E9 B2 FF        - call bg3_dx11.exe+8D48E0
bg3_dx11.exe+DA5FCF: 49 8B 9D A8 00 00 00  - mov rbx,[r13+000000A8]
bg3_dx11.exe+DA5FD6: 66 89 44 24 22        - mov [rsp+22],ax
bg3_dx11.exe+DA5FDB: 48 85 DB              - test rbx,rbx
bg3_dx11.exe+DA5FDE: 74 66                 - je bg3_dx11.exe+DA6046
bg3_dx11.exe+DA5FE0: 49 63 85 B4 00 00 00  - movsxd  rax,dword ptr [r13+000000B4]
bg3_dx11.exe+DA5FE7: 48 8D 0C C0           - lea rcx,[rax+rax*8]
bg3_dx11.exe+DA5FEB: 48 8D 34 CB           - lea rsi,[rbx+rcx*8]
}

{
bg3.exe+23728B2: 0F 57 C0              - xorps xmm0,xmm0
bg3.exe+23728B5: 0F 11 85 80 03 00 00  - movups [rbp+00000380],xmm0
bg3.exe+23728BC: EB 14                 - jmp bg3.exe+23728D2
bg3.exe+23728BE: 48 8B 00              - mov rax,[rax]
bg3.exe+23728C1: 0F 57 C0              - xorps xmm0,xmm0
bg3.exe+23728C4: 0F 11 85 A0 03 00 00  - movups [rbp+000003A0],xmm0
bg3.exe+23728CB: 48 89 85 A0 03 00 00  - mov [rbp+000003A0],rax
bg3.exe+23728D2: 4C 89 64 24 38        - mov [rsp+38],r12
bg3.exe+23728D7: 8B 00                 - mov eax,[rax]
bg3.exe+23728D9: 3B C3                 - cmp eax,ebx
// ---------- INJECTING HERE ----------
bg3.exe+23728DB: 0F 8E 2A 02 00 00     - jng bg3.exe+2372B0B
// ---------- DONE INJECTING  ----------
bg3.exe+23728E1: 8D 43 01              - lea eax,[rbx+01]
bg3.exe+23728E4: 89 85 80 03 00 00     - mov [rbp+00000380],eax
bg3.exe+23728EA: 4C 8D 85 80 03 00 00  - lea r8,[rbp+00000380]
bg3.exe+23728F1: 48 8D 55 98           - lea rdx,[rbp-68]
bg3.exe+23728F5: 48 8D 8D E1 00 00 00  - lea rcx,[rbp+000000E1]
bg3.exe+23728FC: E8 1F 3F 00 00        - call bg3.exe+2376820
bg3.exe+2372901: 48 8B 4D 88           - mov rcx,[rbp-78]
bg3.exe+2372905: 0F B6 5C 24 30        - movzx ebx,byte ptr [rsp+30]
bg3.exe+237290A: 83 79 44 FF           - cmp dword ptr [rcx+44],-01
bg3.exe+237290E: 0F 85 B9 00 00 00     - jne bg3.exe+23729CD

// old
bg3_dx11.exe+164DF37: 0F 11 85 70 02 00 00  - movups [rbp+00000270],xmm0
bg3_dx11.exe+164DF3E: 48 89 85 70 02 00 00  - mov [rbp+00000270],rax
bg3_dx11.exe+164DF45: EB 14                 - jmp bg3_dx11.exe+164DF5B
bg3_dx11.exe+164DF47: 48 8B 00              - mov rax,[rax]
bg3_dx11.exe+164DF4A: 0F 57 C0              - xorps xmm0,xmm0
bg3_dx11.exe+164DF4D: 0F 11 85 80 02 00 00  - movups [rbp+00000280],xmm0
bg3_dx11.exe+164DF54: 48 89 85 80 02 00 00  - mov [rbp+00000280],rax
bg3_dx11.exe+164DF5B: 4C 89 6C 24 48        - mov [rsp+48],r13
bg3_dx11.exe+164DF60: 8B 00                 - mov eax,[rax]
bg3_dx11.exe+164DF62: 3B C3                 - cmp eax,ebx
// ---------- INJECTING HERE ----------
bg3_dx11.exe+164DF64: 0F 8E B6 02 00 00     - jng bg3_dx11.exe+164E220
// ---------- DONE INJECTING  ----------
bg3_dx11.exe+164DF6A: 44 8D 6B 01           - lea r13d,[rbx+01]
bg3_dx11.exe+164DF6E: 44 89 6D 94           - mov [rbp-6C],r13d
bg3_dx11.exe+164DF72: 80 BD F1 01 00 00 00  - cmp byte ptr [rbp+000001F1],00
bg3_dx11.exe+164DF79: 75 4A                 - jne bg3_dx11.exe+164DFC5
bg3_dx11.exe+164DF7B: 48 8B 85 A0 01 00 00  - mov rax,[rbp+000001A0]
bg3_dx11.exe+164DF82: 84 C0                 - test al,al
bg3_dx11.exe+164DF84: 75 3F                 - jne bg3_dx11.exe+164DFC5
bg3_dx11.exe+164DF86: 83 BD 9C 01 00 00 00  - cmp dword ptr [rbp+0000019C],00
bg3_dx11.exe+164DF8D: 75 1B                 - jne bg3_dx11.exe+164DFAA
bg3_dx11.exe+164DF8F: 41 B0 01              - mov r8b,01
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>1140</ID>
      <Description>"Force a Level Up When You Save"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
aobscanmodule(saveLevel,$process,48 83 ?? ?? 48 8B ?? ?? 45 33 C0 48 8B ?? ?? E8 ?? ?? ?? ?? 8B 00 48 83 ?? ?? C3)
alloc(newmem,$1000,saveLevel)

label(code)
label(return)

newmem:
  mov ecx,[rax]
  mov [rax],1
  mov eax,ecx
code:
  //mov eax,[rax]
  add rsp,28
  jmp return

saveLevel+14:
  jmp newmem
  nop
return:
registersymbol(saveLevel)

[DISABLE]
saveLevel+14:
  db 8B 00 48 83 C4 28
unregistersymbol(saveLevel)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+8D9834

bg3.exe+8D9812: 0F 57 C0        - xorps xmm0,xmm0
bg3.exe+8D9815: 48 8B 5C 24 68  - mov rbx,[rsp+68]
bg3.exe+8D981A: 48 83 C4 40     - add rsp,40
bg3.exe+8D981E: 5F              - pop rdi
bg3.exe+8D981F: C3              - ret 
bg3.exe+8D9820: 48 83 EC 28     - sub rsp,28
bg3.exe+8D9824: 48 8B 51 28     - mov rdx,[rcx+28]
bg3.exe+8D9828: 45 33 C0        - xor r8d,r8d
bg3.exe+8D982B: 48 8B 49 30     - mov rcx,[rcx+30]
bg3.exe+8D982F: E8 2C 83 FF FF  - call bg3.exe+8D1B60
// ---------- INJECTING HERE ----------
bg3.exe+8D9834: 8B 00           - mov eax,[rax]
// ---------- DONE INJECTING  ----------
bg3.exe+8D9836: 48 83 C4 28     - add rsp,28
bg3.exe+8D983A: C3              - ret 
bg3.exe+8D983B: CC              - int 3 
bg3.exe+8D983C: CC              - int 3 
bg3.exe+8D983D: CC              - int 3 
bg3.exe+8D983E: CC              - int 3 
bg3.exe+8D983F: CC              - int 3 
bg3.exe+8D9840: 48 8B C4        - mov rax,rsp
bg3.exe+8D9843: 48 89 58 20     - mov [rax+20],rbx
bg3.exe+8D9847: 55              - push rbp
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1146</ID>
          <Description>"Save the game and you will be able to level each character."</Description>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>1183</ID>
          <Description>"Disable this script right after you're done, just to be sure!"</Description>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>1184</ID>
          <Description>"WARNING: The game will crash if you attempt to level"</Description>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>1185</ID>
          <Description>"a character that already has a level 12 class. So do that last!"</Description>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>1186</ID>
          <Description>"Disable the script, save the game, and load that save to remove level up alerts."</Description>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4973</ID>
      <Description>"Last Item Dropped UUID"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">// CanSitOn
[ENABLE]
aobscanmodule(canSitOnCmd,$process,C3 48 8B ?? ?? E8 ?? ?? ?? ?? 33 ?? 84 ?? B0 01)
alloc(newmem,$1000,canSitOnCmd)

label(itemDropUUID)
label(canSitOnCmdBkp)
label(return)

newmem:
  push rbx
  test rbx,rbx
  je @f
  mov rbx,[rbx+08]
  test rbx,rbx
  je @f
  mov rcx,itemDropUUID
  mov rdx,[rbx+00]
  mov [rcx+00],rdx
  mov rdx,[rbx+08]
  mov [rcx+08],rdx
  mov rdx,[rbx+10]
  mov [rcx+10],rdx
  mov rdx,[rbx+18]
  mov [rcx+18],rdx
  mov rdx,[rbx+20]
  mov [rcx+20],rdx
  mov rdx,[rbx+28]
  mov [rcx+28],rdx
  mov rdx,[rbx+30]
  mov [rcx+30],rdx
  mov rdx,[rbx+38]
  mov [rcx+38],rdx
  mov rdx,[rbx+40]
  mov [rcx+40],rdx
  mov rdx,[rbx+48]
  mov [rcx+48],rdx
  mov rdx,[rbx+50]
  mov [rcx+50],rdx
  mov rdx,[rbx+58]
  mov [rcx+58],rdx
@@:
  pop rbx
canSitOnCmdBkp:
  readmem(canSitOnCmd+0A,6)
  jmp return

align 10
itemDropUUID:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0

canSitOnCmd+0A:
  jmp newmem
  nop
return:
registersymbol(canSitOnCmd)
registersymbol(canSitOnCmdBkp)
registersymbol(itemDropUUID)

[DISABLE]
canSitOnCmd+0A:
  readmem(canSitOnCmdBkp,6)
unregistersymbol(canSitOnCmd)
unregistersymbol(canSitOnCmdBkp)
unregistersymbol(itemDropUUID)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+2681DC7

bg3.exe+2681DA9: 33 D2           - xor edx,edx
bg3.exe+2681DAB: 48 8B CB        - mov rcx,rbx
bg3.exe+2681DAE: E8 7D CD 8B FF  - call bg3.exe+1F3EB30
bg3.exe+2681DB3: 48 85 C0        - test rax,rax
bg3.exe+2681DB6: 75 06           - jne bg3.exe+2681DBE
bg3.exe+2681DB8: 48 83 C4 20     - add rsp,20
bg3.exe+2681DBC: 5B              - pop rbx
bg3.exe+2681DBD: C3              - ret 
bg3.exe+2681DBE: 48 8B 48 48     - mov rcx,[rax+48]
bg3.exe+2681DC2: E8 09 75 F8 FF  - call bg3.exe+26092D0
// ---------- INJECTING HERE ----------
bg3.exe+2681DC7: 33 C9           - xor ecx,ecx
// ---------- DONE INJECTING  ----------
bg3.exe+2681DC9: 84 C0           - test al,al
bg3.exe+2681DCB: B0 01           - mov al,01
bg3.exe+2681DCD: 0F 95 C1        - setne cl
bg3.exe+2681DD0: 89 4B 18        - mov [rbx+18],ecx
bg3.exe+2681DD3: 48 83 C4 20     - add rsp,20
bg3.exe+2681DD7: 5B              - pop rbx
bg3.exe+2681DD8: C3              - ret 
bg3.exe+2681DD9: CC              - int 3 
bg3.exe+2681DDA: CC              - int 3 
bg3.exe+2681DDB: CC              - int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>4496</ID>
          <Description>"Only the last 36 characters are likely needed for console commands"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>String</VariableType>
          <Length>256</Length>
          <Unicode>0</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>itemDropUUID</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4501</ID>
          <Description>"Get Item's Template UUID (must have console enabled)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

local uuid = readString("itemDropUUID", 256, false)
writeString(cmdStr1, uuid)
writeBytes(cmdStr1 + #uuid, 0)
print("Item: " .. uuid)

PrepareCall("GetTemplate")
writePointer(cmdArgs + 0x08, cmdStr1)
writeQword(cmdArgs + 0x18, 0)
local result = executeCodeEx(0, nil, cmdCall)
if result == 1 then
  uuid = readPointer(cmdArgs + 0x18)
  uuid = readString(uuid, 256, false)
  print("Template: " .. uuid)
else
  print("command failed")
end

{$asm}

[DISABLE]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4822</ID>
      <Description>"No Weight"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
aobscanmodule(weight,$process,74 05 0F ?? ?? EB 02 33 ?? 01)
weight+05:
  nop 2
registersymbol(weight)

[DISABLE]
weight+05:
  db EB 02
unregistersymbol(weight)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+21CE386

bg3.exe+21CE364: 49 8B CE        - mov rcx,r14
bg3.exe+21CE367: E8 84 52 F3 FF  - call bg3.exe+21035F0
bg3.exe+21CE36C: 48 8B 54 24 40  - mov rdx,[rsp+40]
bg3.exe+21CE371: 45 33 C0        - xor r8d,r8d
bg3.exe+21CE374: 49 8B 0E        - mov rcx,[r14]
bg3.exe+21CE377: 8B F0           - mov esi,eax
bg3.exe+21CE379: E8 72 3C 65 FE  - call bg3.exe+821FF0
bg3.exe+21CE37E: 48 85 C0        - test rax,rax
bg3.exe+21CE381: 74 05           - je bg3.exe+21CE388
bg3.exe+21CE383: 0F AF 30        - imul esi,[rax]
// ---------- INJECTING HERE ----------
bg3.exe+21CE386: EB 02           - jmp bg3.exe+21CE38A
// ---------- DONE INJECTING  ----------
bg3.exe+21CE388: 33 F6           - xor esi,esi
bg3.exe+21CE38A: 01 37           - add [rdi],esi
bg3.exe+21CE38C: 4C 8D 44 24 40  - lea r8,[rsp+40]
bg3.exe+21CE391: 49 8B D6        - mov rdx,r14
bg3.exe+21CE394: 48 8D 4C 24 20  - lea rcx,[rsp+20]
bg3.exe+21CE399: E8 02 FD FF FF  - call bg3.exe+21CE0A0
bg3.exe+21CE39E: 48 83 C3 10     - add rbx,10
bg3.exe+21CE3A2: 8B 08           - mov ecx,[rax]
bg3.exe+21CE3A4: 01 0F           - add [rdi],ecx
bg3.exe+21CE3A6: 48 3B DD        - cmp rbx,rbp
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4919</ID>
      <Description>"Learn Wizard Scroll on Any Character (activate before loading your save)"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{
bg3.exe+FB503E - 48 8D 05 0B609D03     - lea rax,[bg3.exe+498B050] ( ("hb050cfccgbefcg446fg89fcg3d389ce0327f") )

bg3.exe+FB5237 - 44 8B 85 60 03 00 00     - mov r8d,[rbp+00000360]

bg3.exe+FB4F4C - 0F84 A5030000         - je bg3.exe+FB52F7
bg3.exe+FB4F69 - 0F85 73030000         - jne bg3.exe+FB52E2
bg3.exe+FB4F89 - 0F84 53030000         - je bg3.exe+FB52E2

bg3.exe+FB508B - 0F84 A6010000         - je bg3.exe+FB5237	90 E9
bg3.exe+FB525F - 32 C0                 - xor al,al		B0 01

bg3.exe+215AFBD - E8 BE2E0000           - call bg3.exe+215DE80  IsWizard
bg3.exe+215AFC6 - 74 31                 - je bg3.exe+215AFF9

bg3.AK::WriteBytesBuffer::Clear+465E - 0F85 5A010000         - jne bg3.AK::WriteBytesBuffer::Clear+47BE		EB 04
bg3.AK::WriteBytesBuffer::Clear+47C7 - 32 C0                 - xor al,al

bg3.exe+215DF4B - 80 B9 87000000 00     - cmp byte ptr [rcx+00000087],00  (0)
bg3.exe+215DF52 - 75 68                 - jne bg3.exe+215DFBC
bg3.exe+1823CC9 - 0F84 D4000000         - je bg3.exe+1823DA3
}
[ENABLE]
aobscanmodule(isWizard1,$process,80 ?? ?? ?? 00 00 00 75 ?? 48 83 ?? ?? ?? 3B ?? 0F 85)
isWizard1+07:
  db EB
registersymbol(isWizard1)

aobscanmodule(isWizard2,$process,?? 84 ?? 0F 84 ?? ?? ?? ?? 84 ?? 0F 84 ?? ?? ?? ?? 80)
isWizard2:
  db EB 0F
registersymbol(isWizard2)

aobscanmodule(wizardLevel,$process,E8 ?? ?? ?? ?? ?? ?? ?? ?? 0F 8F ?? ?? ?? ?? 85 ?? 0F 84)
wizardLevel+09:
  db EB 0C
registersymbol(wizardLevel)

[DISABLE]
isWizard1+07:
  db 75
unregistersymbol(isWizard1)

isWizard2:
  db 40 84
unregistersymbol(isWizard2)

wizardLevel+09:
  db 0F 8F
unregistersymbol(wizardLevel)

{
// isWizard1
bg3.exe+F6601C: 42 8B 14 80           - mov edx,[rax+r8*4]
bg3.exe+F66020: 85 D2                 - test edx,edx
bg3.exe+F66022: 79 DC                 - jns bg3.exe+F66000
bg3.exe+F66024: 33 C0                 - xor eax,eax
bg3.exe+F66026: 0F 57 C0              - xorps xmm0,xmm0
bg3.exe+F66029: 0F 11 44 24 10        - movups [rsp+10],xmm0
bg3.exe+F6602E: C6 44 24 18 01        - mov byte ptr [rsp+18],01
bg3.exe+F66033: 33 D2                 - xor edx,edx
bg3.exe+F66035: 66 89 44 24 10        - mov [rsp+10],ax
bg3.exe+F6603A: 80 BA 87 00 00 00 00  - cmp byte ptr [rdx+00000087],00
// ---------- INJECTING HERE ----------
bg3.exe+F66041: 75 68                 - jne bg3.exe+F660AB
// ---------- DONE INJECTING  ----------
bg3.exe+F66043: 48 83 C1 28           - add rcx,28
bg3.exe+F66047: 49 3B C9              - cmp rcx,r9
bg3.exe+F6604A: 0F 85 60 FF FF FF     - jne bg3.exe+F65FB0
bg3.exe+F66050: 33 C9                 - xor ecx,ecx
bg3.exe+F66052: 0F 57 C0              - xorps xmm0,xmm0
bg3.exe+F66055: 41 0F 11 06           - movups [r14],xmm0
bg3.exe+F66059: 33 C0                 - xor eax,eax
bg3.exe+F6605B: 49 89 46 10           - mov [r14+10],rax
bg3.exe+F6605F: 41 C6 46 10 01        - mov byte ptr [r14+10],01
bg3.exe+F66064: 66 41 89 0E           - mov [r14],cx

// isWizard1 - Old
bg3.exe+215DF2E: 8B 04 B8              - mov eax,[rax+rdi*4]
bg3.exe+215DF31: 85 C0                 - test eax,eax
bg3.exe+215DF33: 79 DB                 - jns bg3.exe+215DF10
bg3.exe+215DF35: 33 C0                 - xor eax,eax
bg3.exe+215DF37: 0F 57 C0              - xorps xmm0,xmm0
bg3.exe+215DF3A: 0F 11 44 24 30        - movups [rsp+30],xmm0
bg3.exe+215DF3F: C6 44 24 38 01        - mov byte ptr [rsp+38],01
bg3.exe+215DF44: 33 C9                 - xor ecx,ecx
bg3.exe+215DF46: 66 89 44 24 30        - mov [rsp+30],ax
bg3.exe+215DF4B: 80 B9 87 00 00 00 00  - cmp byte ptr [rcx+00000087],00
// ---------- INJECTING HERE ----------
bg3.exe+215DF52: 75 68                 - jne bg3.exe+215DFBC
// ---------- DONE INJECTING  ----------
bg3.exe+215DF54: 48 83 C3 28           - add rbx,28
bg3.exe+215DF58: 48 3B DD              - cmp rbx,rbp
bg3.exe+215DF5B: 0F 85 67 FF FF FF     - jne bg3.exe+215DEC8
bg3.exe+215DF61: 33 C9                 - xor ecx,ecx
bg3.exe+215DF63: 0F 57 C0              - xorps xmm0,xmm0
bg3.exe+215DF66: 41 0F 11 06           - movups [r14],xmm0
bg3.exe+215DF6A: 33 C0                 - xor eax,eax
bg3.exe+215DF6C: 49 89 46 10           - mov [r14+10],rax
bg3.exe+215DF70: 41 C6 46 10 01        - mov byte ptr [r14+10],01
bg3.exe+215DF75: 66 41 89 0E           - mov [r14],cx
}

{
// isWizard2
bg3.exe+23645FF: 75 25                 - jne bg3.exe+2364626
bg3.exe+2364601: B0 01                 - mov al,01
bg3.exe+2364603: EB 23                 - jmp bg3.exe+2364628
bg3.exe+2364605: 48 69 C9 E0 00 00 00  - imul rcx,rcx,000000E0
bg3.exe+236460C: 49 03 88 80 00 00 00  - add rcx,[r8+00000080]
bg3.exe+2364613: 0F 57 C0              - xorps xmm0,xmm0
bg3.exe+2364616: 0F 11 85 40 01 00 00  - movups [rbp+00000140],xmm0
bg3.exe+236461D: 48 89 8D 40 01 00 00  - mov [rbp+00000140],rcx
bg3.exe+2364624: EB AA                 - jmp bg3.exe+23645D0
bg3.exe+2364626: 32 C0                 - xor al,al
// ---------- INJECTING HERE ----------
bg3.exe+2364628: 40 84 FF              - test dil,dil
// ---------- DONE INJECTING  ----------
bg3.exe+236462B: 0F 84 EC 00 00 00     - je bg3.exe+236471D
bg3.exe+2364631: 84 C0                 - test al,al
bg3.exe+2364633: 0F 84 E4 00 00 00     - je bg3.exe+236471D
bg3.exe+2364639: 80 7D 50 00           - cmp byte ptr [rbp+50],00
bg3.exe+236463D: 75 24                 - jne bg3.exe+2364663
bg3.exe+236463F: 80 7D 40 00           - cmp byte ptr [rbp+40],00
bg3.exe+2364643: 75 1A                 - jne bg3.exe+236465F
bg3.exe+2364645: 83 7D 3C 00           - cmp dword ptr [rbp+3C],00
bg3.exe+2364649: 75 0B                 - jne bg3.exe+2364656
bg3.exe+236464B: 33 D2                 - xor edx,edx

// isWizard2 - old
bg3.exe+1823C97: 66 0F 1F 84 00 00 00 00 00  - nop word ptr [rax+rax+00000000]
bg3.exe+1823CA0: 0F 10 03                    - movups xmm0,[rbx]
bg3.exe+1823CA3: 0F 29 44 24 40              - movaps [rsp+40],xmm0
bg3.exe+1823CA8: 48 8D 54 24 40              - lea rdx,[rsp+40]
bg3.exe+1823CAD: 49 8B 4E 40                 - mov rcx,[r14+40]
bg3.exe+1823CB1: E8 3A 80 93 00              - call bg3.exe+215BCF0
bg3.exe+1823CB6: 0F B6 F8                    - movzx edi,al
bg3.exe+1823CB9: 48 8D 53 10                 - lea rdx,[rbx+10]
bg3.exe+1823CBD: 49 8B 4E 38                 - mov rcx,[r14+38]
bg3.exe+1823CC1: E8 7A FB 93 00              - call bg3.exe+2163840
// ---------- INJECTING HERE ----------
bg3.exe+1823CC6: 40 84 FF                    - test dil,dil
// ---------- DONE INJECTING  ----------
bg3.exe+1823CC9: 0F 84 D4 00 00 00           - je bg3.exe+1823DA3
bg3.exe+1823CCF: 84 C0                       - test al,al
bg3.exe+1823CD1: 0F 84 CC 00 00 00           - je bg3.exe+1823DA3
bg3.exe+1823CD7: 48 8D 4D 30                 - lea rcx,[rbp+30]
bg3.exe+1823CDB: E8 80 FC FF FF              - call bg3.exe+1823960
bg3.exe+1823CE0: 48 8B 54 24 78              - mov rdx,[rsp+78]
bg3.exe+1823CE5: 48 85 D2                    - test rdx,rdx
bg3.exe+1823CE8: 74 3D                       - je bg3.exe+1823D27
bg3.exe+1823CEA: 48 8B 45 80                 - mov rax,[rbp-80]
bg3.exe+1823CEE: 8B C8                       - mov ecx,eax
}

{
// wizardLevel
bg3.exe+F6639A: 41 0F 11 47 10        - movups [r15+10],xmm0
bg3.exe+F6639F: 41 C6 47 18 01        - mov byte ptr [r15+18],01
bg3.exe+F663A4: F2 0F 10 45 C7        - movsd xmm0,[rbp-39]
bg3.exe+F663A9: F2 41 0F 11 07        - movsd [r15],xmm0
bg3.exe+F663AE: 41 89 4F 08           - mov [r15+08],ecx
bg3.exe+F663B2: E9 12 01 00 00        - jmp bg3.exe+F664C9
bg3.exe+F663B7: 48 8B 55 BF           - mov rdx,[rbp-41]
bg3.exe+F663BB: 48 8D 0D F6 12 BB 04  - lea rcx,[bg3.exe+5B176B8]
bg3.exe+F663C2: E8 89 5D 0D 00        - call bg3.exe+103C150
bg3.exe+F663C7: 41 39 45 3C           - cmp [r13+3C],eax
// ---------- INJECTING HERE ----------
bg3.exe+F663CB: 0F 8F C7 00 00 00     - jg bg3.exe+F66498
// ---------- DONE INJECTING  ----------
bg3.exe+F663D1: 85 C0                 - test eax,eax
bg3.exe+F663D3: 0F 84 BF 00 00 00     - je bg3.exe+F66498
bg3.exe+F663D9: 4C 8B 45 C7           - mov r8,[rbp-39]
bg3.exe+F663DD: 49 8B D5              - mov rdx,r13
bg3.exe+F663E0: 49 8B CC              - mov rcx,r12
bg3.exe+F663E3: E8 D8 FC FF FF        - call bg3.exe+F660C0
bg3.exe+F663E8: 3B 45 6F              - cmp eax,[rbp+6F]
bg3.exe+F663EB: 0F 9E C1              - setle cl
bg3.exe+F663EE: 80 BD 97 00 00 00 00  - cmp byte ptr [rbp+00000097],00
bg3.exe+F663F5: 74 3C                 - je bg3.exe+F66433

// wizardLevel - Old
bg3.exe+215AFE0: 0F 11 46 10           - movups [rsi+10],xmm0
bg3.exe+215AFE4: C6 46 18 01           - mov byte ptr [rsi+18],01
bg3.exe+215AFE8: F2 0F 10 45 B8        - movsd xmm0,[rbp-48]
bg3.exe+215AFED: F2 0F 11 06           - movsd [rsi],xmm0
bg3.exe+215AFF1: 89 46 08              - mov [rsi+08],eax
bg3.exe+215AFF4: E9 39 01 00 00        - jmp bg3.exe+215B132
bg3.exe+215AFF9: 48 8B 55 B8           - mov rdx,[rbp-48]
bg3.exe+215AFFD: 48 8D 0D 94 3E 5A 03  - lea rcx,[bg3.exe+56FEE98]
bg3.exe+215B004: E8 A7 FE 02 00        - call bg3.exe+218AEB0
bg3.exe+215B009: 41 8B 5D 3C           - mov ebx,[r13+3C]
// ---------- INJECTING HERE ----------
bg3.exe+215B00D: 3B D8                 - cmp ebx,eax
// ---------- DONE INJECTING  ----------
bg3.exe+215B00F: 0F 8F F1 00 00 00     - jg bg3.exe+215B106
bg3.exe+215B015: 85 C0                 - test eax,eax
bg3.exe+215B017: 0F 84 E9 00 00 00     - je bg3.exe+215B106
bg3.exe+215B01D: B8 01 00 00 00        - mov eax,00000001
bg3.exe+215B022: 3B D8                 - cmp ebx,eax
bg3.exe+215B024: 0F 4C D8              - cmovl ebx,eax
bg3.exe+215B027: 45 0F B6 45 0C        - movzx r8d,byte ptr [r13+0C]
bg3.exe+215B02C: 49 63 4F 48           - movsxd  rcx,dword ptr [r15+48]
bg3.exe+215B030: 85 C9                 - test ecx,ecx
bg3.exe+215B032: 74 2F                 - je bg3.exe+215B063
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>4928</ID>
      <Description>"Console Commands"</Description>
      <Options moHideChildren="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
aobscanmodule(console,$process,3B ?? 2C 73 ?? 48 8B ?? ?? 48 8B)
alloc(newmem,$1000,console)
alloc(cmdCode,$1000)
alloc(cmdStr0,$1000)
alloc(cmdStr1,$1000)
alloc(cmdStr2,$1000)
alloc(cmdStr3,$1000)
alloc(cmdStr4,$1000)

label(cmdCall)
label(cmdArgs)
label(cmdSelf)
label(cmdAddr)
label(cmdList)
label(consoleBkp)
label(return)

newmem:
  push rcx
  mov rcx,cmdList
  mov [rcx],rax
  pop rcx
consoleBkp:
  readmem(console+05,8)
  jmp return

cmdList:
  dq 0

console+05:
  jmp newmem
  nop 3
return:

cmdCode:
align 10
cmdCall:
sub rsp,38
mov rdx,cmdArgs
mov rax,cmdAddr
mov rcx,cmdSelf
mov rcx,[rcx]
call [rax]
add rsp,38
movzx rax,al
ret

align 10
cmdAddr:
  dq 0
align 10
cmdSelf:
  dq 0
align 10
cmdArgs:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0

registersymbol(console)
registersymbol(consoleBkp)
registersymbol(cmdList)
registersymbol(cmdCall)
registersymbol(cmdAddr)
registersymbol(cmdSelf)
registersymbol(cmdArgs)
registersymbol(cmdStr0)
registersymbol(cmdStr1)
registersymbol(cmdStr2)
registersymbol(cmdStr3)
registersymbol(cmdStr4)

[DISABLE]
console+05:
  readmem(consoleBkp, 8)
unregistersymbol(console)
unregistersymbol(consoleBkp)
dealloc(newmem)

unregistersymbol(cmdList)
unregistersymbol(cmdCode)
unregistersymbol(cmdStr0)
unregistersymbol(cmdStr1)
unregistersymbol(cmdStr2)
unregistersymbol(cmdStr3)
unregistersymbol(cmdStr4)
dealloc(cmdCode)
dealloc(cmdStr0)
dealloc(cmdStr1)
dealloc(cmdStr2)
dealloc(cmdStr3)
dealloc(cmdStr4)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+2818090

bg3.exe+2818064: 48 33 C4                 - xor rax,rsp
bg3.exe+2818067: 48 89 84 24 20 01 00 00  - mov [rsp+00000120],rax
bg3.exe+281806F: 4C 8B 2D 6A 45 31 03     - mov r13,[bg3.exe+5B2C5E0] // &lt;-- console
bg3.exe+2818076: 4D 8B F0                 - mov r14,r8
bg3.exe+2818079: C1 EA 03                 - shr edx,03
bg3.exe+281807C: 81 E2 FF FF FF 01        - and edx,01FFFFFF
bg3.exe+2818082: 4C 89 6C 24 40           - mov [rsp+40],r13
bg3.exe+2818087: 49 8B 45 08              - mov rax,[r13+08]
bg3.exe+281808B: 3B 50 2C                 - cmp edx,[rax+2C]
bg3.exe+281808E: 73 0A                    - jae bg3.exe+281809A
// ---------- INJECTING HERE ----------
bg3.exe+2818090: 48 8B 40 20              - mov rax,[rax+20]
// ---------- DONE INJECTING  ----------
bg3.exe+2818094: 48 8B 3C D0              - mov rdi,[rax+rdx*8]
bg3.exe+2818098: EB 02                    - jmp bg3.exe+281809C
bg3.exe+281809A: 33 FF                    - xor edi,edi
bg3.exe+281809C: 48 85 FF                 - test rdi,rdi
bg3.exe+281809F: 0F 84 7E 02 00 00        - je bg3.exe+2818323
bg3.exe+28180A5: 48 89 AC 24 68 01 00 00  - mov [rsp+00000168],rbp
bg3.exe+28180AD: 48 8B D7                 - mov rdx,rdi
bg3.exe+28180B0: 48 89 B4 24 78 01 00 00  - mov [rsp+00000178],rsi
bg3.exe+28180B8: 49 8B CD                 - mov rcx,r13
bg3.exe+28180BB: 4C 89 A4 24 38 01 00 00  - mov [rsp+00000138],r12
}

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+2F153D3

bg3.exe+2F153B7: 75 0A              - jne bg3.exe+2F153C3
bg3.exe+2F153B9: 48 8B 4F 10        - mov rcx,[rdi+10]
bg3.exe+2F153BD: FF 15 85 08 97 01  - call qword ptr [bg3.exe+4885C48]
bg3.exe+2F153C3: 48 8B 5C 24 30     - mov rbx,[rsp+30]
bg3.exe+2F153C8: 48 83 C4 20        - add rsp,20
bg3.exe+2F153CC: 5F                 - pop rdi
bg3.exe+2F153CD: C3                 - ret 
bg3.exe+2F153CE: CC                 - int 3 
bg3.exe+2F153CF: CC                 - int 3 
bg3.exe+2F153D0: C1 EA 03           - shr edx,03
// ---------- INJECTING HERE ----------
bg3.exe+2F153D3: 81 E2 FF FF FF 01  - and edx,01FFFFFF
// ---------- DONE INJECTING  ----------
bg3.exe+2F153D9: 3B 51 2C           - cmp edx,[rcx+2C]
bg3.exe+2F153DC: 73 09              - jae bg3.exe+2F153E7
bg3.exe+2F153DE: 48 8B 41 20        - mov rax,[rcx+20]
bg3.exe+2F153E2: 48 8B 04 D0        - mov rax,[rax+rdx*8]
bg3.exe+2F153E6: C3                 - ret 
bg3.exe+2F153E7: 33 C0              - xor eax,eax
bg3.exe+2F153E9: C3                 - ret 
bg3.exe+2F153EA: CC                 - int 3 
bg3.exe+2F153EB: CC                 - int 3 
bg3.exe+2F153EC: CC                 - int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>384</ID>
          <Description>"As Always: BACKUP YOUR SAVE Before Using Anything"</Description>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>4927</ID>
          <Description>"Load your save and register commands when the below value is greater than zero"</Description>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>4929</ID>
          <Description>"Command Count (do NOT change)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cmdList</Address>
          <Offsets>
            <Offset>2C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>357</ID>
          <Description>"Register Commands"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end
local commands = readPointer("cmdList")
if not commands or commands == 0 then
  print("please load a saved game first")
  assert(false,"can't activate yet")
  return
end
local size = readInteger(commands + 0x2C)
if size &lt;= 0 then
  print("please load a saved game first")
  assert(false,"can't activate yet")
  return
elseif size &gt; 3000 then
  size = 3000 -- just in case
end
commands = readPointer(commands + 0x20)
if not commands or commands == 0 then
  print("please load a saved game first")
  assert(false,"can't activate yet")
  return
end
COMMAND_SELF = {}
for i = 1, size do
  local addr = readPointer(commands)
  if addr and addr ~= 0 then
    local name = readPointer(addr + 0x08)
    if name and name ~= 0 then
      name = readString(name, 256, false)
      if type(name) == "string" then
        local self = readPointer(addr + 0x40)
        addr = readPointer(addr + 0x48)
        COMMAND_SELF[name] = self
        if addr &gt; 0x1000 then
          unregisterSymbol(name)
          registerSymbol(name, addr, true)
        end
      end
    end
  end
  commands = commands + 0x08
end

function PrepareCall(name)
  local cmd = getAddress(name)
  if cmd and cmd ~= 0 then
    local cmdAddr = getAddress("cmdAddr")
    local cmdSelf = getAddress("cmdSelf")
    writePointer(cmdAddr, cmd)
    writePointer(cmdSelf, COMMAND_SELF[name])
  else
    print("Register Commands failed to find command "..name..". Please reregister.")
    assert(false, "Command not registered")
  end
end

function ExecuteCall(FuncName)
  local cmd = getAddress(FuncName)
  if cmd and cmd ~= 0 then
    local cmdAddr = getAddress("cmdAddr")
    local cmdSelf = getAddress("cmdSelf")
    local cmdCall = getAddress("cmdCall")
    writePointer(cmdAddr, cmd)
    writePointer(cmdSelf, COMMAND_SELF[FuncName])
    return executeCodeEx(0, nil, cmdCall)
  else
    print("Register Commands failed to find command "..FuncName..". Please reregister.")
    assert(false, "Command not registered")
  end
end

function GetArgAt(i)
  return getAddress("cmdArgs") + 0x10 * i + 0x08
end

function GetStringAt(i)
  return getAddress("cmdStr"..i)
end

function ClearArg(i)
  SetArgToLong(i, 0)
end

function GetArgAsInteger(i)
  local arg = GetArgAt(i)
  return readInteger(arg)
end

function SetArgToInteger(i, value)
  local arg = GetArgAt(i)
  if value == nil then value = 0 end
  writeQword(arg, value)
end

function GetArgAsLong(i)
  local arg = GetArgAt(i)
  return readQword(arg)
end

function SetArgToLong(i, value)
  local arg = GetArgAt(i)
  if value == nil then value = 0 end
  writeQword(arg, value)
end

function GetArgAsFloat(i)
  local arg = GetArgAt(i)
  return readFloat(arg)
end

function SetArgToFloat(i, value)
  local arg = GetArgAt(i)
  if value == nil then value = 0 end
  writeFloat(arg, value)
end

function SetArgToPointer(i, value)
  local arg = GetArgAt(i)
  if value == nil then value = 0 end
  writePointer(arg, value)
end

function GetArgAsString(i)
  local arg = GetArgAt(i)
  local value = readPointer(arg)
  if value and value &gt; 0 then
    return readString(value, 256, false)
  end
  return nil
end

function SetArgToString(i, value)
  local str = GetStringAt(i)
  writeString(str, value)
  writeBytes(str + #value, 0)
  SetArgToPointer(i, str)
end

function GetHostCharacter()
  ClearArg(0)
  ExecuteCall("GetHostCharacter")
  return GetArgAsString(0)
end

function AddPassive(Entity, PassiveID)
  SetArgToString(0, Entity)
  if type(PassiveID) == "table" then
    for i = 1, #PassiveID do
      SetArgToString(1, PassiveID[i])
      ExecuteCall("AddPassive")
    end
  else
    SetArgToString(1, PassiveID)
    return ExecuteCall("AddPassive")
  end
end

function AddPassiveToPlayer(PassiveID)
  local player = GetHostCharacter()
  return AddPassive(player, PassiveID)
end

function AddPassiveToWeapon(PassiveID)
  local item = GetEquippedWeapon()
  return AddPassive(item, PassiveID)
end

function RemovePassive(Entity, PassiveID)
  SetArgToString(0, Entity)
  if type(PassiveID) == "table" then
    for i = 1, #PassiveID do
      local value = PassiveID[i]
      SetArgToString(1, value)
      ExecuteCall("RemovePassive")
    end
  else
    SetArgToString(1, PassiveID)
    return ExecuteCall("RemovePassive")
  end
end

function RemovePassiveFromPlayer(PassiveID)
  local player = GetHostCharacter()
  return RemovePassive(player, PassiveID)
end

function RemovePassiveFromWeapon(PassiveID)
  local item = GetEquippedWeapon()
  return RemovePassive(item, PassiveID)
end

function AddBoosts(Object, Boosts, SourceID, Cause)
  SetArgToString(0, Object)
  SetArgToLong(2, SourceID)
  SetArgToLong(3, Cause)
  if type(Boosts) == "table" then
    for i = 1, #Boosts do
      SetArgToString(1, Boosts[i])
      ExecuteCall("AddBoosts")
    end
  else
    SetArgToString(1, Boosts)
    return ExecuteCall("AddBoosts")
  end
end

function AddBoostsToPlayer(Boosts)
  local player = GetHostCharacter()
  return AddBoosts(player, Boosts, 0, 0)
end

function RemoveBoosts(Object, Boosts, RemoveOnlyFirstDescMatch, SourceID, Cause)
  SetArgToString(0, Object)
  SetArgToLong(2, RemoveOnlyFirstDescMatch)
  SetArgToLong(3, SourceID)
  SetArgToLong(4, Cause)
  if type(Boosts) == "table" then
    for i = 1, #Boosts do
      SetArgToString(1, Boosts[i])
      ExecuteCall("RemoveBoosts")
    end
  else
    SetArgToString(1, Boosts)
    return ExecuteCall("RemoveBoosts")
  end
end

function RemoveBoostsFromPlayer(Boosts)
  local player = GetHostCharacter()
  return RemoveBoosts(player, Boosts, 0, 0, 0)
end

function ApplyStatus(Object, Status, Duration, Force, Source)
  if Duration == nil then
    Duration = -1
  end
  SetArgToString(0, Object)
  SetArgToFloat(2, Duration)
  SetArgToLong(3, Force)
  SetArgToLong(4, Source)
  if type(Status) == "table" then
    for i = 1, #Status do
      SetArgToString(1, Status[i])
      ExecuteCall("ApplyStatus")
    end
  else
    SetArgToString(1, Status)
    return ExecuteCall("ApplyStatus")
  end
end

function ApplyStatusToPlayer(Status, Duration)
  local player = GetHostCharacter()
  return ApplyStatus(player, Status, Duration, 1, 0)
end

function ApplyStatusToWeapon(Status)
  local item = GetEquippedWeapon()
  return ApplyStatus(item, Status, Duration, 1, 0)
end

function RemoveStatus(Target, Status, Cause)
  SetArgToString(0, Target)
  SetArgToLong(2, Cause)
  if type(Status) == "table" then
    for i = 1, #Status do
      SetArgToString(1, Status[i])
      ExecuteCall("RemoveStatus")
    end
  else
    SetArgToString(1, Status)
    return ExecuteCall("RemoveStatus")
  end
end

function RemoveStatusFromPlayer(Status)
  local player = GetHostCharacter()
  return RemoveStatus(player, Status, 0)
end

function RemoveStatusFromWeapon(Status)
  local item = GetEquippedWeapon()
  return RemoveStatus(item, Status, 0)
end

function AddSpell(Character, Spell, ShowNotification, AddContainerSpells)
  SetArgToString(0, Character)
  SetArgToLong(2, ShowNotification)
  SetArgToLong(3, AddContainerSpells)
  if type(Spell) == "table" then
    for i = 1, #Spell do
      SetArgToString(1, Spell[i])
      ExecuteCall("AddSpell")
    end
  else
    SetArgToString(1, Status)
    return ExecuteCall("AddSpell")
  end
end

function AddSpellToPlayer(Spell)
  local player = GetHostCharacter()
  return AddSpell(player, Spell, 0, 1)
end

function RemoveSpell(Character, Spell, RemoveContainerSpells)
  SetArgToString(0, Character)
  SetArgToLong(2, RemoveContainerSpells)
  if type(Spell) == "table" then
    for i = 1, #Spell do
      SetArgToString(1, Spell[i])
      ExecuteCall("RemoveSpell")
    end
  else
    SetArgToString(1, Status)
    return ExecuteCall("RemoveSpell")
  end
end

function RemoveSpellFromPlayer(Spell)
  local player = GetHostCharacter()
  return RemoveSpell(player, Spell, 0)
end

function SetTag(Target, Tag)
  SetArgToString(0, Target)
  if type(Tag) == "table" then
    for i = 1, #Tag do
      SetArgToString(1, Tag[i])
      ExecuteCall("SetTag")
    end
  else
    SetArgToString(1, Tag)
    return ExecuteCall("SetTag")
  end
end

function SetTagOnPlayer(Tag)
  local player = GetHostCharacter()
  return SetTag(player, Tag)
end

function ClearTag(Target, Tag)
  SetArgToString(0, Target)
  if type(Tag) == "table" then
    for i = 1, #Tag do
      SetArgToString(1, Tag[i])
      ExecuteCall("ClearTag")
    end
  else
    SetArgToString(1, Tag)
    return ExecuteCall("ClearTag")
  end
end

function ClearTagOnPlayer(Tag)
  local player = GetHostCharacter()
  return ClearTag(player, Tag)
end

function IsTagged(Target, Tag)
  SetArgToString(0, Target)
  SetArgToString(1, Tag)
  SetArgToLong(2, 0)
  local result = ExecuteCall("IsTagged")
  if result == 1 then
    return GetArgAsInteger(2)
  else
    return nil
  end
end

function IsTaggedOnPlayer(Tag)
  local player = GetHostCharacter()
  return IsTagged(player, Tag)
end

function SetFlag(Flag, Object, DialogInstance, SendFlagSetEventIfChanged)
  SetArgToString(1, Object)
  SetArgToLong(2, DialogInstance)
  SetArgToLong(3, SendFlagSetEventIfChanged)
  if type(Flag) == "table" then
    for i = 1, #Flag do
      SetArgToString(0, Flag[i])
      ExecuteCall("SetFlag")
    end
  else
    SetArgToString(0, Flag)
    return ExecuteCall("SetFlag")
  end
end

function SetFlagOnPlayer(Flag)
  local player = GetHostCharacter()
  return SetFlag(Flag, player, 0, 1)
end

function GetFlag(Flag, Object)--: FlagState
  SetArgToString(0, Flag)
  SetArgToString(1, Object)
  SetArgToLong(2, 0)
  local result = ExecuteCall("GetFlag")
  if result == 1 then
    return GetArgAsInteger(2)
  else
    return nil
  end
end

function GetFlagOnPlayer(Flag)
  local player = GetHostCharacter()
  return GetFlag(Flag, player)
end

function ClearFlag(Flag, Object, DialogInstance, SendFlagClearEventIfChanged)
  SetArgToString(1, Object)
  SetArgToLong(2, DialogInstance)
  SetArgToLong(3, SendFlagClearEventIfChanged)
  if type(Flag) == "table" then
    for i = 1, #Flag do
      SetArgToString(0, Flag[i])
      ExecuteCall("ClearFlag")
    end
  else
    SetArgToString(0, Flag)
    return ExecuteCall("ClearFlag")
  end
end

function ClearFlagOnPlayer(Flag)
  local player = GetHostCharacter()
  return ClearFlag(Flag, player, 0, 1)
end

function TemplateAddTo(ItemTemplate, InventoryHolder, Count, ShowNotification)
  if Count == nil then Count = 1 end
  if ShowNotification == nil then ShowNotification = 0 end
  SetArgToString(1, InventoryHolder)
  SetArgToLong(2, Count)
  SetArgToLong(3, ShowNotification)
  ExecuteCall("TemplateAddTo")
  if type(ItemTemplate) == "table" then
    for i = 1, #ItemTemplate do
      SetArgToString(0, ItemTemplate[i])
      ExecuteCall("TemplateAddTo")
    end
  else
    SetArgToString(0, ItemTemplate)
    return ExecuteCall("TemplateAddTo")
  end
end

function TemplateAddToPlayer(ItemTemplate, Count)
  local player = GetHostCharacter()
  return TemplateAddTo(ItemTemplate, player, Count, 1)
end

function GetPosition(Target)--: X: Y: Z
  SetArgToString(0, Target)
  ClearArg(1)
  ClearArg(2)
  ClearArg(3)
  ExecuteCall("GetPosition")
  local x = GetArgAsFloat(1)
  local z = GetArgAsFloat(2)
  local y = GetArgAsFloat(3)
  return x, y, z
end

function GetPositionOfPlayer()
  local player = GetHostCharacter()
  return GetPosition(player)
end

function CreateAt(TemplateId, X, Y, Z, Temporary, PlaySpawn, SpawnFinishEvent)--: CreatedObject
  SetArgToString(0, TemplateId)
  SetArgToFloat(1, X)
  SetArgToFloat(2, Z)
  SetArgToFloat(3, Y)
  SetArgToLong(4, Temporary)
  SetArgToLong(5, PlaySpawn)
  SetArgToLong(6, SpawnFinishEvent)
  ClearArg(7)
  ExecuteCall("CreateAt")
  return GetArgAsString(7)
end

function CreateAtPosition(TemplateId, X, Y, Z)
  if X == nil or Y == nil or Z == nil then
    X, Y, Z = GetPositionOfPlayer()
  end
  return CreateAt(TemplateId, X, Y, Z, 0, 0, 0)
end

function CreateAtObject(TemplateId, Anchor, Temporary, PlaySpawn, SpawnFinishEvent, MatchOrientation)--: CreatedObject
  SetArgToString(0, TemplateId)
  SetArgToString(1, Anchor)
  SetArgToLong(2, Temporary)
  SetArgToLong(3, PlaySpawn)
  SetArgToLong(4, SpawnFinishEvent)
  SetArgToLong(5, MatchOrientation)
  ClearArg(6)
  ExecuteCall("CreateAtObject")
  return GetArgAsString(6)
end

function CreateAtPlayer(TemplateId)
  local player = GetHostCharacter()
  return CreateAtObject(TemplateId, player, 0, 0, 0, 0)
end

function GenerateTreasure(InventoryHolder, TreasureID, Level, Finder)
  SetArgToString(0, InventoryHolder)
  SetArgToString(1, TreasureID)
  SetArgToLong(2, Level)
  SetArgToString(3, Finder)
  ClearArg(4)
  return ExecuteCall("GenerateTreasure")
end

function GenerateTreasureBag(TreasureID)
  local player = GetHostCharacter()
  local bag = "3e6aac21-333b-4812-a554-376c2d157ba9"
  bag = CreateAtObject(bag, player, 0, 0, 0, 0)
  GenerateTreasure(bag, TreasureID, 12, player)
  return bag
end

function GetEquippedWeapon(Character)
  if Character == nil then
    Character = GetHostCharacter()
  end
  SetArgToString(0, Character)
  ClearArg(1)
  ExecuteCall("GetEquippedWeapon")
  return GetArgAsString(1)
end

Slotnames = {
  "Helmet",
  "Breast",
  "Cloak",
  "Melee Main Weapon",
  "Melee Offhand Weapon",
  "Ranged Main Weapon",
  "Ranged Offhand Weapon",
  "Underwear",
  "Boots",
  "Gloves",
  "Amulet",
  "Ring",
  "Ring2",
  "Wings",
  "Horns",
  "Overhead",
  "MusicalInstrument",
  "VanityBody",
  "VanityBoots"
}
for i = 1, #Slotnames do
  Slotnames[ Slotnames[i] ] = true
end
function GetEquippedItem(Character, Slotname)--: Item
  if Slotname == nil then
    Slotname = Character
    Character = GetHostCharacter()
  end
  if Slotname == nil then
    return nil
  end
  if Slotnames[Slotname] ~= true then
    print("Slotname must be one of the following: " .. table.concat(Slotnames, ", "))
    return nil
  end
  SetArgToString(0, Character)
  SetArgToString(1, Slotname)
  ClearArg(2)
  ExecuteCall("GetEquippedItem")
  return GetArgAsString(2)
end

{$asm}
[DISABLE]
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>4577</ID>
              <Description>"Character Resource Cheats"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4578</ID>
                  <Description>"Add Resources"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>4579</ID>
                      <Description>"Action Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(ActionPoint,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4580</ID>
                      <Description>"Bonus Action Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(BonusActionPoint,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4581</ID>
                      <Description>"Reaction Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(ReactionActionPoint,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4582</ID>
                      <Description>"Spell Slot (Level 1)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(SpellSlot,1,1)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4583</ID>
                      <Description>"Spell Slot (Level 2)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(SpellSlot,1,2)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4584</ID>
                      <Description>"Spell Slot (Level 3)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(SpellSlot,1,3)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4585</ID>
                      <Description>"Spell Slot (Level 4)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(SpellSlot,1,4)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4586</ID>
                      <Description>"Spell Slot (Level 5)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(SpellSlot,1,5)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4587</ID>
                      <Description>"Spell Slot (Level 6)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(SpellSlot,1,6)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4588</ID>
                      <Description>"Sorcery Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(SorceryPoint,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4589</ID>
                      <Description>"Arcane Recovery Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(ArcaneRecoveryPoint,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4590</ID>
                      <Description>"Warlock Spell Slot (Level 1)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(WarlockSpellSlot,1,1)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4591</ID>
                      <Description>"Warlock Spell Slot (Level 2)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(WarlockSpellSlot,1,2)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4592</ID>
                      <Description>"Warlock Spell Slot (Level 3)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(WarlockSpellSlot,1,3)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4593</ID>
                      <Description>"Warlock Spell Slot (Level 4)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(WarlockSpellSlot,1,4)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4594</ID>
                      <Description>"Warlock Spell Slot (Level 5)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(WarlockSpellSlot,1,5)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4595</ID>
                      <Description>"Bardic Inspiration (D6)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(BardicInspiration,1,0,d6)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4596</ID>
                      <Description>"Bardic Inspiration (D8)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(BardicInspiration,1,0,d8)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4597</ID>
                      <Description>"Rage Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(Rage,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4598</ID>
                      <Description>"Superiority Die"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(SuperiorityDie,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4599</ID>
                      <Description>"Wild Shape Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(WildShape,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4600</ID>
                      <Description>"Natural Recovery Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(NaturalRecoveryPoint,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4601</ID>
                      <Description>"Fungal Infestation Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(FungalInfestationCharge,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4602</ID>
                      <Description>"Lay On Hands Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(LayOnHandsCharge,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4603</ID>
                      <Description>"Channel Oath Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(ChannelOath,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4604</ID>
                      <Description>"Channel Divinity Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(ChannelDivinity,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4605</ID>
                      <Description>"War Priest Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(WarPriestActionPoint,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4606</ID>
                      <Description>"Ki Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(KiPoint,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4607</ID>
                      <Description>"Deflect Missiles Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(DeflectMissiles_Charge,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4608</ID>
                      <Description>"Sneak Attack Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(SneakAttack_Charge,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4609</ID>
                      <Description>"Tides of Chaos Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResource(TidesOfChaos,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4610</ID>
                  <Description>"Unlimited Resources"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>4611</ID>
                      <Description>"Action Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(ActionPoint,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4612</ID>
                      <Description>"Bonus Action Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(BonusActionPoint,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4613</ID>
                      <Description>"Reaction Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(ReactionActionPoint,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4614</ID>
                      <Description>"Spell Slot (Level 1)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(SpellSlot,0,1)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4615</ID>
                      <Description>"Spell Slot (Level 2)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(SpellSlot,0,2)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4616</ID>
                      <Description>"Spell Slot (Level 3)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(SpellSlot,0,3)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4617</ID>
                      <Description>"Spell Slot (Level 4)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(SpellSlot,0,4)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4618</ID>
                      <Description>"Spell Slot (Level 5)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(SpellSlot,0,5)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4619</ID>
                      <Description>"Spell Slot (Level 6)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(SpellSlot,0,6)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4620</ID>
                      <Description>"Sorcery Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(SorceryPoint,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4621</ID>
                      <Description>"Arcane Recovery Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(ArcaneRecoveryPoint,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4622</ID>
                      <Description>"Warlock Spell Slot (Level 1)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(WarlockSpellSlot,0,1)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4623</ID>
                      <Description>"Warlock Spell Slot (Level 2)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(WarlockSpellSlot,0,2)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4624</ID>
                      <Description>"Warlock Spell Slot (Level 3)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(WarlockSpellSlot,0,3)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4625</ID>
                      <Description>"Warlock Spell Slot (Level 4)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(WarlockSpellSlot,0,4)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4626</ID>
                      <Description>"Warlock Spell Slot (Level 5)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(WarlockSpellSlot,0,5)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4627</ID>
                      <Description>"Bardic Inspiration (D6)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(BardicInspiration,0,0,d6)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4628</ID>
                      <Description>"Bardic Inspiration (D8)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(BardicInspiration,0,0,d8)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4629</ID>
                      <Description>"Rage Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(Rage,1,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4630</ID>
                      <Description>"Superiority Die"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(SuperiorityDie,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4631</ID>
                      <Description>"Wild Shape Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(WildShape,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4632</ID>
                      <Description>"Natural Recovery Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(NaturalRecoveryPoint,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4633</ID>
                      <Description>"Fungal Infestation Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(FungalInfestationCharge,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4634</ID>
                      <Description>"Lay On Hands Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(LayOnHandsCharge,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4635</ID>
                      <Description>"Channel Oath Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(ChannelOath,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4636</ID>
                      <Description>"Channel Divinity Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(ChannelDivinity,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4637</ID>
                      <Description>"War Priest Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(WarPriestActionPoint,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4638</ID>
                      <Description>"Ki Point"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(KiPoint,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4639</ID>
                      <Description>"Deflect Missiles Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(DeflectMissiles_Charge,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4640</ID>
                      <Description>"Sneak Attack Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(SneakAttack_Charge,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4641</ID>
                      <Description>"Tides of Chaos Charge"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
AddBoostsToPlayer("ActionResourceConsumeMultiplier(TidesOfChaos,0,0)")
{$asm}
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4642</ID>
                  <Description>"Arcane Battery"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_MAGIC_ITEM_POWERED_CAST"

[ENABLE]
ApplyStatusToPlayer(status)

[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4643</ID>
                  <Description>"Quickening Incantation"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_ARCANE_TRICKSTER_ILLUSION_QUICKENING"

[ENABLE]
ApplyStatusToPlayer(status)

[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4644</ID>
                  <Description>"Adroit Caster"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_EXTENDED_TARGET_CANTRIPS"

[ENABLE]
ApplyStatusToPlayer(status)

[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4645</ID>
                  <Description>"Daredevil Proximity"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_CQC_RANGED_SPELL"

[ENABLE]
ApplyStatusToPlayer(status)

[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4646</ID>
                  <Description>"Quickspell Flinger"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_WARLOCK_QUICKENED_CANTRIPS"

[ENABLE]
ApplyStatusToPlayer(status)

[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4647</ID>
                  <Description>"Call Forth Allies"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = {
"END_ALLYABILITIES_MULTIPLESUMMONS",
"END_ALLYABILITIES_SHADOWADEPTS"
}

[ENABLE]
ApplyStatusToPlayer(status)

[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>388</ID>
              <Description>"On Demand Cheats"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>784</ID>
                  <Description>"RestoreParty"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, player)
ExecuteCall("RestoreParty")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4934</ID>
                  <Description>"Reset Illithid Powers"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
flag = {
  "GLO_Tadpoled_UsedToday1_36d218ea-3eab-481f-fdaa-4ee185e76c25",
  "GLO_Tadpoled_UsedToday2_b9d51e70-8963-e27f-a1fe-db5b9cfb3b1d"
}
[ENABLE]
ClearFlagOnPlayer(flag)
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>842</ID>
                  <Description>"Reset Cooldowns"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
[ENABLE]
if syntaxcheck then return end
local player = GetHostCharacter()
SetArgToString(0, player)
ExecuteCall("ResetCooldowns")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>361</ID>
                  <Description>"Restore Action Points"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, player)
SetArgToInteger(1, 10)
ExecuteCall("AddActionPoints")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>363</ID>
                  <Description>"Add 1000 Gold"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, player)
SetArgToLong(1, 1000)
ExecuteCall("AddGold")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>364</ID>
                  <Description>"Add 100 Experience"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, player)
SetArgToLong(1, 100)
ExecuteCall("AddExplorationExperience")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>843</ID>
                  <Description>"Add 1 Inspiration Point"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, player)
SetArgToFloat(1, 1)
local result = ExecuteCall("GiveInspirationPoints")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>879</ID>
                  <Description>"Add Tadpole"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, player)
SetArgToLong(1, 1)
ExecuteCall("AddTadpole")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>362</ID>
                  <Description>"Respec Selected Character"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, player)
ExecuteCall("RequestRespec")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1205</ID>
                  <Description>"Set Max Party Size Override"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToInteger(0, 20)
local result = ExecuteCall("SetMaxPartySizeOverride")
print(result and "First dismiss a party member and then you can add up to 20" or "command failed")

{$asm}
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4490</ID>
                  <Description>"Transform into Mind Flayer"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--local uuid = "0a92990c-addc-4e52-80f3-8ef926ca7960" -- Automaton_A
--local uuid = "47a6ceac-0788-4a51-a96e-3eabf7c11768" -- Alioramus_A
--local uuid = "8263edbc-154b-4c2c-aa23-125c590cce6c" -- BHAAL_Butler
--local uuid = "319efbbe-f9f3-4584-804e-3e17d47d1136" -- Beholder_Spectator
--local uuid = "07d79901-9cb9-41e7-a289-e8b38432d24e" -- Bipedal_Fey_Dryad
--local uuid = "3aeaed52-befb-4978-bb8b-b88314a16af5" -- CINE_BASE_Dragon
--local uuid = "c5cb9126-7654-4539-b141-a22063277c93" -- CINE_Dragon_Skeletal_Alive
--local uuid = "195f1804-e883-45ec-8586-1ad6820672f7" -- CINE_Humans_Female_Strong_Nightsong_NoHelmet
--local uuid = "a8240a68-1d48-4391-a878-765bcb1390e0" -- CINE_Mystra
--local uuid = "339f59a2-8c01-4834-a8d7-5a80fb50c972" -- CINE_S_UND_TheDrowNere
--local uuid = "dc2cbb9b-d6d6-438b-8fad-cb6fb1b2f87e" -- CINE_S_WYR_AnsurGhost
--local uuid = "1dec67df-4ff5-4369-a8eb-5b2f786cb19a" -- CINE_Shadow_Dog_A
--local uuid = "e3b5c786-71f1-485f-a1d0-55e42cd33261" -- CINE_Viconia_WolfDream_BASE_Elves_Female
--local uuid = "f96c7ea3-740e-40df-bbcc-d1d65e43dfa5" -- CINE_Viconia_Unhooded
--local uuid = "4032b967-ac05-4dc4-ab75-429774e1f614" -- Vampire_Spawn_Tiefling_Female
--local uuid = "458fa72d-10e7-46bd-896b-0bb60e71bb29" -- ORIGIN_Gale_God
--local uuid = "14ac9a0f-02ab-422f-b848-069c717d4203" -- QUEST_LOW_HouseOfHope_Incubus_FemaleForm
--local uuid = "ce83b623-fb0e-46c9-9d0d-d84907228df3" -- QUEST_LOW_HouseOfHope_Incubus_FemaleForm_NoPants
--local uuid = "2fbd583e-0507-41c7-be06-15b1f77797d8" -- S_GLO_Wyll_Cambion_CambionForm
--local uuid = "080a7d08-11a3-4a07-973e-0c48c1bcacca" -- S_GLO_Wyll_Cambion_CambionForm_Naked
--local uuid = "303f8bbc-0a71-4c85-a82f-6be9b92b8336" -- S_GLO_Wyll_Cambion_HumanForm
--local uuid = "f67ff967-753a-41ed-927b-7447fdccffb2" -- S_SHA_HUM_FS_Nightsong_FX
--local uuid = "6a23cdcd-f10b-4e5f-b222-b23a12a57f24" -- S_SHA_LastJusticiar
--local uuid = "05705023-c3c0-40b3-a6ed-f210e8136c1e" -- UNI_MizorasPact_Cambion
--local uuid = "0fa52982-b0b8-42ea-88ec-575602e18f6c" -- UNI_WYR_Circus_RealClown
--local uuid = "8bdc382b-a31e-4c1c-8987-656ceb333f05" -- Vlaakith
--local uuid = "e117f546-d817-42cb-a6b7-b9eecd3598e4" -- Werewolf
--local uuid = "f44ca723-5912-4634-93ad-ec5ae178fa1d" -- Slayer_A_Player
local uuid = "89e84eea-13f8-4a3e-a7a7-2280b8e0d0a7" -- QUEST_Mindflayer_Zevlor

--local ruleset = "9eef2bd2-604f-459a-83b2-3e6b7ce3bfde" -- GaseousForm
--local ruleset = "a0ddddc8-255f-4014-9f63-d7608eb1c2a0" -- Polymorph
--local ruleset = "4acc6277-6dcd-4110-9450-b9379beaedac" -- Physical
--local ruleset = "ceccc4eb-d774-4cd5-9147-12322b81b763" -- Disguise
--local ruleset = "ac4a5946-00cb-464f-9389-e3ac9e8b7e26" -- DeathCorpse
--local ruleset = "c7c3381e-b901-416e-a0c4-bc745e1ff54a" -- DisguiseKeepName
--local ruleset = "8194cfb6-4199-46d2-9027-613c302352aa" -- DisguiseWithCustomLooks
local ruleset = "b40d9ab4-57a7-4632-b8d7-188904b00606" -- DisguiseWithCustomLooksKeepNameAndIcon

local player = GetHostCharacter()

SetArgToString(0, player)
SetArgToString(1, uuid)
SetArgToString(2, ruleset)
ExecuteCall("Transform")
{$asm}

[DISABLE]
{$lua}
if syntaxcheck then return end

local player = GetHostCharacter()

SetArgToString(0,player)
ExecuteCall("RemoveTransforms")
{$asm}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4648</ID>
              <Description>"Movement Cheats"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4649</ID>
                  <Description>"Super Jump"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("JumpMaxDistanceMultiplier(5)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4650</ID>
                  <Description>"No Fall Damage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("FallDamageMultiplier(0.0)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4651</ID>
                  <Description>"Unlimited Movement"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("ActionResourceConsumeMultiplier(Movement,0,0)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4652</ID>
                  <Description>"Extra Movement"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("ActionResourceMultiplier(Movement,2000,0)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4653</ID>
                  <Description>"Increase Carry Capacity"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("CarryCapacityMultiplier(1000)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4654</ID>
              <Description>"Passive/Feat Cheats"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4745</ID>
                  <Description>"Immune to Disarm"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "ImmuneToDisarm"
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4655</ID>
                  <Description>"Add Mask of Many Faces"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MaskOfManyFaces"
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4656</ID>
                  <Description>"Add Superior Dark Vision"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "SuperiorDarkvision"
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4657</ID>
                  <Description>"Add Devil's Sight"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "DevilsSight"
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4658</ID>
                  <Description>"Add Halfling Lucky"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "Halfling_Lucky"
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4659</ID>
                  <Description>"Add Saving Throw Proficiency Feats"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"Resilient_Strength",
"Resilient_Dexterity",
"Resilient_Constitution",
"Resilient_Intelligence",
"Resilient_Wisdom",
"Resilient_Charisma"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4660</ID>
                  <Description>"Add Skill Proficiency Feats / Backgrounds"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"ReliableTalent",
"Performer",--MusicalInstrument
"FavoredEnemy_BountyHunter",--Investigation
"Background_Acolyte",--Insight,Religion
"Background_Charlatan",--Deception,SleightOfHand
"Background_Criminal",--Deception,Stealth
"Background_Entertainer",--Acrobatics,Performance
"Background_FolkHero",--AnimalHandling,Survival
"Background_GuildArtisan",--Insight,Persuasion
"Background_Noble",--History,Persuasion
"Background_Outlander",--Athletics,Survival
"Background_Sage",--Arcana,History
"Background_Soldier",--Athletics,Intimidation
"Background_Urchin",--SleightOfHand,Stealth
"Background_HauntedOne",--Medicine,Intimidation
"Background_TricksterHedonist",--Deception,Stealth
"Background_AstralZealot",--Athletics,Intimidation
"Background_WaterdavianMagus",--Arcana,History
"Background_CloisteredStray",--Religion,Survival
"Background_BladeOfFrontiers",--Athletics,Persuasion
"Background_BloodWarVeteran",--Athletics,Survival
"Background_UnderdarkExile",--Deception,Intimidation
"Background_VeteranMentor",--Insight,Intimidation
"Background_GroveKeeper",--AnimalHandling,Nature
"Background_LegendOfBaldur'sGate"--AnimalHandling,Perception
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4661</ID>
                  <Description>"Add Tactical Discipline"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "Tactical_Discipline"
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4662</ID>
                  <Description>"Add Lucky"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"Lucky",
"Lucky_Unlock"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4663</ID>
                  <Description>"Add Racial Passives"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"Drow_DrowWeaponTraining",
"Duergar_DuergarResilience",
"Dwarf_DwarvenCombatTraining",
"Dwarf_DwarvenResilience",
"MountainDwarf_DwarvenArmorTraining",
"Elf_WeaponTraining",
"FeyAncestry",
"Gith_MartialProdigy",
"Gnome_Cunning",
"RockGnome_ArtificersLore",
"DeepGnome_StoneCamouflage",
"Halfling_Lucky",
"Halfling_Brave",
"Tiefling_HellishResistance"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4664</ID>
                  <Description>"Add Assassinate Skills"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"Assassinate_Ambush",
"Assassinate_Initiative",
"Assassinate_Resource",
"Backstab"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4665</ID>
                  <Description>"Add Ranged Feats"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"CrossbowExpert_PointBlank",
"CrossbowExpert_Wounding",
"Sharpshooter_Bonuses",
"FightingStyle_Archery"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4666</ID>
                  <Description>"Add Weapon Proficiency"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"Proficiency_Battleaxes",
"Proficiency_Clubs",
"Proficiency_Daggers",
"Proficiency_Flails",
"Proficiency_Glaives",
"Proficiency_Greataxe",
"Proficiency_Greatclub",
"Proficiency_Greatswords",
"Proficiency_Halberds",
"Proficiency_HandCrossbows",
"Proficiency_Handaxes",
"Proficiency_HeavyCrossbows",
"Proficiency_Javelins",
"Proficiency_LightCrossbows",
"Proficiency_LightHammers",
"Proficiency_Longbows",
"Proficiency_Longswords",
"Proficiency_Maces",
"Proficiency_Mauls",
"Proficiency_Morningstars",
"Proficiency_Pikes",
"Proficiency_Quarterstaffs",
"Proficiency_Rapiers",
"Proficiency_Scimitars",
"Proficiency_Shortbows",
"Proficiency_Shortswords",
"Proficiency_Sickles",
"Proficiency_Spears",
"Proficiency_Tridents",
"Proficiency_Warhammers",
"Proficiency_Warpicks"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4667</ID>
                  <Description>"Add Armor Proficiency"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"LightlyArmored",
"ModeratelyArmored",
"HeavilyArmored"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4668</ID>
                  <Description>"Add Armor Mastery"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"MediumArmorMaster",
"HeavyArmorMaster"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4669</ID>
                  <Description>"Add Movement Feats"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"LightweightFrame",
"Spectator_FallResist",
--"SecondStoryWork",
--"FelineFall",
--"SpiderFallResistance",
"NaturalExplorer_ExpertClimber",
"FastMovement",
"Mobile_PassiveBonuses",
--"Mobile_CounterAttackOfOpportunity",
--"Mobile_DashAcrossDifficultTerrain",
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4670</ID>
                  <Description>"Add Jump Feats"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"Athlete_StandUp",
"MAG_TheThorns_VeilOfTheWind_Passive",
"MAG_JumpBoost_Passive",
"MAG_BarbMonk_Dexterity_Passive",
"MAG_RavenCharm_Passive",
"RemarkableAthlete_Jump",
"UnarmoredMovement_DifficultTerrain"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4671</ID>
                  <Description>"Add Initiative"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"Alert",
"FeralInstinct",
"ARM_Ambusher_1_Passive",
"ARM_Ambusher_2_Passive",
"MAG_PHB_ElvenChain_AddedEffect_Armor_Passive",
"MAG_PHB_Sentinel_Shield_Passive",
"MAG_Monk_Martial_Lethality_Passive",
"MAG_Bhalist_Hat_Passive",
"MAG_InitiativeBonus_1_Passive",
"MAG_InitiativeBonus_2_Passive",
"MAG_InitiativeWeapon_Passive"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4672</ID>
                  <Description>"Add Attack Skills"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"StalkersFlurry",
"ExtraAttack",
"ExtraAttack_2",
"FastHands",
"SavageAttacker",
"BrutalCritical",
"ImprovedCritical",
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4673</ID>
                  <Description>"Add One With Shadows"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "OneWithShadows"
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4674</ID>
                  <Description>"Add Tough"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "Tough"
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4675</ID>
                  <Description>"Add Eldritch Blast Buffs"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"AgonizingBlast",
"RepellingBlast",
"EldritchSpear",
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4676</ID>
                  <Description>"Add Transmutation Stone"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"TransmutationStone",
"TransmutationStone_Activation"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4677</ID>
                  <Description>"Add Undead Thralls"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"UndeadThrall_BetterSummon",
"UndeadThrall_ExtraSummon",
"UndeadThrall_FreeSpell"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4678</ID>
                  <Description>"Add Pact of the Blade"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"PactOfTheBlade",
"ImprovedPactWeapon_AttackBonus",
"ImprovedPactWeapon_ExpandedChoices"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4679</ID>
                  <Description>"Add Dungeon Delver"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"DungeonDelver_Perception",
"DungeonDelver_ResistTraps"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4680</ID>
                  <Description>"Add Speak with Dead"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "WhispersOfTheGrave"
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4681</ID>
                  <Description>"Add Tadpole Passives"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"TAD_Charm",
"TAD_CullTheWeak",
"TAD_Displace",
"TAD_DrainAbility",
"TAD_Expertise",
"TAD_Freecast",
"TAD_LuckOfTheFarRealms",
"TAD_MindSanctuary",
"TAD_PeaceBreaker",
"TAD_PerilousStakes",
"TAD_PsionicBacklash",
"TAD_PsionicDominance",
"TAD_IllithidPersuasion"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4683</ID>
                  <Description>"Add Story Mode Bonuses"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "PlayerBonusesStory"
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4836</ID>
              <Description>"Healing Passives"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4831</ID>
                  <Description>"Drink Blood from Surfaces"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "LOW_Cazador_SpawnBuff_Astarion_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4837</ID>
                  <Description>"Heal On Melee Attack"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "LOW_Sarevok_Essence_Amelyssan"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4856</ID>
                  <Description>"Maximize Healing"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_PHB_PeriaptofWoundClosure_Amulet_Maximize_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4844</ID>
              <Description>"Critical Hit Passives"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4903</ID>
                  <Description>"Improved Critical Hit"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "ImprovedCritical"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4863</ID>
                  <Description>"Reduce Critical Attack Threshold"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_WYR_Orin_Bhaalist_Dagger_ImprovedCritical_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4872</ID>
                  <Description>"Reduce Critical Attack Threshold"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_TheClover_Rearrangement_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4879</ID>
                  <Description>"Reduce Critical Attack Threshold"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Sarevok_HornedHelmet_DeathbringerSight_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4874</ID>
                  <Description>"Reduce Critical Attack Threshold"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_TheDueller_ImprovedDuelist_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4829</ID>
                  <Description>"Covert Critical (While Obscured)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Shadow_CriticalBoostWhileObscured_Helmet_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4848</ID>
                  <Description>"Skilled Skullduggery (While Stealthed)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Critical_Hiding_ReduceCriticalRange_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4904</ID>
                  <Description>"Always Crit When Below 40% Hitpoints"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "Scar_Fury_Gur"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4830</ID>
              <Description>"Combat Passives"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4843</ID>
                  <Description>"Automatically Revive When Downed"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_LowHP_1HP_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4907</ID>
                  <Description>"Evade Area Damage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "Evasion"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4905</ID>
                  <Description>"Improved Bardic Inspiration (+1 Attack Roll)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "SCE_TieflingFollowup_BardicInspiration_Attack_Ability"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4832</ID>
                  <Description>"Unnatural Growth (+1 Action Point)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "LOW_GithProdigy_UnnaturalGrowth"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4840</ID>
                  <Description>"Cold Damage Creates Ice Surface"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Frost_GenerateSurfaceOnColdDamage_Ring_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4842</ID>
                  <Description>"Disengage Drops Fog Cloud"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Shadow_FogOfCloudDisengage_Cloak_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4847</ID>
                  <Description>"Difficult Terrain Immunity"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_TerrainWalker_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4849</ID>
                  <Description>"Bloodfeeder (On Kill)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Zhentarim_BloodfeederBlade_Rapier_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4870</ID>
                  <Description>"Invisibility On Kill"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "UNI_DarkUrge_Stealth_Expertise_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4871</ID>
                  <Description>"Aura of Murder Passive"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Bhaalist_Aura_Of_Murder_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4893</ID>
                  <Description>"Ranged Attack Roll Bonus"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Marksmanship_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4906</ID>
                  <Description>"Increased Initiative"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"ARM_Ambusher_1_Passive", -- Initiative(1)
"ARM_Ambusher_2_Passive", -- Initiative(2)
"FeralInstinct", -- Initiative(3);StatusImmunity(SURPRISED)
"MAG_PHB_ElvenChain_AddedEffect_Armor_Passive", -- Initiative(2);Advantage(SavingThrow, Dexterity)
"MAG_PHB_Sentinel_Shield_Passive", -- Initiative(3);Advantage(Skill, Perception)
"MAG_Bhalist_Hat_Passive", -- Initiative(2);DarkvisionRange(3)
"MAG_InitiativeBonus_1_Passive", -- Initiative(1)
"MAG_InitiativeBonus_2_Passive", -- Initiative(2)
"MAG_InitiativeWeapon_Passive" -- Initiative(1);Advantage(Skill, Perception)
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4838</ID>
              <Description>"Attack Passives"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4853</ID>
                  <Description>"Infernal Acuity (+1 Attack Roll)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Infernal_Metal_AttackBonus_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4835</ID>
                  <Description>"+2 Attack Roll; +2 Damage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_AttackDamage_Bonus_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4884</ID>
                  <Description>"+2 Attack Roll"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Monk_Martial_Lethality_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4878</ID>
                  <Description>"+1 Attack Roll"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_OfSwordmaster_Gloves_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4902</ID>
                  <Description>"+2 Attack Roll When Hurt"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Barbarian_Hide_Helmet_Bloodseeker_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4881</ID>
                  <Description>"+1D4 Attack Roll (When Hurt)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_TheWoundSeeker_Greatsword_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4862</ID>
                  <Description>"Advantage Against Wet Targets (...that's what she said)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_LC_Umberlee_Cold_Sickle_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4857</ID>
                  <Description>"Attacks Gain Knockback"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "LOW_Chasm_Mangle_Pushback"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4877</ID>
                  <Description>"Tippler's Rage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_TWN_Brewer_DrunkardRage_Explosion_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4890</ID>
                  <Description>"Ignore Physical Resistances"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Barbarian_Gloves_BoneSpike_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4867</ID>
              <Description>"Ranged Attack Passives"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4845</ID>
                  <Description>"Double Ranged Proficiency Bonus"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_DoubleProficiencyBonusToRangedAttack_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4885</ID>
                  <Description>"Ranged Attacks Apply Bane"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_BG_Harold_HeavyCrossbow_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4869</ID>
                  <Description>"Ranged Attacks Turn Undead"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_WeaponAction_UndeadTurning_Ammunition_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4868</ID>
                  <Description>"Darkveil Precision (+1D4 Ranged Attack Rolls While Obscured)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Shadow_Blinding_Bow_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4852</ID>
              <Description>"Throw Weapon Passives"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4834</ID>
                  <Description>"Dagger Thrower (+8 Throw Damage)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "LOW_Guildhall_DaggerThrower"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4850</ID>
                  <Description>"Kushigo's Might (+1D4 Throw Damage)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Monk_Magic_Gloves_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4851</ID>
                  <Description>"Throwing Boost (+1D4 Throw Damage)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Harpers_RingOfProjection_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4839</ID>
              <Description>"Spell Passives"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4882</ID>
                  <Description>"Free Cast Level 1 Spells (Can Still Upcast)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_FreeCast_Level3_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4841</ID>
                  <Description>"Daredevil Proximity (Melee Spells)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_ClosQuarterRangedSpell_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4864</ID>
                  <Description>"Increase Damage on Elemental Cantrips"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_ElementalGish_CantripBooster_Amulet_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4891</ID>
                  <Description>"Concentration Advantage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Multitasking_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4892</ID>
                  <Description>"Cantrip Damage Adds Charisma Modifier"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_CharismaCaster_CantripBooster_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4875</ID>
                  <Description>"+3 Spell Attack Roll"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Legendary_ArcaneEnchantment_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4858</ID>
                  <Description>"+2 Spell Attack Roll"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_ArcaneEnchantment_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4846</ID>
                  <Description>"+1 Spell Attack Roll"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_CQCaster_CloseRangedSpellMastery_Gloves_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4859</ID>
                  <Description>"+1 Spell Attack Roll"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_ArcaneEnchantment_Lesser_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4860</ID>
                  <Description>"+2 Spell Save DC"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_SpellSaveDC_Enchantment_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4861</ID>
                  <Description>"+1 Spell Save DC"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_SpellSaveDC_Enchantment_Lesser_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4880</ID>
                  <Description>"Sorcery Amulet"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_OfGreaterSorcery_Amulet_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4910</ID>
                  <Description>"Sorcery Amulet"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_OfGreaterSorcery_Amulet_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4866</ID>
                  <Description>"Arcane Trickster Ring"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_ArcaneTrickster_Ring_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4889</ID>
                  <Description>"Consume Life Essence Passive"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_GreaterNecromancyStaff_CosumeLifeEssence_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4876</ID>
                  <Description>"Mage Hand Uses Bonus Action"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Githborn_MageHandSupport_Gloves_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4899</ID>
              <Description>"Spell Resource Passives"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4888</ID>
                  <Description>"+1 Level 1 Spell Slot"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_AdditionalSpellSlot_Level1_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4895</ID>
                  <Description>"+1 Level 1 Spell Slot (after long rest)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_ShieldOfDevotion_Cooldown_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4898</ID>
                  <Description>"+1 Level 1 Spell Slot (after long rest)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_DeathKnightShield_Cooldown_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4886</ID>
                  <Description>"+1 Level 2 Spell Slot"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_AdditionalSpellSlot_Level2_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4896</ID>
                  <Description>"+1 Level 2 Spell Slot (after long rest)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_LC_TheAmplifier_Amulet_Cooldown_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4887</ID>
                  <Description>"+1 Level 3 Spell Slot"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_AdditionalSpellSlot_Level3_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4883</ID>
                  <Description>"+2 Sorcery Points"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_ExtraSorcery_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4894</ID>
                  <Description>"+1 Sorcery Point (after long rest)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_OfGreaterSorcery_Amulet_Cooldown_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4897</ID>
                  <Description>"+1 Channel Divinity"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_OfTheDevout_Amulet_Cooldown_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4901</ID>
                  <Description>"+1 Wildshape"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_Druid_ExtraWildShape_Cooldown_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4900</ID>
                  <Description>"+1 Bardic Inspiration"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_WondrousGloves_Cooldown_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4828</ID>
              <Description>"Dice Roll Passives"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4825</ID>
                  <Description>"Dark One's Own Luck"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "DarkOnesOwnLuck"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4827</ID>
                  <Description>"Reliable Talent"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "ReliableTalent"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4826</ID>
                  <Description>"Tactical Discipline"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "Tactical_Discipline"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4685</ID>
                  <Description>"Bardic Inspirations"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"BardicInspiration_Ability",
"BardicInspiration_Ability_d8",
"BardicInspiration_Ability_d10",
"CombatInspiration_Ability_d10"
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4682</ID>
                  <Description>"Balance / Body Aim / Elegant / Stealthy (Magic Armor)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = {
"ARM_Elegant_1_Passive", -- RollBonus(SavingThrow,1,Charisma); RollBonus(RawAbility,1,Charisma)
"ARM_Elegant_2_Passive", -- RollBonus(SavingThrow,2,Charisma); RollBonus(RawAbility,2,Charisma)
"ARM_Balance_1_Passive", -- RollBonus(SavingThrow,1,Dexterity);RollBonus(RawAbility,1,Dexterity)
"ARM_Balance_2_Passive", -- RollBonus(SavingThrow,2,Dexterity);RollBonus(RawAbility,2,Dexterity)
"ARM_BodyAid_1_Passive", -- RollBonus(SavingThrow,1,Strength); RollBonus(RawAbility,1,Strength)
"ARM_BodyAid_2_Passive", -- RollBonus(SavingThrow,2,Strength); RollBonus(RawAbility,2,Strength)
"ARM_Stealthy_1_Passive",-- RollBonus(SkillCheck, 1,Stealth)
"ARM_Stealthy_2_Passive" -- RollBonus(SkillCheck, 2,Stealth)
}
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4833</ID>
                  <Description>"Advantage on Saving Throws"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "LOW_Cazador_SpawnBuff_002_Passive"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4684</ID>
              <Description>"Dice Roll Boosts"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4686</ID>
                  <Description>"Set Minimum Roll"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("MinimumRollResult(RawAbility,20);MinimumRollResult(SkillCheck,20);MinimumRollResult(SavingThrow,20)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4687</ID>
                  <Description>"Add Saving Throw Proficiency Bonus"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("ProficiencyBonus(SavingThrow,Strength);ProficiencyBonus(SavingThrow,Dexterity);ProficiencyBonus(SavingThrow,Constitution);ProficiencyBonus(SavingThrow,Intelligence);ProficiencyBonus(SavingThrow,Wisdom);ProficiencyBonus(SavingThrow,Charisma)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4688</ID>
                  <Description>"Add Skill Proficiency, Expertise, and Advantage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local skills = {
"WarriorLore",
"RangerLore",
"RogueLore",
"SingleHanded",
"TwoHanded",
"Investigation",
"Ranged",
"Shield",
"Perception",
"PhysicalArmorMastery",
"Arcana",
"Insight",
"FireSpecialist",
"WaterSpecialist",
"AirSpecialist",
"Survival",
"Religion",
"AnimalHandling",
"Polymorph",
"Repair",
"Stealth",
"SleightOfHand",
"Thievery",
"History",
"Crafting",
"Performance",
"Deception",
"Intimidation",
"Reason",
"Persuasion",
"Leadership",
"Luck",
"DualWielding",
"Wand",
"MagicArmorMastery",
"Medicine",
"Perseverance",
"Runecrafting",
"Brewmaster",
"Athletics",
"Acrobatics",
"Sulfurology"
}
local boost = "ProficiencyBonus(Skill,%s);ExpertiseBonus(%s);Advantage(Skill,%s)"
for i = 1, #skills do
  local skill = skills[i]
  skills[i] = string.format(boost, skill, skill, skill)
end
AddBoostsToPlayer(skills)
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4689</ID>
                  <Description>"Add Heavy Armor"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
--local boost = "Proficiency(LightArmor)"
--local boost = "Proficiency(MediumArmor)"
local boost = "Proficiency(HeavyArmor)"
--local boost = "Proficiency(MusicalInstrument)"
AddBoostsToPlayer(boost)
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4690</ID>
                  <Description>"Add Advantage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("Advantage(AllSavingThrows);Advantage(AllAbilities);Advantage(AttackRoll)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4691</ID>
                  <Description>"Add Roll Bonus"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("RollBonus(SkillCheck,50);RollBonus(RawAbility,50);RollBonus(SavingThrow,50)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4692</ID>
              <Description>"Random Cheats"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4693</ID>
                  <Description>"Add/Remove Fireball Spell"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
spell = {
"Projectile_Fireball",
"Projectile_Fireball_4",
"Projectile_Fireball_5",
"Projectile_Fireball_6",
}
[ENABLE]
AddSpellToPlayer(spell)
[DISABLE]
RemoveSpellFromPlayer(spell)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4694</ID>
                  <Description>"Add 50 Max Health"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("IncreaseMaxHP(50)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4695</ID>
                  <Description>"Add 16 Armor Class"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("AC(16)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4696</ID>
                  <Description>"Add All Resistance"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("Resistance(Slashing,Resistant);Resistance(Piercing,Resistant);Resistance(Bludgeoning,Resistant);Resistance(Acid,Resistant);Resistance(Thunder,Resistant);Resistance(Necrotic,Resistant);Resistance(Fire,Resistant);Resistance(Lightning,Resistant);Resistance(Cold,Resistant);Resistance(Psychic,Resistant);Resistance(Poison,Resistant);Resistance(Radiant,Resistant);Resistance(Force,Resistant)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4697</ID>
                  <Description>"Immune to Status Effects"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("StatusImmunity(BURNING);StatusImmunity(WILD_MAGIC_BURNING);StatusImmunity(DIFFICULT_TERRAIN);StatusImmunity(DIFFICULT_TERRAIN_MUD);StatusImmunity(DIFFICULT_TERRAIN_VINES);StatusImmunity(SG_Possessed);StatusImmunity(SG_Frightened);StatusImmunity(SLEEPING);StatusImmunity(SLEEP);StatusImmunity(UNCONSCIOUS);StatusImmunity(PARALYZED);StatusImmunity(HOLD_PERSON)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4698</ID>
                  <Description>"Add Lightning Damage Attacks"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("CharacterWeaponDamage(1d6,Lightning)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4699</ID>
                  <Description>"Unlock Teleport"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("UnlockSpell(Target_WildMagic_Teleport)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4700</ID>
                  <Description>"Max All Stats"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("Ability(Strength,31,20);Ability(Dexterity,31,20);Ability(Constitution,31,20);Ability(Intelligence,31,20);Ability(Wisdom,31,20);Ability(Charisma,31,20)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4701</ID>
                  <Description>"Toggle Fog of War"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToLong(0, 1)
ExecuteCall("ShroudRender")
[DISABLE]
SetArgToLong(0, 0)
ExecuteCall("ShroudRender")
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4702</ID>
                  <Description>"God Mode"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("DamageReduction(All, Flat, 100)")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4798</ID>
                  <Description>"Enlarge Character"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("Weight(100);WeightCategory(+4);ObjectSize(+4)")
[DISABLE]
RemoveBoostsFromPlayer("Weight(100);WeightCategory(+4);ObjectSize(+4)")
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4908</ID>
                  <Description>"Flaming Sphere Aura"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "FlamingSphere_State_6"
[ENABLE]
AddPassiveToPlayer(passive)
[DISABLE]
RemovePassiveFromPlayer(passive)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4703</ID>
              <Description>"Character Tags"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4704</ID>
                  <Description>"Add Pet Pal"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("dc860a81-f3c2-4c1a-ab90-e7583324845c")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4705</ID>
                  <Description>"Add Detect Thoughts"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("7e0395f8-aa53-4549-9af3-e2d203d678ee")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4706</ID>
                  <Description>"Add Comprehand Languages"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("1d6e36a6-d757-449b-8040-2af3f1a99c3a")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4707</ID>
                  <Description>"Add Hermit"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("2fa3f042-2b50-41b2-8045-39ddd4421ca9")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4708</ID>
                  <Description>"Add Urchin"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("2faee476-d77b-42a7-a4c6-2b9ac934673c")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4709</ID>
                  <Description>"Add Rogue"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("f8a0608b-666c-4be6-a49c-03b369c10bd2")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4710</ID>
                  <Description>"Add Entertainer"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("bd3cfefd-5fe2-47ea-bd3c-e99eaad9b714")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4711</ID>
                  <Description>"Add Beast Master"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("bfaccaca-e512-43ea-89cc-372b5d1925ee")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4712</ID>
                  <Description>"Add Outlander"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("d81df6f9-9f6e-4146-841a-9f285e6ee879")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4713</ID>
                  <Description>"Add Bard"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("d93434bd-6b71-4789-b128-ee24156057cc")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4714</ID>
                  <Description>"Add Wizard"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("6fe3ae27-dc6c-4fc9-9245-710c790c396c")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4715</ID>
                  <Description>"Make Tiny (pass through burrows)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetTagOnPlayer("9360d001-0cef-49e0-a2e0-4d715d4976ea")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4716</ID>
              <Description>"Set Flags"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4717</ID>
                  <Description>"As always, be careful with debug commands. May break game."</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>4744</ID>
                  <Description>"Spawn Minthara as a Companion (if early in the story)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
flag = "f5989c01-2600-4b16-9f29-c1fc7ee6bb9c" --Debug_AddMinthara
[ENABLE]
SetFlagOnPlayer(flag)
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4718</ID>
                  <Description>"Enable All Origin Tags"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local uuid = "3cde4737-618d-07ae-b846-3d020593fb60" --Debug_SetAllTags_Origins
SetFlagOnPlayer(uuid)
[DISABLE]
local uuid = "aece0b35-4276-5e8d-3ec3-2f0eae8048b7" --Debug_ClearAllTags_Origins
SetFlagOnPlayer(uuid)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4719</ID>
                  <Description>"Enable All Origin Tags (Really)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local uuid = "227ba3e7-70b5-3de4-5b1d-add6a3f47101" --Debug_SetAllTags_ReallyOrigins
SetFlagOnPlayer(uuid)
[DISABLE]
local uuid = "aece0b35-4276-5e8d-3ec3-2f0eae8048b7" --Debug_ClearAllTags_Origins
SetFlagOnPlayer(uuid)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4720</ID>
                  <Description>"Enable All Race Tags"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local uuid = "1cb166bb-918d-8c30-e33d-f93d43ab8963" --Debug_SetAllTags_Race
SetFlagOnPlayer(uuid)
[DISABLE]
local uuid = "0b3f5dec-ef77-66de-828c-2b6f9f1b38b9" --Debug_ClearAllTags_Race
SetFlagOnPlayer(uuid)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4721</ID>
                  <Description>"Enable All Race Tags (Really)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local uuid = "79785ace-7cba-069a-4839-e9ff171b7af6" --Debug_SetAllTags_ReallyRace
SetFlagOnPlayer(uuid)
[DISABLE]
local uuid = "c6c26d95-73c0-b021-696d-0aa6d9f0e832" --Debug_ClearAllTags_ReallyRace
SetFlagOnPlayer(uuid)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4722</ID>
                  <Description>"Enable "Really" Tags"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local uuid = "9d5e2c9d-a88c-227a-169b-48cc8f410bbc" --Debug_SetReallyTagsToo
SetFlagOnPlayer(uuid)
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4723</ID>
                  <Description>"Debug Skill Win (don't know)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local uuid = "9369ef31-cb50-1888-6f8e-bc247f73307c" --Debug_SkillWin
SetFlagOnPlayer(uuid)
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4724</ID>
              <Description>"Temporary Cheats"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4725</ID>
                  <Description>"Invulnerability"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "INVULNERABLE"
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4726</ID>
                  <Description>"Glow"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "LIGHT"
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4727</ID>
                  <Description>"Elixir of the God"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "ELIXIR_OF_THE_GOD"
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4728</ID>
                  <Description>"Max Strength"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "DEBUG_MAX_STRENGTH"
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4729</ID>
                  <Description>"Max Dexterity"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "DEBUG_MAX_DEXTERITY"
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4730</ID>
                  <Description>"Max Constitution"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "DEBUG_MAX_CONSTITUTION"
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4731</ID>
                  <Description>"Max Intelligence"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "DEBUG_MAX_INTELLIGENCE"
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4732</ID>
                  <Description>"Max Wisdom"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "DEBUG_MAX_WISDOM"
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4733</ID>
                  <Description>"Max Charisma"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "DEBUG_MAX_CHARISMA"
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4734</ID>
                  <Description>"Add Pet Pal, Comprehend Languages, and Detect Thoughts Tags"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
AddBoostsToPlayer("Tag(COMPREHEND_LANGUAGES);Tag(DETECTTHOUGHTS);Tag(PETPAL)")
[DISABLE]
RemoveBoostsFromPlayer("Tag(COMPREHEND_LANGUAGES);Tag(DETECTTHOUGHTS);Tag(PETPAL)")
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4735</ID>
                  <Description>"Add Pet Pal, Comprehend Languages, and Detect Thoughts Status Effects"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = { "PETPAL", "DETECT_THOUGHTS", "COMPREHEND_LANGUAGES" }
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4797</ID>
                  <Description>"Enlarge"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
status = "ENLARGE"
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4736</ID>
                  <Description>"Shrink"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "REDUCE_DUERGAR"
[ENABLE]
ApplyStatusToPlayer(status, -1)
[DISABLE]
RemoveStatusFromPlayer(status)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>394</ID>
              <Description>"Item Spawner"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>395</ID>
                  <Description>"Object UUID Can Be Found Within: Shared/Stats/Generated/Data/*.*"</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>360</ID>
                  <Description>"Spawn Hand Crossbow +2 (Sample Script)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = {
"ab150a98-0a8e-4ee2-9dca-580d77f99be3",
}
TemplateAddToPlayer(item, 1)
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4911</ID>
                  <Description>"Create Smokepowder Barrel"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "9c875b66-4024-487f-b67c-0c175538eb5c"
item = CreateAtPlayer(item)
if not item or item == 0 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4795</ID>
                  <Description>"Spawn Gale's Death Pouch"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
TemplateAddToPlayer("7ee02bb4-79a0-41d5-9f0a-7feae2e6561a", 1)
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1042</ID>
                  <Description>"Various Consumables"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1189</ID>
                      <Description>"20 Healing Potions"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "7d78f227-e8d4-486d-8121-25cf0bee751d"
TemplateAddToPlayer(item, 20)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1207</ID>
                      <Description>"20 Scrolls of True Resurrection"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "01d1b2b2-9e6b-4ad2-8d63-59f9caf1d389"
TemplateAddToPlayer(item, 20)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1208</ID>
                      <Description>"20 Elixirs of Silvanus"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "25fea821-5ec1-4052-bd6c-60c249e72a79"
TemplateAddToPlayer(item, 20)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4499</ID>
                      <Description>"20 Noblestalk Mushrooms"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "09561b3f-f556-4a01-b289-9b362bc0d43a"
TemplateAddToPlayer(item, 20)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4500</ID>
                      <Description>"20 Basilisk Oils"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "212ca846-4766-4370-8847-454e59751598"
TemplateAddToPlayer(item, 20)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4502</ID>
                      <Description>"10 Infernal Plate"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "LOOT_Ketheric_Infernal_Plate_A_6242490e-42c9-49f0-bc3b-4e7ec11c0fe7"
TemplateAddToPlayer(item, 10)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4503</ID>
                      <Description>"10 Sussur Bark"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "Quest_FOR_SussurBark_ea99e006-80e1-414a-8995-c03d92eaf170"
TemplateAddToPlayer(item, 10)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4974</ID>
                      <Description>"10 Hag Hair for Strength"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "8f6b0c08-d1b1-4ae7-ade2-da3c679ce323"
TemplateAddToPlayer(item, 10)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4975</ID>
                      <Description>"10 Hag Hair for Dexterity"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "7e3afbf6-4e1a-444e-826d-f8e0e0a8308f"
TemplateAddToPlayer(item, 10)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4976</ID>
                      <Description>"10 Hag Hair for Constitution"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "d16922ba-a36b-4015-8072-27610821fb53"
TemplateAddToPlayer(item, 10)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4977</ID>
                      <Description>"10 Hag Hair for Wisdom"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "de2c9582-fab5-4d5e-9a81-44d67af6a681"
TemplateAddToPlayer(item, 10)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4978</ID>
                      <Description>"10 Hag Hair for Intelligence"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "9abbab89-d29f-47c0-9ffe-f12018dd83d9"
TemplateAddToPlayer(item, 10)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4979</ID>
                      <Description>"10 Hag Hair for Charisma"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = "eec5de82-c988-40e6-8f10-474d5675c550"
TemplateAddToPlayer(item, 10)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4737</ID>
                      <Description>"Spawn End Game Supplies"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("END_CircusTrader")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1033</ID>
                      <Description>"Spawn Dyes"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local bag = GenerateTreasureBag("TEST_Dyes")
TemplateAddTo("dfb0bd5d-e4ed-4bd3-bcfe-45195260e7dc", bag, 10)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1034</ID>
                      <Description>"Spawn Potions"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_Potions")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4932</ID>
                      <Description>"Spawn Scrolls"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_Scrolls")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1035</ID>
                      <Description>"Spawn Solutions"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_ALCH_Solutions")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1036</ID>
                      <Description>"Spawn Coatings"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_ALCH_Coatings")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1037</ID>
                      <Description>"Spawn Ingredients"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_ALCH_Ingredients")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1039</ID>
                      <Description>"Spawn Extracts"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_ALCH_Extracts")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1038</ID>
                      <Description>"Spawn Feast"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("HeroesFeast")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1043</ID>
                  <Description>"Various Gear Sets"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1190</ID>
                      <Description>"Twitch Suit"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = {
"9dc4dafd-590a-44ec-8523-95136f46be9e",
"14339654-a714-4341-b03f-62530508c8e3",
"bf974183-9bf5-4086-9742-a2deef9e7675",
"f6af55dd-a75a-46ea-87f0-89ebf4e7b74e"
}
TemplateAddToPlayer(item, 1)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1191</ID>
                      <Description>"Underwear"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local item = {
"d40b567d-6b66-447e-8923-2bbd0d7aea00",
"8494f6d9-d588-4d18-bb0d-c5a58e911771",
"6afe0665-ef74-44bb-916a-fb00a267b4b9",
"9fecf84d-911f-4986-9454-0429ac437f45",
"d19364cf-18f9-4841-919b-1e3f0ba2c58c",
"0ec7d956-e65f-4bfa-b677-22f399f81a32",
"f328179e-f5e1-4fd4-bd41-efad411223e8",
"6d076cab-f23a-4a80-89b6-107be7f345bd",
"1cb3fb1b-2dfc-446a-9c9b-666eb0de05d6",
"1dc7ff19-a089-4289-8a4f-77c4be1c229d",
"d692d48f-9a39-4001-8a38-c01e397953dc",
"50a2cef0-8e1b-4166-ac15-06f8bde59e29",
"78063154-288f-41aa-a99f-e56cbf601129",
"3caad2f1-719f-4070-b7f0-887c49c773d3",
"7d989a9c-ab69-43e0-8fca-02b13d254ae2",
"d40b567d-6b66-447e-8923-2bbd0d7aea00",
"7efbf614-e004-4e64-b39e-c7928e703b8b",
"e1797af7-5459-4db2-99da-5703fa203edb",
"5fa043bf-0445-49ad-9e82-0df77c639fe2",
"498c155f-8675-4a55-9cb0-89dd7270469f"
}
TemplateAddToPlayer(item, 1)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1068</ID>
                      <Description>"DLC Items"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("DLC_DD_DEBUG_ALL")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1041</ID>
                      <Description>"Mobility Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_MobilitySet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1044</ID>
                      <Description>"Wrath Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_ViolenceRage_Set")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1045</ID>
                      <Description>"Charged Lightning Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_ChargedLightningSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1046</ID>
                      <Description>"Frost Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_FrostSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1047</ID>
                      <Description>"Elemental Gish Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_ElementalGishSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1049</ID>
                      <Description>"Gish Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_GishSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1048</ID>
                      <Description>"Bard Magic Item"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_Bard_Magic")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1050</ID>
                      <Description>"Radiant Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_RadiantSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1051</ID>
                      <Description>"ZOC Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_ZOCSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1052</ID>
                      <Description>"Fire Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_FireSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1053</ID>
                      <Description>"Druid Melee Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_Druid_Melee_MagicSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1054</ID>
                      <Description>"Paladin Magic Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_Paladin_Magic")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1055</ID>
                      <Description>"Monk Magic Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_Monk_Magic")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1056</ID>
                      <Description>"Barb Monk Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_BarbMonk_Magic")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1057</ID>
                      <Description>"Thunder Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_ThunderSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1058</ID>
                      <Description>"Acid Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_AcidSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1059</ID>
                      <Description>"Poison Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_PoisonSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1060</ID>
                      <Description>"Shadow Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_ShadowSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1061</ID>
                      <Description>"Close Quarter Caster Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_CQCasterSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1062</ID>
                      <Description>"Enforcer Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_Act2_OneOff")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1063</ID>
                      <Description>"Tier 2 Weapon Action Items"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_Tier2WeaponAction_Weapons")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1064</ID>
                      <Description>"Critical Support Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_CriticalSupportSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1065</ID>
                      <Description>"PHB Magic Items"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_PHB_MagicItems")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1066</ID>
                      <Description>"Psychic Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_PsychicSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1067</ID>
                      <Description>"Justicar Set"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
GenerateTreasureBag("TEST_MAG_JusticiarSet")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>396</ID>
              <Description>"Companion Cheats"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>398</ID>
                  <Description>"For All Cheats, Execute Scripts 1 and 2 First"</Description>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>399</ID>
                  <Description>"1. Select Main Character and Activate This Script"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(1, GetHostCharacter())
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>400</ID>
                  <Description>"2. Select Companion and Activate This Script"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, GetHostCharacter())
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>397</ID>
                  <Description>"3. a) Add 100 Attitude"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToLong(2, 100)
ExecuteCall("AddAttitudeTowardsPlayer")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>401</ID>
                  <Description>"3. b) Add 100 Approval"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToLong(2, 0)
SetArgToLong(3, 100)
ClearArg(4)
ExecuteCall("ChangeApprovalRating")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4855</ID>
              <Description>"Weapon Passive Enchantments"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4854</ID>
                  <Description>"Attacks Create Water Surface"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_LC_Wave_Trident_Passive"
[ENABLE]
local result = AddPassiveToWeapon(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromWeapon(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4865</ID>
                  <Description>"Thunderclap"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "Potion_OfGiant_ThunderDamage_Passive"
[ENABLE]
local result = AddPassiveToWeapon(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromWeapon(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4873</ID>
                  <Description>"Aura of Murder"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "MAG_TheClover_Mainhand_Passive"
[ENABLE]
local result = AddPassiveToWeapon(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemovePassiveFromWeapon(passive)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>4520</ID>
              <Description>"Weapon Status Enchantments"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>4506</ID>
                  <Description>"Weapon Returns When Thrown"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_THROWING_RETURN_TO_OWNER"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4524</ID>
                  <Description>"Weapon Enchantment +1"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_WEAPON_ATTACK_ROLL_BONUS"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4540</ID>
                  <Description>"Weapon Enchantment +2"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_DEFENDER_WEAPON_ENCHANTMENT"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4525</ID>
                  <Description>"+1D8 Radiant Damage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
--status = "MAG_RADIANT_RADIANCE_WEAPON"
status = "MAG_RADIANT_STRONG_RADIANCE_WEAPON"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4538</ID>
                  <Description>"+1D6 Fire Damage (Unstowable)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_FIRE_DIPPED_HELLFIRE"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4523</ID>
                  <Description>"+1D4 Cold Damage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_FROST_FROST_WEAPON"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4535</ID>
                  <Description>"+1D6 Lightning Damage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
--status = "MAG_CHARGED_LIGHTNING_LIGHTNING_WEAPON"
status = "MAG_CHARGED_LIGHTNING_LIGHTNING_GREATER_WEAPON"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4527</ID>
                  <Description>"+1D6 Thunder Damage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
--status = "MAG_THUNDER_THUNDER_WEAPON"
status = "MAG_THUNDER_GREATER_THUNDER_WEAPON"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4529</ID>
                  <Description>"+1D4 Necrotic Damage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_NECROTIC_NECROTIC_WEAPON"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4526</ID>
                  <Description>"+1D6 Force Damage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_FORCE_FORCE_WEAPON"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4531</ID>
                  <Description>"+6 Poison Damage"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_INFERNAL_WEAPON"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4533</ID>
                  <Description>"+X Slashing Damage (Strength Modifier)"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_GIANT_SLAYER_STRENGTH_BONUS"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4532</ID>
                  <Description>"Divine Light"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_LIGHT_DIVINE"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4742</ID>
                  <Description>"Infectious Greed Aura"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "LOW_DEVILSFEE_AURA"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4521</ID>
                  <Description>"Rampart Aura"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_RAMPART_AURA"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>4514</ID>
                  <Description>"Visual Effect Scripts (no benefits)"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>4513</ID>
                      <Description>"Shadow Curse"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "SCL_SHADOW_CURSE"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4515</ID>
                      <Description>"Acid"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_SPELLBLADE_ACID_ENERGY"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4516</ID>
                      <Description>"Cold"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_SPELLBLADE_COLD_ENERGY"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4517</ID>
                      <Description>"Fire"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_SPELLBLADE_FIRE_ENERGY"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4518</ID>
                      <Description>"Lightning"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_SPELLBLADE_LIGHTNING_ENERGY"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4519</ID>
                      <Description>"Thunder"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_SPELLBLADE_THUNDER_ENERGY"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4528</ID>
                      <Description>"Psychic"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MOO_MAG_KETHERIC_STUPEFIED"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1012</ID>
              <Description>"Last Trade Vendor"</Description>
              <Options moHideChildren="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript Async="1">{ ActivateTrade(
  Player, Trader, CanSell, TradeMode,
  InitiallySelectedTradeObject, ItemsTagFilter
) }
[ENABLE]
aobscanmodule(trade,$process,48 33 ?? 48 89 ?? ?? 48 8B ?? 33 D2 48 8B ?? E8 ?? ?? ?? ?? ?? 8B ?? 48 8D ?? ?? 33 D2)
alloc(newmem,$1000,trade)

label(tradePC)
label(tradeNPC)
label(tradeBkp)
label(return)

newmem:
  mov rbx,tradePC
  mov rax,[rdx+08]
  test rax,rax
  je @f
  mov rcx,[rax+00]
  mov [rbx+00],rcx
  mov rcx,[rax+08]
  mov [rbx+08],rcx
  mov rcx,[rax+10]
  mov [rbx+10],rcx
  mov rcx,[rax+18]
  mov [rbx+18],rcx
  mov rcx,[rax+20]
  mov [rbx+20],rcx
  mov rcx,[rax+28]
  mov [rbx+28],rcx
  mov rcx,[rax+30]
  mov [rbx+30],rcx
  mov rcx,[rax+38]
  mov [rbx+38],rcx

  mov rbx,tradeNPC
  mov rax,[rdx+18]
  test rax,rax
  je @f
  mov rcx,[rax+00]
  mov [rbx+00],rcx
  mov rcx,[rax+08]
  mov [rbx+08],rcx
  mov rcx,[rax+10]
  mov [rbx+10],rcx
  mov rcx,[rax+18]
  mov [rbx+18],rcx
  mov rcx,[rax+20]
  mov [rbx+20],rcx
  mov rcx,[rax+28]
  mov [rbx+28],rcx
  mov rcx,[rax+30]
  mov [rbx+30],rcx
  mov rcx,[rax+38]
  mov [rbx+38],rcx

tradeBkp:
  readmem(trade+07,5)
  jmp return

align 10
tradePC:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
tradeNPC:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0

trade+07:
  jmp newmem
return:
registersymbol(trade)
registersymbol(tradeBkp)
registersymbol(tradePC)
registersymbol(tradeNPC)

[DISABLE]
trade+07:
  readmem(tradeBkp,5)
unregistersymbol(trade)
unregistersymbol(tradeBkp)
unregistersymbol(tradePC)
unregistersymbol(tradeNPC)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+1431352

bg3.exe+143132F: 55                    - push rbp
bg3.exe+1431330: 41 54                 - push r12
bg3.exe+1431332: 41 55                 - push r13
bg3.exe+1431334: 41 56                 - push r14
bg3.exe+1431336: 41 57                 - push r15
bg3.exe+1431338: 48 8D 6C 24 C9        - lea rbp,[rsp-37]
bg3.exe+143133D: 48 81 EC A0 00 00 00  - sub rsp,000000A0
bg3.exe+1431344: 48 8B 05 AD F0 1F 04  - mov rax,[bg3.exe+56303F8]
bg3.exe+143134B: 48 33 C4              - xor rax,rsp
bg3.exe+143134E: 48 89 45 2F           - mov [rbp+2F],rax
// ---------- INJECTING HERE ----------
bg3.exe+1431352: 48 8B DA              - mov rbx,rdx
// ---------- DONE INJECTING  ----------
bg3.exe+1431355: 33 D2                 - xor edx,edx
bg3.exe+1431357: 48 8B CB              - mov rcx,rbx
bg3.exe+143135A: E8 91 0A CA FF        - call bg3.exe+10D1DF0
bg3.exe+143135F: 4C 8B E0              - mov r12,rax
bg3.exe+1431362: 48 8D 4B 10           - lea rcx,[rbx+10]
bg3.exe+1431366: 33 D2                 - xor edx,edx
bg3.exe+1431368: E8 83 0A CA FF        - call bg3.exe+10D1DF0
bg3.exe+143136D: 4C 8B F8              - mov r15,rax
bg3.exe+1431370: 4D 85 E4              - test r12,r12
bg3.exe+1431373: 0F 84 CD 01 00 00     - je bg3.exe+1431546
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1014</ID>
                  <Description>"Trader (do not change)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>256</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>tradeNPC</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1015</ID>
                  <Description>"Reset Vendor Stock"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
local trader = readString("tradeNPC", 256, false)
SetArgToString(0, player)
SetArgToString(1, trader)
ExecuteCall("GenerateItems")
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1018</ID>
                  <Description>"Set Custom Trade Treasure"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")
local trader = getAddress("tradeNPC")

if readQword(trader) == 0 then return end

local value = "TEST_Dyes"
--local value = "DLC_DD_DEBUG_ALL"
--local value = "TEST_Armors_ALL"
--local value = "TEST_Scrolls"
--local value = "TEST_ALCH_Solutions"
--local value = "TEST_ALCH_Coatings"
--local value = "TEST_ABILITIES"
--local value = "TEST_Thrown_Weapons"
--local value = "MagicItems"
--local value = "ST_MusicInstrument_Rare"
--local value = "ST_SpecialArrow_Rare"
--local value = "Exploration_Major_Arrows"

writeString(cmdStr2, value)
writeBytes(cmdStr2 + #value, 0)

PrepareCall("SetCustomTradeTreasure")
writePointer(cmdArgs + 0x08, trader)
writePointer(cmdArgs + 0x18, cmdStr2)
writeQword(cmdArgs + 0x28, 0)
local result = executeCodeEx(0, nil, cmdCall)
if result ~= 1 then
  print("command failed")
  return
end

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)
local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

PrepareCall("GenerateItems")
writePointer(cmdArgs + 0x08, cmdStr1)
writePointer(cmdArgs + 0x18, trader)
writeQword(cmdArgs + 0x28, 0)

local result = executeCodeEx(0, nil, cmdCall)
if result ~= 1 then
  print("command failed")
end

{$asm}
[DISABLE]
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1016</ID>
                  <Description>"Clear Trade Generated Items"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local player = getAddress("tradePC")
local trader = getAddress("tradeNPC")

PrepareCall("ClearTradeGeneratedItems")
writePointer(cmdArgs + 0x08, trader)
writeQword(cmdArgs + 0x18, 0)

local result = executeCodeEx(0, nil, cmdCall)
if result ~= 1 then
  print("command failed")
end

{$asm}
[DISABLE]
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>657</ID>
              <Description>"Testing Stuff"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1020</ID>
                  <Description>"Miscellaneous"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>656</ID>
                      <Description>"Hello"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
local message = "Zanzer Sends His Regards"
SetArgToString(0, player)
SetArgToString(1, message)
ExecuteCall("OpenMessageBox")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4960</ID>
                      <Description>"GetAbility"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
local message = "Zanzer Sends His Regards"
SetArgToString(0, player)
SetArgToLong(1, 1)
local result = ExecuteCall("GetAbility")
print(result)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1147</ID>
                      <Description>"GetHostCharacter"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
ClearArg(0)
ExecuteCall("GetHostCharacter")
print(GetArgAsString(0))
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4762</ID>
                      <Description>"StartCharacterCreation"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
ClearArg(0)
ExecuteCall("StartCharacterCreation")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1148</ID>
                      <Description>"RequestGatherAtCamp"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, player)
ClearArg(1)
ExecuteCall("RequestGatherAtCamp")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1040</ID>
                      <Description>"Get Position of Player"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local x, y, z = GetPositionOfPlayer()
printf("Player is at (%.4f, %.4f, %.4f)", x, y, z)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1149</ID>
                      <Description>"TeleportToPosition"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local x, y, z = 222.0576, 323.5684, 16.0820
local player = GetHostCharacter()
SetArgToString(0, player) -- SourceObject
SetArgToFloat(1, x)
SetArgToFloat(2, z)
SetArgToFloat(3, y)
SetArgToLong(4, 0) -- Event
SetArgToLong(5, 1) -- TeleportLinkedCharacters
SetArgToLong(6, 1) -- TeleportPartyFollowers
SetArgToLong(7, 1) -- TeleportSummons
SetArgToLong(8, 1) -- LeaveCombat
SetArgToLong(9, 1) -- SnapToGround
ExecuteCall("TeleportToPosition")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1188</ID>
                      <Description>"Get Equipped Item"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local slot = "Helmet"
--local slot = "Breast"
--local slot = "Cloak"
--local slot = "Melee Main Weapon"
--local slot = "Melee Offhand Weapon"
--local slot = "Ranged Main Weapon"
--local slot = "Ranged Offhand Weapon"
--local slot = "Underwear"
--local slot = "Boots"
--local slot = "Gloves"
--local slot = "Amulet"
--local slot = "Ring"
--local slot = "Ring2"
--local slot = "Wings"
--local slot = "Horns"
--local slot = "Overhead"
--local slot = "MusicalInstrument"
--local slot = "VanityBody"
--local slot = "VanityBoots"

local player = GetHostCharacter()
SetArgToString(0, player)
SetArgToString(1, slot)
ClearArg(2)
ExecuteCall("GetEquippedItem")
local item = GetArgAsString(2)

if item and #item &gt; 0 then
  print("Item: " .. item)

  SetArgToString(0, item)
  ClearArg(1)
  ExecuteCall("GetTemplate")
  local template = GetArgAsString(1)
  print("Template: " .. template)
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>914</ID>
                      <Description>"Add Passive to Equipped Weapon"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)
local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)

PrepareCall("GetEquippedWeapon")
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)
writePointer(cmdArgs + 0x08, cmdStr1)
writeQword(cmdArgs + 0x18, 0)
writeQword(cmdArgs + 0x28, 0)
executeCodeEx(0, nil, cmdCall)

local item = readPointer(cmdArgs + 0x18)
item = readString(item, 256, false)

writeString(cmdStr1, item)
writeBytes(cmdStr1 + #item, 0)

local boost = "MAG_TWN_Brewery_Club_Poison_Passive"

writeString(cmdStr2, boost)
writeBytes(cmdStr2 + #boost, 0)

PrepareCall("AddPassive")
writePointer(cmdArgs + 0x08, cmdStr1)
writePointer(cmdArgs + 0x18, cmdStr2)
writeQword(cmdArgs + 0x28, 0)
writeQword(cmdArgs + 0x38, 0)
local result = executeCodeEx(0, nil, cmdCall)
print(result == 1 and "success" or "failure")

{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>661</ID>
                      <Description>"Get Equipped Ring"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
response = executeCodeEx(0, nil, cmdCall)
local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)

PrepareCall("GetEquippedItem")
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)
local slot = "Ring"
writeString(cmdStr2, slot)
writeBytes(cmdStr2 + #slot, 0)
writePointer(cmdArgs + 0x08, cmdStr1)
writePointer(cmdArgs + 0x18, cmdStr2)
executeCodeEx(0, nil, cmdCall)
local item = readPointer(cmdArgs + 0x28)
item = readString(item, 256, false)

print("Item: " .. item)

PrepareCall("GetTemplate")
writeString(cmdStr1, item)
writeBytes(cmdStr1 + #item, 0)
writePointer(cmdArgs + 0x08, cmdStr1)
executeCodeEx(0, nil, cmdCall)
local template = readPointer(cmdArgs + 0x18)
template = readString(template, 256, false)

print("Template: " .. template)

{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>662</ID>
                      <Description>"Open Craft UI (not implemented?)"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)
local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)

PrepareCall("GetEquippedWeapon")
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)
writePointer(cmdArgs + 0x08, cmdStr1)
executeCodeEx(0, nil, cmdCall)
local item = readPointer(cmdArgs + 0x18)
item = readString(item, 256, false)

PrepareCall("OpenCraftUI")
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)
writeString(cmdStr2, item)
writeBytes(cmdStr2 + #item, 0)
writePointer(cmdArgs + 0x08, cmdStr1)
writePointer(cmdArgs + 0x18, cmdStr2)
local response = executeCodeEx(0, nil, cmdCall)
print("OpenCraftUI == " .. response)

{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>659</ID>
                      <Description>"Spawn Treasure Chest"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local chest_uuid = "e08b2a75-424d-4827-a9c8-adf00a314f2b"

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)
local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)

writeString(cmdStr1, chest_uuid)
writeBytes(cmdStr1 + #chest_uuid, 0)
writeString(cmdStr2, player)
writeBytes(cmdStr2 + #player, 0)
PrepareCall("CreateAtObject")
writePointer(cmdArgs + 0x08, cmdStr1)
writePointer(cmdArgs + 0x18, cmdStr2)
writeQword(cmdArgs + 0x28, 1)
writeQword(cmdArgs + 0x38, 0)
writeQword(cmdArgs + 0x48, 0)
writeQword(cmdArgs + 0x58, 0)
writeQword(cmdArgs + 0x68, 0)
executeCodeEx(0, nil, cmdCall)
CHEST = readPointer(cmdArgs + 0x68)
CHEST = readString(CHEST, 256, false)

{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>660</ID>
                      <Description>"Fill Treasure Chest"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

--local treasure = "Supply_Arrows"
--local treasure = "Supply_Scrolls"
--local treasure = "TEST_Scrolls"
--local treasure = "TEST_ABILITIES"
local treasure = "ST_MagicItems_Unique"

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")
local cmdStr3 = getAddress("cmdStr3")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)
local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)

writeString(cmdStr1, CHEST)
writeBytes(cmdStr1 + #CHEST, 0)
writeString(cmdStr2, treasure)
writeBytes(cmdStr2 + #treasure, 0)
writeString(cmdStr3, player)
writeBytes(cmdStr3 + #player, 0)
PrepareCall("GenerateTreasure")
writePointer(cmdArgs + 0x08, cmdStr1)
writePointer(cmdArgs + 0x18, cmdStr2)
writeQword(cmdArgs + 0x28, 15)
writePointer(cmdArgs + 0x38, cmdStr3)
executeCodeEx(0, nil, cmdCall)

{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>663</ID>
                      <Description>"Status Boosts"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

--[[

...\Public\Shared\Stats\Generated\Data\Status_BOOST.txt

ActionResourceConsumeMultiplier(Movement,0.0,0)
Attribute(InventoryBound)
IgnoreDamageThreshold(All,44) --DEBRIS_THRESHOLD_GREATER
StatusImmunity(BURNING)
StatusImmunity(WILD_MAGIC_BURNING)
StatusImmunity(DIFFICULT_TERRAIN)
StatusImmunity(DIFFICULT_TERRAIN_MUD)
StatusImmunity(DIFFICULT_TERRAIN_VINES)
ActionResource(Movement,-3,0)
WeaponDamageResistance(Bludgeoning);WeaponDamageResistance(Slashing);WeaponDamageResistance(Piercing)
CarryCapacityMultiplier(2.0)
ProficiencyBonusOverride(2);AddProficiencyToAC();AddProficiencyToDamage() --COMPANIONS_BOND
Tag(COMPREHEND_LANGUAGES)
GameplayLight(12,false,0.1) --DANCING_LIGHTS
GameplayLight(3,false,0.1) --FAERIE_FIRE
DarkvisionRangeMin(12);ActiveCharacterLight(051648e6-f05a-e41f-e398-ffd5cd148989) --DARKVISION
Tag(DETECTTHOUGHTS)
WeightCategory(+1)
ObjectSize(+1);ScaleMultiplier(1.33) --ENLARGE
IgnoreFallDamage()
Advantage(Ability, Intelligence) --FOXS_CUNNING
Advantage(SourceDialogue,Charisma) --FRIENDS
UnlockSpell(Target_GreatWeaponMaster_BonusAttack) --GREAT_WEAPON_MASTER_BONUS_ATTACK
RollBonus(SkillCheck,1d4);RollBonus(RawAbility,1d4) --GUIDANCE
ActionResource(Movement,9,0)
Skill(Stealth, 10) --PASS_WITHOUT_TRACE
Tag(PETPAL)
StatusImmunity(SG_Possessed)
StatusImmunity(SG_Frightened)
Resistance(Slashing,Resistant);Resistance(Piercing,Resistant);Resistance(Bludgeoning,Resistant);Resistance(Acid,Resistant);Resistance(Thunder,Resistant);Resistance(Necrotic,Resistant);Resistance(Fire,Resistant);Resistance(Lightning,Resistant);Resistance(Cold,Resistant);Resistance(Psychic,Resistant);Resistance(Poison,Resistant);Resistance(Radiant,Resistant);Resistance(Force,Resistant)
Resistance(Thunder, Immune)
ActionResource(SorceryPoint,1,0)
ActionResource(SpellSlot,1,1)
UnlockSpell(Target_WildMagic_Teleport) --WILD_MAGIC_TELEPORT
CriticalHit(AttackRoll,Success,Always)
CriticalHit(AttackTarget,Success,Always)
StatusImmunity(SLEEPING);StatusImmunity(SLEEP);StatusImmunity(UNCONSCIOUS);StatusImmunity(PARALYZED);StatusImmunity(HOLD_PERSON);
IgnoreLeaveAttackRange
AbilityOverrideMinimum(Strength,27)
HorizontalFOVOverride(10) --ENTHRALL

--]]

{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>404</ID>
                      <Description>"Enchant Equipped Ring"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local uuid = "1d486d04-15c8-3cec-9049-7a5dce09cca3"
local boosts = "UnlockSpell(Target_Topple);UnlockSpell(Target_CreateWater_StaffOfRain)"

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")
local response = 0

--PrepareCall("GetHostCharacter")
--response = executeCodeEx(0, nil, cmdCall)
--print("GetHostCharacter == " .. response)

--[[
PrepareCall("GetEquippedItem")
writePointer(cmdArgs + 0x18, cmdStr1)
local slot = "Ring"
writeString(cmdStr1, slot)
writeBytes(cmdStr1 + #slot, 0)
writeQword(cmdArgs + 0x18, 0)
writeQword(cmdArgs + 0x28, 0)
writeQword(cmdArgs + 0x38, 0)
writeQword(cmdArgs + 0x48, 0)
response = executeCodeEx(0, nil, cmdCall)
print("GetEquippedItem == " .. response)
--]]

--PrepareCall("GetTemplate")
--writePointer(cmdArgs + 0x08, readPointer(cmdArgs + 0x28))
--response = executeCodeEx(0, nil, cmdCall)
--print("GetTemplate == " .. response)

PrepareCall("AddBoosts")
writePointer(cmdArgs + 0x08, cmdStr2)
writeString(cmdStr2, uuid)
writeBytes(cmdStr2 + #uuid, 0)
--writePointer(cmdArgs + 0x08, readPointer(cmdArgs + 0x28))
writePointer(cmdArgs + 0x18, cmdStr1)
writeQword(cmdArgs + 0x28, 0)
writeQword(cmdArgs + 0x38, 0)
writeString(cmdStr1, boosts)
writeBytes(cmdStr1 + #boosts, 0)
response = executeCodeEx(0, nil, cmdCall)
print("AddBoosts == " .. response)

{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>841</ID>
                      <Description>"CanSpotSneakers"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local boosts = "ActionResourceConsumeMultiplier(SpellSlot,12345,1)"

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)
PrepareCall("CanSpotSneakers")
writeQword(cmdArgs + 0x18, 0)
writeQword(cmdArgs + 0x28, 0)
writeQword(cmdArgs + 0x38, 0)
executeCodeEx(0, nil, cmdCall)
--]]
{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>832</ID>
                      <Description>"Add Spell Slot Multipler"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local boosts = "ActionResourceConsumeMultiplier(SpellSlot,12345,1)"

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)
PrepareCall("AddBoosts")
writePointer(cmdArgs + 0x18, cmdStr1)
writeString(cmdStr1, boosts)
writeBytes(cmdStr1 + #boosts, 0)
writeQword(cmdArgs + 0x28, 0)
writeQword(cmdArgs + 0x38, 0)
executeCodeEx(0, nil, cmdCall)
{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>833</ID>
                      <Description>"Remove Spell Slot Multipler"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local boosts = "ActionResourceConsumeMultiplier(SpellSlot,12345,1)"

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)
--[[
PrepareCall("RemoveBoosts")
writePointer(cmdArgs + 0x18, cmdStr1)
writeString(cmdStr1, boosts)
writeBytes(cmdStr1 + #boosts, 0)
writeQword(cmdArgs + 0x28, 0)
writeQword(cmdArgs + 0x38, 0)
executeCodeEx(0, nil, cmdCall)
--]]
{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>850</ID>
                      <Description>"ItemDragToPosition"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)
local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)

writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)
PrepareCall("RestoreParty")
writePointer(cmdArgs + 0x08, cmdStr1)
executeCodeEx(0, nil, cmdCall)

{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1192</ID>
                      <Description>"Create Item At Location"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

local uuid = "ab150a98-0a8e-4ee2-9dca-580d77f99be3"

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

PrepareCall("GetPosition")
writePointer(cmdArgs + 0x08, cmdStr1)
executeCodeEx(0, nil, cmdCall)

writeString(cmdStr1, uuid)
writeBytes(cmdStr1 + #uuid, 0)

PrepareCall("CreateAt")
writePointer(cmdArgs + 0x08, cmdStr1)
writeQword(cmdArgs + 0x48, 0)
writeQword(cmdArgs + 0x58, 0)
writeQword(cmdArgs + 0x68, 0)
executeCodeEx(0, nil, cmdCall)
{$asm}

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>853</ID>
                      <Description>"Debug Symbols"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
label(LookupItem)
bg3.exe+3A6F520:
LookupItem:
registersymbol(LookupItem)

label(SavePosition)
bg3.exe+3A70E30:
SavePosition:
registersymbol(SavePosition)

[DISABLE]
unregistersymbol(LookupItem)
unregistersymbol(SavePosition)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+3A6F520

bg3.exe+3A6F516: CC                    - int 3 
bg3.exe+3A6F517: CC                    - int 3 
bg3.exe+3A6F518: CC                    - int 3 
bg3.exe+3A6F519: CC                    - int 3 
bg3.exe+3A6F51A: CC                    - int 3 
bg3.exe+3A6F51B: CC                    - int 3 
bg3.exe+3A6F51C: CC                    - int 3 
bg3.exe+3A6F51D: CC                    - int 3 
bg3.exe+3A6F51E: CC                    - int 3 
bg3.exe+3A6F51F: CC                    - int 3 
// ---------- INJECTING HERE ----------
bg3.exe+3A6F520: 48 89 5C 24 10        - mov [rsp+10],rbx
// ---------- DONE INJECTING  ----------
bg3.exe+3A6F525: 48 89 7C 24 18        - mov [rsp+18],rdi
bg3.exe+3A6F52A: 55                    - push rbp
bg3.exe+3A6F52B: 48 8B EC              - mov rbp,rsp
bg3.exe+3A6F52E: 48 83 EC 70           - sub rsp,70
bg3.exe+3A6F532: 48 8B 05 CF 31 7B 08  - mov rax,[bg3.g_pAssertHook+F978]
bg3.exe+3A6F539: 48 33 C4              - xor rax,rsp
bg3.exe+3A6F53C: 48 89 45 F8           - mov [rbp-08],rax
bg3.exe+3A6F540: 0F B6 FA              - movzx edi,dl
bg3.exe+3A6F543: E8 08 E0 8C 03        - call bg3.exe+733D550
bg3.exe+3A6F548: 48 8B D0              - mov rdx,rax
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>851</ID>
                      <Description>"Pickup"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

--local uuid = "591faf17-e36e-8e8e-dbde-3df255ba99f9"
--local uuid = "219e70cd-e9b5-4ec3-9062-b542f3a48acf"
local uuid = "_219e70cd-e9b5-4ec3-9062-b542f3a48acf"

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
print(player)

PrepareCall("GetPosition")
executeCodeEx(0, nil, cmdCall)

PrepareCall("Pickup")
writePointer(cmdArgs + 0x08, cmdStr1)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)
writePointer(cmdArgs + 0x18, cmdStr2)
writeString(cmdStr2, uuid)
writeBytes(cmdStr2 + #uuid, 0)
writeQword(cmdArgs + 0x28, 0)
writeQword(cmdArgs + 0x38, 0)
writeQword(cmdArgs + 0x48, 0)
writeQword(cmdArgs + 0x58, 0)
writeQword(cmdArgs + 0x68, 0)
executeCodeEx(0, nil, cmdCall)
--]]
{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>880</ID>
                      <Description>"Drop"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local uuid = "7e0395f8-aa53-4549-9af3-e2d203d678ee"

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)

writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)
writeString(cmdStr2, uuid)
writeBytes(cmdStr2 + #uuid, 0)

PrepareCall("Drop")
writePointer(cmdArgs + 0x08, cmdStr1)
writePointer(cmdArgs + 0x18, cmdStr2)
local result = executeCodeEx(0, nil, cmdCall)
print(result == 1 and "success" or "failure")
{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1030</ID>
                      <Description>"SetLevel"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)

writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

PrepareCall("GetLevel")
writePointer(cmdArgs + 0x08, cmdStr1)
writeQword(cmdArgs + 0x18, 1)
writeQword(cmdArgs + 0x28, 0)
local result = executeCodeEx(0, nil, cmdCall)
print(result and "success" or "failure")
print(readQword(cmdArgs + 0x28, 0))
{$asm}

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1031</ID>
                      <Description>"RequestInitialLevel"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)

writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

PrepareCall("RequestInitialLevel")
writePointer(cmdArgs + 0x08, cmdStr1)
writeQword(cmdArgs + 0x18, 0)
local result = executeCodeEx(0, nil, cmdCall)
print(result and "success" or "failure")
{$asm}

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>881</ID>
                      <Description>"Boost Equipped Weapon"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)
local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)

PrepareCall("GetEquippedWeapon")
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)
writePointer(cmdArgs + 0x08, cmdStr1)
writeQword(cmdArgs + 0x18, 0)
writeQword(cmdArgs + 0x28, 0)
executeCodeEx(0, nil, cmdCall)

local item = readPointer(cmdArgs + 0x18)
item = readString(item, 256, false)

writeString(cmdStr1, item)
writeBytes(cmdStr1 + #item, 0)

local boost = "WeaponEnchantment(5);WeaponProperty(Magical)"
--local boost = "UnlockSpell(Target_CreateWater_StaffOfRain)"

writeString(cmdStr2, boost)
writeBytes(cmdStr2 + #boost, 0)

PrepareCall("AddBoosts")
writePointer(cmdArgs + 0x08, cmdStr1)
writePointer(cmdArgs + 0x18, cmdStr2)
writeQword(cmdArgs + 0x28, 0)
writeQword(cmdArgs + 0x38, 0)
local result = executeCodeEx(0, nil, cmdCall)
print(result == 1 and "success" or "failure")

{$asm}
assert(true)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4486</ID>
                      <Description>"IsInteractionDisabled"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

PrepareCall("IsInteractionDisabled")
writePointer(cmdArgs + 0x08, cmdStr1)
writeQword(cmdArgs + 0x18, 0)
local result = executeCodeEx(0, nil, cmdCall)
print(result == 1 and "success" or "failure")

local value = readInteger(cmdArgs + 0x18)
print("Value " .. value)
{$asm}

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4488</ID>
                      <Description>"AddActionPoints"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
local cmdStr2 = getAddress("cmdStr2")

PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)

local player = readPointer(cmdArgs + 0x08)
player = readString(player, 256, false)
writeString(cmdStr1, player)
writeBytes(cmdStr1 + #player, 0)

PrepareCall("AddActionPoints")
writePointer(cmdArgs + 0x08, cmdStr1)
writeQword(cmdArgs + 0x18, 3)
writeQword(cmdArgs + 0x28, 0)
local result = executeCodeEx(0, nil, cmdCall)
print(result == 1 and "success" or "failure")
{$asm}

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>412</ID>
                      <Description>"Play Animation"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local uuid = "8b8bb757-21ce-4e02-a2f3-97d55cf2f90b"

local cmdCall = getAddress("cmdCall")
local cmdArgs = getAddress("cmdArgs")
local cmdStr1 = getAddress("cmdStr1")
PrepareCall("GetHostCharacter")
executeCodeEx(0, nil, cmdCall)
PrepareCall("PlayAnimation")
writePointer(cmdArgs + 0x18, cmdStr1)
writeString(cmdStr1, uuid)
writeBytes(cmdStr1 + #uuid, 0)
writeQword(cmdArgs + 0x28, 0)
local result = executeCodeEx(0, nil, cmdCall)
print(result == 1 and "success" or "failure")
{$asm}

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4741</ID>
                  <Description>"Item Scripts"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>4739</ID>
                      <Description>"Create Bag at Position"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local x, y, z = GetPositionOfPlayer()
local uuid = "3e6aac21-333b-4812-a554-376c2d157ba9"
local item = CreateAtPosition(uuid, x, y, z)
print(item)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4740</ID>
                      <Description>"Create Bag at Player"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local uuid = "3e6aac21-333b-4812-a554-376c2d157ba9"
local item = CreateAtPlayer(uuid)
print(item)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4920</ID>
                      <Description>"Create Sussur Bloom"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local uuid = "UNI_UND_SussurTreeFlower_8706eab3-e05b-478d-833e-308379972dad"
local status = "UND_ANCIENTSUSSURTREEANTIMAGIC_AURA"
local item = CreateAtPlayer(uuid)
if item and item ~= 0 then
  local result = ApplyStatus(item, status, -1, 1, 0)
  if result ~= 1 then
    print("command failed")
  end
else
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4923</ID>
                      <Description>"Pickup Item"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
local item = "MAG_Zhentarim_Demonspirit_Gloves_b1b7a557-3a7f-0fbf-8aef-6c1be7d4b209"
local template = "MAG_Zhentarim_Demonspirit_Gloves_7ef359b6-79af-4414-99bc-f93bc5eeed77"
SetArgToString(0, player)
SetArgToString(1, item)
SetArgToLong(2, 0)
SetArgToLong(3, 1)
local result = ExecuteCall("Pickup")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4924</ID>
                      <Description>"Equip Item"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
local item = "MAG_Zhentarim_Demonspirit_Gloves_b1b7a557-3a7f-0fbf-8aef-6c1be7d4b209"
local item = "S_SCL_SpidersLyre_0054e844-cc8a-4b4e-89f0-b79dafcef0e5"
SetArgToString(0, player)
SetArgToString(1, item)
SetArgToLong(2, 1)
SetArgToLong(3, 1)
SetArgToLong(4, 1)
local result = ExecuteCall("Equip")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4508</ID>
                  <Description>"Status Tests"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>4504</ID>
                      <Description>"Apply Status to Player"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_THROWING_RETURN_TO_OWNER"
status = "SCL_SHADOWFELL_AURA" -- Resistance(All,Immune)
status = "HOSPITAL_SURGEON_HARDCORE"
status = "PLA_ZHENTSPOTTER_SIGHT"
status = "MOO_BLOODPOTION_HUMAN" -- Proficiency w/ All Skills
status = "MOO_BLOODPOTION_HALFLING" -- Advantage on All Ability Checks
status = "MOO_BLOODPOTION_DWARF" -- Proficiency w/ All Saving Throws
status = "MOO_BLOODPOTION_ELF" -- +Movement Darkvision
status = "MOO_BLOODPOTION_TIEFLING"
status = "MOO_BLOODPOTION_HALFELF"
status = "MOO_BLOODPOTION_GITHYANKI"
status = "MOO_BLOODPOTION_DRAGONBORN_FIRE"
status = "MOO_BLOODPOTION_GNOME" -- Knock Spell
status = "CRE_ASTRALPRISON_GRAVITY" -- JumpMaxDistanceMultiplier(3); IgnoreFallDamage(); CarryCapacityMultiplier(3)
--status = "SPEAK_WITH_DEAD_RECAST"
status = "POTION_OF_THE_GIANT"
status = "ENLARGE"
status = "UND_GLUT_ENRAGE"
status = "GUARDIAN_OF_FAITH_SHIELD_VFX_LOLTH"
status = "ORI_KARLACH_RAGE_FIRE_VFX"
status = "TRIALFIRE"
--status = "MYRMIDON_WILDSHAPE_FIRE"
[ENABLE]
local result = ApplyStatusToPlayer(status)
if result ~= 1 then
  print("ApplyStatus Failed")
end
[DISABLE]
local result = RemoveStatusFromPlayer(status)
if result ~= 1 then
  print("RemoveStatus Failed")
end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4505</ID>
                      <Description>"Apply Status to Weapon"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
status = "MAG_THROWING_RETURN_TO_OWNER"
status = "MAG_DEFENDER_WEAPON_ENCHANTMENT" -- WeaponEnchantment(2)
status = "MAG_MYRKULITES_UNDEAD_PRESENCE" -- Undead Ward Aura (must apply undead tag to allies)
status = "MAG_HARPERS_SINGING_SWORD_SINGING_AURA"
status = "MAG_HARPERS_SINGING_SWORD_SHRIEKING_AURA"
status = "MAG_ACID_NOXIOUS_FUMES"
status = "MAG_BHAALIST_AURA_OF_MURDER_AURA"
status = "MAG_SHIELD_OF_DEVOTION_TECHNICAL"
status = "MAG_MOONLIGHT_BUTTERFLY_AURA"
status = "LOW_DEVILSFEE_AURA" -- Infectious Greed Aura
status = "SPEAK_WITH_DEAD_RECAST"
[ENABLE]
ApplyStatusToWeapon(status)
[DISABLE]
RemoveStatusFromWeapon(status)
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4933</ID>
                      <Description>"Apply Status"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
Status = "TRIALFIRE"
[ENABLE]
local Object = GetHostCharacter()
local Duration = -1
local Force = 1
local Source = Object
local result = ApplyStatus(Object, Status, Duration, Force, Source)
if result ~= 1 then
  print("ApplyStatus Failed")
end
[DISABLE]
local Target = GetHostCharacter()
local Cause = 0
local result = RemoveStatus(Target, Status, Cause)
if result ~= 1 then
  print("RemoveStatus Failed")
end
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4509</ID>
                  <Description>"Tag Tests"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>4743</ID>
                      <Description>"Set Tag on Player"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
tag = "03a8e066-673e-4353-ae04-7c40174ea05b"
tag = "bbf62461-4af4-4631-807a-eb0bd988d9a6"
tag = "a50cb0b1-29a6-4711-a71d-0dc3e3642287"
tag = "801bd716-0666-4dd5-b449-45ffa9a52a0f"
tag = "927b8097-a925-4174-8150-81ba2190d129"
tag = "615d115d-6d1d-477c-8b2c-d8e91b8cfe7d"
tag = "263a8a31-154a-45dc-8479-5e75edc0cc75"
tag = "2e6933bc-7c9b-4293-992b-49a07875c460"
tag = "9360d001-0cef-49e0-a2e0-4d715d4976ea"
tag = "33c625aa-6982-4c27-904f-e47029a9b140"--UNDEAD (Undead)

[ENABLE]
local result = SetTagOnPlayer(tag)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = ClearTagOnPlayer(tag)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4507</ID>
                      <Description>"SetTag on Weapon"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
tag = "983087c8-c9d3-4a87-69bc-f9659632c866" -- Tradeable to Tressym
tag = "7b96246c-54ba-43ea-b01d-4e0b20ad35f1" -- Consumeable by Gale
[ENABLE]
local item = GetEquippedWeapon()
local result = SetTag(item, tag)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local item = GetEquippedWeapon()
local result = ClearTag(item, tag)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4510</ID>
                  <Description>"Flag Tests"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1196</ID>
                      <Description>"SetFlagOnPlayer"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
--flag = "86690b18-e88f-4f57-cd54-4300e8f71eeb" --Debug_AddSpellSpeakWithDead
--flag = "0c8206a7-4720-6c1d-24df-60d46363b9ef" --Debug_AddThievesTools
--flag = "a74f804b-1ab0-04f7-1825-ea048c637cb2" --Debug_CAMP_GoUp1Level
--flag = "77e836a8-c9f3-dee9-b03e-59b60e42be0b" --Debug_LevelUpHack
--flag = "92af94e1-c78b-e47e-1231-413d3b276845" --CAMP_Gossip_Debug_ForcePrep
flag = "f5989c01-2600-4b16-9f29-c1fc7ee6bb9c" --Debug_AddMinthara
--flag = "aee09ae3-c27b-423b-9940-baad6c0c4d20" --FOR_IncompleteMasterwork_State_FireStarted
--flag = "06d90851-37f8-47bb-9543-e0d33c8929df" --FOR_IncompleteMasterwork_State_FurnaceFirstStage
--flag = "5682443b-4907-4fe5-acbd-67ef89a35388" --FOR_IncompleteMasterwork_State_FurnaceSecondStage
--flag = "9874d577-c50b-4357-bdaf-ec7b49959e00" --Debug_RemoveHideMinthara
--flag = "e4c67b18-4d1b-ed53-174b-ff8d7accd24d" --MOO_MintharaFate_Event_LeavesForCamp
--flag = "4e0701b1-c16d-4017-8be6-5781c3c682f4" --MOO_MintharaFate_State_ToCamp
--flag = "70385d5f-7a3a-bcd7-aa76-51c3ce5d079b" --ORI_MintharaRecuitment_Event_InvitedToCamp
--flag = "a69801c3-6652-053b-df5e-1f473a8f6ca7" --ORI_Minthara_JoinedForMechanicalReasons
--flag = "766b8981-eb17-3ec5-5d30-2626509c550f" --ORI_Minthara_State_IsInParty
[ENABLE]
local result = SetFlagOnPlayer(flag)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4497</ID>
                      <Description>"GetFlagOnPlayer"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
flag = "ababcf08-08e0-4bc8-90bf-6edb609443e7" --Astarion_InParty_AskedPast
flag = "488b4302-8a6b-4241-8e27-ba7f92876afe" --FOR_IncompleteMasterwork_Quest_ObtainedSickle
flag = "9855b313-e281-49d7-960d-f4d0b834f398" --FOR_IncompleteMasterwork_Quest_ObtainedDagger
flag = "aee09ae3-c27b-423b-9940-baad6c0c4d20" --FOR_IncompleteMasterwork_State_FireStarted
flag = "06d90851-37f8-47bb-9543-e0d33c8929df" --FOR_IncompleteMasterwork_State_FurnaceFirstStage
flag = "5682443b-4907-4fe5-acbd-67ef89a35388" --FOR_IncompleteMasterwork_State_FurnaceSecondStage
flag = "076d2468-1f92-1fdd-1cdc-8edcc2578b0c" --GOB_Checkpoint_State_Hostile
flag = "57558ea3-4be2-aa9e-6caf-3d53832d04b7" --GOB_DrowCommander_Event_DrowHostile
flag = "27a5c5a6-70bc-81e2-6aa9-ca1f4e619623" --GOB_DrowCommander_State_Hostile
flag = "bf904558-1898-4d27-9526-9cef185cc9e1" --GLO_DrowCommander_State_Dead
flag = "00f8006f-70d7-478d-8d3e-0f10ea9fb758" --CAMP_Jergal_State_CanResurrectMinthara
flag = "d0d36d66-e2e5-417c-aa72-f62020f8c8d0" --CAMP_Jergal_State_WillResurrectMinthara
flag = "4fe9fd56-5c86-4a0d-9b5b-3471686f9ba2" --CAMP_Jergal_State_WillResurrectGale
local hasFlag = GetFlagOnPlayer(flag)
print(hasFlag == 1 and "Character has flag" or "Character does not have flag")
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4498</ID>
                      <Description>"ClearFlagOnPlayer"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
flag = "ababcf08-08e0-4bc8-90bf-6edb609443e7" --Astarion_InParty_AskedPast
flag = "bf904558-1898-4d27-9526-9cef185cc9e1" --GLO_DrowCommander_State_Dead
[ENABLE]
local result = ClearFlagOnPlayer(flag)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>783</ID>
                      <Description>"GetFlagName"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local flag = "1b28f6ce-09ad-9664-9865-6ed4eb69a0b7"
SetArgToString(0, flag)
ClearArg(1)
ExecuteCall("GetFlagName")
print(GetArgAsString(1))
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4765</ID>
                      <Description>"SetFlagOnUUID"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
flag = "86690b18-e88f-4f57-cd54-4300e8f71eeb" --Debug_AddSpellSpeakWithDead
flag = "0c8206a7-4720-6c1d-24df-60d46363b9ef" --Debug_AddThievesTools
flag = "a74f804b-1ab0-04f7-1825-ea048c637cb2" --Debug_CAMP_GoUp1Level
flag = "77e836a8-c9f3-dee9-b03e-59b60e42be0b" --Debug_LevelUpHack
flag = "92af94e1-c78b-e47e-1231-413d3b276845" --CAMP_Gossip_Debug_ForcePrep
flag = "f5989c01-2600-4b16-9f29-c1fc7ee6bb9c" --Debug_AddMinthara
flag = "aee09ae3-c27b-423b-9940-baad6c0c4d20" --FOR_IncompleteMasterwork_State_FireStarted
flag = "06d90851-37f8-47bb-9543-e0d33c8929df" --FOR_IncompleteMasterwork_State_FurnaceFirstStage
flag = "5682443b-4907-4fe5-acbd-67ef89a35388" --FOR_IncompleteMasterwork_State_FurnaceSecondStage
flag = "00f8006f-70d7-478d-8d3e-0f10ea9fb758" --CAMP_Jergal_State_CanResurrectMinthara
--flag = "d0d36d66-e2e5-417c-aa72-f62020f8c8d0" --CAMP_Jergal_State_WillResurrectMinthara

local object = "564ac7ba-c3f9-205f-50e7-ee4476e22602"
local object = "UNI_FOR_IncompleteMasterwork_FurnaceWithBark_564ac7ba-c3f9-205f-50e7-ee4476e22602"
local object = "S_GLO_JergalAvatar_0133f2ad-e121-4590-b5f0-a79413919805"
local result = SetFlag(flag, object, 0, 1)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4764</ID>
                      <Description>"GetFlagOnUUID"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
--UNI_FOR_IncompleteMasterwork_FurnaceWithBark_564ac7ba-c3f9-205f-50e7-ee4476e22602
[ENABLE]
local flag = {
--[[
"488b4302-8a6b-4241-8e27-ba7f92876afe", --FOR_IncompleteMasterwork_Quest_ObtainedSickle
"9855b313-e281-49d7-960d-f4d0b834f398", --FOR_IncompleteMasterwork_Quest_ObtainedDagger
"aee09ae3-c27b-423b-9940-baad6c0c4d20", --FOR_IncompleteMasterwork_State_FireStarted
"06d90851-37f8-47bb-9543-e0d33c8929df", --FOR_IncompleteMasterwork_State_FurnaceFirstStage
"5682443b-4907-4fe5-acbd-67ef89a35388", --FOR_IncompleteMasterwork_State_FurnaceSecondStage
--]]

--[[
"0c5c2bdd-7a33-c1e7-bf54-84cc347446fa", --DEN_Weaponsmith_Adapting
"de4c25e5-83cd-dfad-02aa-f5c7ce999da4", --DEN_Weaponsmith_Elturel
"ca9c39d5-0841-dc46-e933-b4a6a908ee93", --DEN_Weaponsmith_GoldOffer
"4e9aaa23-6ad9-2efc-930b-bd19343dda99", --DEN_Weaponsmith_HasMet
"48e85631-349f-86c8-ddf6-58b55d7133eb", --DEN_Weaponsmith_Mocking
"c6655176-94e8-c408-d72a-6eebdda58961", --DEN_Weaponsmith_MonkComment
"c7402502-0227-352f-6941-872658278ca0", --DEN_Weaponsmith_Profession
"f465a689-fd58-0a7f-9fc5-25844e72efdd", --DEN_Weaponsmith_Quality
"8a90f745-9081-19af-106d-aef4015f1f77", --DEN_Weaponsmith_SmithyQuestions
--]]

--[[
"076d2468-1f92-1fdd-1cdc-8edcc2578b0c", --GOB_Checkpoint_State_Hostile
"57558ea3-4be2-aa9e-6caf-3d53832d04b7", --GOB_DrowCommander_Event_DrowHostile
"27a5c5a6-70bc-81e2-6aa9-ca1f4e619623" --GOB_DrowCommander_State_Hostile
--]]

--[[
"83c2c469-efb5-d435-373b-3abbbe0d0b7d", --GOB_DrowCommander_Dead_MentionedAbsolute
"1fde399f-f702-a98a-7c98-f69c39f37402", --GOB_DrowCommander_Dead_MentionedUnderdark
"a0a739bf-4e9f-3dba-25e0-c9a1464c11a2", --GOB_DrowCommander_Event_Disappointed
"57558ea3-4be2-aa9e-6caf-3d53832d04b7" --GOB_DrowCommander_Event_DrowHostile
--]]

--[[
"00f8006f-70d7-478d-8d3e-0f10ea9fb758", --CAMP_Jergal_State_CanResurrectMinthara
"d0d36d66-e2e5-417c-aa72-f62020f8c8d0", --CAMP_Jergal_State_WillResurrectMinthara
"d9a0568f-c0b1-43ff-844c-ad140f248b5e", --CAMP_Jergal_State_CanResurrectGale
"4fe9fd56-5c86-4a0d-9b5b-3471686f9ba2", --CAMP_Jergal_State_WillResurrectGale
"bf904558-1898-4d27-9526-9cef185cc9e1" --GLO_DrowCommander_State_Dead
--]]

--[[
"766b8981-eb17-3ec5-5d30-2626509c550f", --ORI_Minthara_State_IsInParty
"a861d236-08e8-42b3-bd35-7a995a7aab82", --ORI_Minthara_State_KillKetheric
"cd37637e-d045-b40d-63ce-53cc2f5ccb7b", --ORI_Minthara_State_MintharaLeavesTheTeam
"4446c152-0902-4cc2-9990-7cb412a76051", --ORI_Minthara_State_MintharaToCamp
"f0bf80ff-b2f5-4a7e-9f33-db5cefb6dd70", --ORI_Minthara_State_NeedsConvincing
"6f07d8ec-3ecf-43cc-90a9-3f9ca013f41b", --ORI_Minthara_State_ReactedToDumpedSomeoneForHer
"ea6152ac-e002-7b7d-d974-7966f580de07", --ORI_Minthara_State_ReadyToTalkAboutPregnancy
"32ad610c-2c68-1de8-c411-32aee1691b6a", --ORI_Minthara_State_ReturnToDefaultBranch
"10351cb4-37c0-8c8d-d704-e49ef7df7565", --ORI_Minthara_State_StillPartneredOrDating
"3ccb6b27-8e83-3cca-81b0-f6acdfd31f13", --ORI_Minthara_State_ToldBalthazar
"86fe1cda-eb26-ef4d-7c70-f292ef7bcf7d", --ORI_Minthara_State_WaitingForPartyRoom
--]]

"0b31064e-d6bb-4f1a-8f76-93a6d33f6520", --MINTHARA
"ef6171cb-a7c8-40be-9373-91ad9c117400", --MINTHARAAVATAR
"1cf98396-5542-42fc-8007-7338d18edec0", --MINTHARACAMP
"01ce6386-6b60-4ad1-ba9a-1e7d23b5df1a", --MINTHARACOMPANION
"032b3a63-5799-4ca8-99a8-bf7bb5034d53", --MINTHARAPARTY

}

local object = "UNI_FOR_IncompleteMasterwork_FurnaceWithBark_564ac7ba-c3f9-205f-50e7-ee4476e22602"
local object = "S_DEN_Weaponsmith_e2ad06ec-8034-479a-9f69-b86faea6dc79"
local object = "S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b"
--local object = "S_GLO_JergalAvatar_0133f2ad-e121-4590-b5f0-a79413919805"
local object = GetHostCharacter()

for i = 1, #flag do
  local hasFlag = GetFlag(flag[i], object)
  if hasFlag == nil then hasFlag = "nil" end
  print(flag[i] .. " == " .. hasFlag)
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4794</ID>
                      <Description>"ClearFlagOnUUID"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local flag = {
"0c5c2bdd-7a33-c1e7-bf54-84cc347446fa", --DEN_Weaponsmith_Adapting
"de4c25e5-83cd-dfad-02aa-f5c7ce999da4", --DEN_Weaponsmith_Elturel
"ca9c39d5-0841-dc46-e933-b4a6a908ee93", --DEN_Weaponsmith_GoldOffer
"4e9aaa23-6ad9-2efc-930b-bd19343dda99", --DEN_Weaponsmith_HasMet
"48e85631-349f-86c8-ddf6-58b55d7133eb", --DEN_Weaponsmith_Mocking
"c6655176-94e8-c408-d72a-6eebdda58961", --DEN_Weaponsmith_MonkComment
"c7402502-0227-352f-6941-872658278ca0", --DEN_Weaponsmith_Profession
"f465a689-fd58-0a7f-9fc5-25844e72efdd", --DEN_Weaponsmith_Quality
"8a90f745-9081-19af-106d-aef4015f1f77", --DEN_Weaponsmith_SmithyQuestions

}

local object = "UNI_FOR_IncompleteMasterwork_FurnaceWithBark_564ac7ba-c3f9-205f-50e7-ee4476e22602"
local object = "S_DEN_Weaponsmith_e2ad06ec-8034-479a-9f69-b86faea6dc79"
local object = GetHostCharacter()

for i = 1, #flag do
  local result = ClearFlag(flag[i], object, 0, 1)
  if result ~= 1 then
    print(flag[i] .. " Failed")
  end
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4767</ID>
                      <Description>"SetCanInteract"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local object = "UNI_FOR_IncompleteMasterwork_FurnaceWithBark_564ac7ba-c3f9-205f-50e7-ee4476e22602"
SetArgToString(0, object)
SetArgToLong(1, 1)
local result = ExecuteCall("SetCanInteract")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4511</ID>
                  <Description>"Passive Tests"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>4512</ID>
                      <Description>"Toggle Passive on Player"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "SPEAK_WITH_DEAD_RECAST"
passive = "MAG_Bound_ProficiencyToDamage_Technical_Passive"
passive = "MAG_DarkJusticiarGloves_Passive"
passive = "AdditionalSpellSlot_Level_1"
passive = "CompanionsBond_Creature"
passive = "SavageAttacks"
passive = "AscendantStep"
passive = "CommanderStrike"
passive = "DreadfulWord"
passive = "FiendishResilience"
passive = "InquisitorsMight"
passive = "ClarifiedMortality"
passive = "GuardianOfFaith_Attack"
passive = "ShadowyRetreat"
passive = "AuraOfVileOblivion_Technical"
passive = "FlamingSphere_State_6"
passive = "Scar_Fury_Gur"
passive = "VampireSpawn"
passive = "Regeneration_Vampire_Spawn"
passive = "HellfireDamagePierce_Technical"
passive = "DEN_Rolan_DefaultSpells"
passive = "UND_SocietyOfBrilliance_MagicMissileNecklace_Passive"
passive = "UNI_MassHealRing_Passive"
passive = "MAG_Mobility_ExplosionOnJump_Passive"
passive = "MAG_Fire_ApplyBurning_Passive"
passive = "MAG_ChargedLightning_Charge_OnDamage_Passive"
passive = "MAG_LowHP_1HP_Passive"
passive = "LOW_HouseOfGrief_Cultists_Sight"
passive = "ORI_Gale_ShadowSpellSlots"
passive = "MAG_Extended_Target_Cantrip_Passive"
passive = "MAG_Warlock_Quickened_Cantrips_Passive"
passive = "MAG_Light_FarlinDagger_Passive"
passive = "MAG_Light_TheThorns_Passive"
passive = "Land_Desert"
[ENABLE]
local result = AddPassiveToPlayer(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
--[
local result = RemovePassiveFromPlayer(passive)
if result ~= 1 then
  print("command failed")
end
--]]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4824</ID>
                      <Description>"Toggle Passive on Weapon"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "SPEAK_WITH_DEAD_RECAST"
passive = "MAG_Bound_ProficiencyToDamage_Passive"
passive = "MAG_ArcaneTrickster_Ring_Passive"
passive = "MAG_ShockingBound_Passive"
passive = "MAG_BoundToBeBonded_Technical_Passive"
passive = "MAG_Bound_Throwing_Technical_Passive"
passive = "MAG_PhysicalDamageReduction_Passive"
passive = "UNI_WYR_Circus_ClownHammer_Passive"
passive = "ALCH_Oil_Frost_Passive"
passive = "ALCH_Oil_Combustion_Passive"
passive = "ALCH_Elixir_Concentration_Passive"
passive = "UND_SocietyOfBrilliance_MagicMissileNecklace_Passive"
passive = "MAG_ChargedLightning_Charge_OnDamage_Passive"
passive = "MAG_Moonlight_Glaive_Passive"
passive = "MAG_StaffOFRam_KnockStun_Passive"
passive = "MAG_TheDueller_ImprovedDuelist_Passive"
passive = "MAG_OfDefense_Gloves_Passive"
passive = "MAG_BoundToBeBonded_Technical_Passive"
passive = "MAG_Bound_Throwing_Technical_Passive"
[ENABLE]
local result = AddPassiveToWeapon(passive)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
--[
local result = RemovePassiveFromWeapon(passive)
if result ~= 1 then
  print("command failed")
end
--]]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4909</ID>
                      <Description>"Add Passive to All Equipment"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
passive = "UND_SocietyOfBrilliance_MagicMissileNecklace_Passive"
--passive = "MAG_ChargedLightning_ArmorMagicBoost_Passive"
--passive = "MAG_TheDueller_ImprovedDuelist_Passive"

[ENABLE]
local player = GetHostCharacter()
for i = 1, #Slotnames do
  local item = GetEquippedItem(player, Slotnames[i])
  if item and #item &gt; 0 then
    AddPassive(item, passive)
  end
end
[DISABLE]
--[
local player = GetHostCharacter()
for i = 1, #Slotnames do
  local item = GetEquippedItem(player, Slotnames[i])
  if item and #item &gt; 0 then
    RemovePassive(item, passive)
  end
end
--]]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4746</ID>
                  <Description>"Boost Tests"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1019</ID>
                      <Description>"ToggleBoosts"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
boosts = "ActionResourceConsumeMultiplier(SpellSlot,12345,1)"
boosts = "UnlockSpell(Target_BardicInspiration)"
boosts = "UnlockSpell(Projectile_MagicMissile)"
boosts = "UnlockSpellVariant(FreecastCheck(),ModifyNumberOfTargets(Override,10,false),ModifyMaximumTargets(Override,10),ModifyTargetRadius(Override,100),ModifySpellFlags(Melee,0),ModifySpellFlags(Verbal,0),ModifySpellFlags(Stealth,1),ModifyStatusDuration(Multiplicative,100),ModifySummonDuration(Multiplicative,100),ModifySavingThrowDisadvantage(),ModifyUseCosts(Override,ActionPoint,0,0),ModifyTooltipDescription())"
boosts = "UnlockSpellVariant(FreecastCheck(),ModifyTooltipDescription(),ModifyUseCosts(Replace,SpellSlot,0,-1,SpellSlot),ModifyUseCosts(Replace,Rage,0,0,Rage),ModifyUseCosts(Replace,BardicInspiration,0,0,BardicInspiration),ModifyUseCosts(Replace,ChannelDivinity,0,0,ChannelDivinity),ModifyUseCosts(Replace,SuperiorityDie,0,0,SuperiorityDie),ModifyUseCosts(Replace,KiPoint,0,0,KiPoint),ModifyUseCosts(Replace,SorceryPoint,0,0,SorceryPoint),ModifyUseCosts(Replace,WarlockSpellSlot,0,-1,WarlockSpellSlot),ModifyUseCosts(Replace,ArcaneRecoveryPoint,0,0,ArcaneRecoveryPoint),ModifyUseCosts(Replace,NaturalRecoveryPoint,0,0,NaturalRecoveryPoint),ModifyUseCosts(Replace,WildShape,0,0,WildShape),ModifyUseCosts(Replace,SpellSlotsGroup,0,-1,SpellSlotsGroup))"
boosts = "ObjectSize(+1)"
boosts = "ScaleMultiplier(2.5)"
boosts = "Weight(100)"
boosts = "WeightCategory(1);ScaleMultiplier(1.33);Tag(CANBECALMED);IncreaseMaxHP(60)"
boosts = "UnlockSpell(Target_GaseousForm,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,Wisdom)"
boosts = "UnlockSpell(Target_StinkingCloud,AddChildren,ae36a457-2903-4142-a266-c9c71e096e1d,,Wisdom)"
boosts = "WeightCategory(+3)"
boosts = "UnlockSpell(Target_Fiendish_Resilience_Container)"
boosts = "UnlockSpell(Projectile_MagicMissile,AddChildren,d136c5d9-0ff0-43da-acce-a74a07f8d6bf,,)"
boosts = "UnlockSpellVariant(SubtleSpellCheck(),ModifySpellRoll('AttackType.RangedSpellAttack','AttackType.MeleeWeaponAttack'),ModifyTargetRadius(AdditiveBase,100),ModifyAreaRadius(AdditiveBase,20),ModifyNumberOfTargets(Override,10,false),ModifySpellFlags(Verbal,0),ModifySpellFlags(Stealth,1),ModifySpellFlags(Melee,0),ModifySpellFlags(Somatic,0))"
[ENABLE]
local result = AddBoostsToPlayer(boosts)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
local result = RemoveBoostsFromPlayer(boosts)
if result ~= 1 then
  print("command failed")
end
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4749</ID>
                  <Description>"Companion Tests"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>4814</ID>
                      <Description>"Debug Commands"</Description>
                      <Options moHideChildren="1"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>4816</ID>
                          <Description>"Add Minthara"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{$lua}
if syntaxcheck then return end
flag = "f5989c01-2600-4b16-9f29-c1fc7ee6bb9c" --Debug_AddMinthara
[ENABLE]
local result = SetFlagOnPlayer(flag)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>4821</ID>
                          <Description>"Add Halsin"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{$lua}
if syntaxcheck then return end
flag = "b9bdd9da-d2c8-4b36-aa74-c26461945691" --Debug_AddHalsin
[ENABLE]
local result = SetFlagOnPlayer(flag)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>4817</ID>
                          <Description>"Add Jaheira"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{$lua}
if syntaxcheck then return end
flag = "52dc4aeb-bb06-46bb-9c6c-ff3d3ef21857" --Debug_AddJaheira
[ENABLE]
local result = SetFlagOnPlayer(flag)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>4818</ID>
                          <Description>"Add Minsc"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{$lua}
if syntaxcheck then return end
flag = "e13376a2-10f4-68f3-4b4c-710938b1c143" --Debug_AddMinsc
[ENABLE]
local result = SetFlagOnPlayer(flag)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>4819</ID>
                          <Description>"Add Helia"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{$lua}
if syntaxcheck then return end
flag = "b8fdd14c-1e72-22a5-637e-37156644fe6e" --Debug_AddHelia
[ENABLE]
local result = SetFlagOnPlayer(flag)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>4820</ID>
                          <Description>"Add Sylvira"</Description>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{$lua}
if syntaxcheck then return end
flag = "754de239-8e00-6c5e-457a-bc1a973a9c30" --Debug_AddSylvira
[ENABLE]
local result = SetFlagOnPlayer(flag)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4485</ID>
                      <Description>"Spawn Unit"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]

--local uuid = "080a7d08-11a3-4a07-973e-0c48c1bcacca" -- S_GLO_Wyll_Cambion_CambionForm_Naked
local uuid = "2fbd583e-0507-41c7-be06-15b1f77797d8" -- S_GLO_Wyll_Cambion_CambionForm
--local uuid = "303f8bbc-0a71-4c85-a82f-6be9b92b8336" -- S_GLO_Wyll_Cambion_HumanForm
--local uuid = "3333491e-dc88-4b61-8539-fed9f3af5ca1"
--local uuid = "ce83b623-fb0e-46c9-9d0d-d84907228df3"
--local uuid = "d677bc47-7173-4541-833a-c7e9801d467e" -- Dark Urge

local player = GetHostCharacter()

SetArgToString(0, uuid)
SetArgToString(1, player)
SetArgToLong(2, 0)
SetArgToLong(3, 1)
SetArgToLong(4, 0)
SetArgToLong(5, 1)
ClearArg(6)
ExecuteCall("CreateAtObject")

SPAWNED_UNIT = GetArgAsString(6)

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4753</ID>
                      <Description>"SetBlockDismiss"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
SetArgToLong(1, 0)
local result = ExecuteCall("SetBlockDismiss")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4769</ID>
                      <Description>"SetCanInteract"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
SetArgToLong(1, 1)
local result = ExecuteCall("SetCanInteract")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4489</ID>
                      <Description>"SetHasDialog"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
SetArgToLong(1, 1)
local result = ExecuteCall("SetHasDialog")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4754</ID>
                      <Description>"SetHasOsirisDialog"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
SetArgToLong(1, 1)
local result = ExecuteCall("SetHasOsirisDialog")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4750</ID>
                      <Description>"RegisterAsCompanion"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
local result = ExecuteCall("RegisterAsCompanion")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4760</ID>
                      <Description>"InitializePlayerData"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
local result = ExecuteCall("InitializePlayerData")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4747</ID>
                      <Description>"MakePlayer"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, SPAWNED_UNIT)
SetArgToString(0, target)
SetArgToString(1, player)
SetArgToLong(2, 1)
local result = ExecuteCall("MakePlayer")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4748</ID>
                      <Description>"MakeNPC"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
local result = ExecuteCall("MakeNPC")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4751</ID>
                      <Description>"GetReservedUserID"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, player)
ClearArg(1)
local result = ExecuteCall("GetReservedUserID")
if result ~= 1 then
  print("command failed")
  return
end
USER_ID = GetArgAsLong(1)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4752</ID>
                      <Description>"AssignToUser"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToLong(0, USER_ID)
SetArgToString(1, SPAWNED_UNIT)
local result = ExecuteCall("AssignToUser")
if result ~= 1 then
  print("command failed")
  return
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4755</ID>
                      <Description>"Debug_BecomeCompanion"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local flag = "4670c626-a52f-aeed-c18a-dc8d9c78b7cb" --Debug_BecomeCompanion
local result = SetFlag(flag, SPAWNED_UNIT, 0, 1)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4756</ID>
                      <Description>"Debug_BecomeAvatar"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local flag = "34371b8e-a34b-3354-54e7-fcda800d703a" --Debug_BecomeAvatar
local result = SetFlag(flag, SPAWNED_UNIT, 0, 1)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4759</ID>
                      <Description>"Mizora Flag"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local flag = "18242dd5-74f4-4183-a975-f0526b0d0203" --MIZORA
local result = SetFlag(flag, SPAWNED_UNIT, 0, 1)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4757</ID>
                      <Description>"Hireling Tag"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local tag = "710d9065-a701-4b13-bb03-266a2c7996b9" -- PRESET_HIRELING_SORCERER
local result = SetTag(SPAWNED_UNIT, tag)
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4781</ID>
                      <Description>"Teleport UUID to Player"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local x, y, z = GetPositionOfPlayer()
local object = "S_GLO_Wyll_Cambion_491a7686-3081-405b-983c-289ec8781e0a"
SetArgToString(0, object) -- SourceObject
SetArgToFloat(1, x)
SetArgToFloat(2, z)
SetArgToFloat(3, y)
SetArgToLong(4, 0) -- Event
SetArgToLong(5, 1) -- TeleportLinkedCharacters
SetArgToLong(6, 1) -- TeleportPartyFollowers
SetArgToLong(7, 1) -- TeleportSummons
SetArgToLong(8, 1) -- LeaveCombat
SetArgToLong(9, 1) -- SnapToGround
local result = ExecuteCall("TeleportToPosition")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4791</ID>
                      <Description>"AppearAt - Dammon"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local object = "S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a" -- Zevlor
local object = "S_GLO_Wyll_Cambion_491a7686-3081-405b-983c-289ec8781e0a" -- Mizora
local object = "S_DEN_Weaponsmith_e2ad06ec-8034-479a-9f69-b86faea6dc79" -- Dammon
SPAWNED_UNIT = object
local player = GetHostCharacter()
SetArgToString(0, object)
SetArgToString(1, player)
SetArgToLong(2, 1)
SetArgToLong(3, 0)
SetArgToLong(4, 0)
SetArgToLong(5, 0)
local result = ExecuteCall("AppearAt")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4783</ID>
                      <Description>"AppearAt - Mizora"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
local object = "S_GLO_Wyll_Cambion_491a7686-3081-405b-983c-289ec8781e0a"
SPAWNED_UNIT = object
SetArgToString(0, object)
SetArgToString(1, player)
SetArgToLong(2, 1)
SetArgToLong(3, 0)
SetArgToLong(4, 0)
SetArgToLong(5, 0)
local result = ExecuteCall("AppearAt")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4806</ID>
                      <Description>"AppearAt - Minthara"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
local object = "S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b"
SPAWNED_UNIT = object
SetArgToString(0, object)
SetArgToString(1, player)
SetArgToLong(2, 1)
SetArgToLong(3, 0)
SetArgToLong(4, 0)
SetArgToLong(5, 0)
local result = ExecuteCall("AppearAt")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4779</ID>
                      <Description>"Get Position of UUID"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{$lua}
if syntaxcheck then return end
[ENABLE]
local x, y, z = GetPosition(SPAWNED_UNIT)
printf("Object is at (%.4f, %.4f, %.4f)", x, y, z)
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4784</ID>
                      <Description>"Resurrect"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
SetArgToLong(1, 0)
SetArgToLong(2, 0)
local result = ExecuteCall("Resurrect")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4786</ID>
                      <Description>"AddAttitudeTowardsPlayer"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, SPAWNED_UNIT)
SetArgToString(1, player)
SetArgToLong(2, 50)
local result = ExecuteCall("AddAttitudeTowardsPlayer")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4787</ID>
                      <Description>"ChangeApprovalRating"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, SPAWNED_UNIT)
SetArgToString(1, player)
SetArgToLong(2, 0)
SetArgToLong(3, 100)
ClearArg(4)
local result = ExecuteCall("ChangeApprovalRating")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4788</ID>
                      <Description>"SetCanTrade"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
SetArgToLong(1, 1)
local result = ExecuteCall("SetCanTrade")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4789</ID>
                      <Description>"IsInteractionDisabled"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
ClearArg(1)
local result = ExecuteCall("IsInteractionDisabled")
if result ~= 1 then
  print("command failed")
else
  print(GetArgAsLong(1))
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4790</ID>
                      <Description>"IsDialogueBlocked"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
ClearArg(1)
local result = ExecuteCall("IsDialogueBlocked")
if result ~= 1 then
  print("command failed")
else
  print(GetArgAsLong(1))
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4792</ID>
                      <Description>"GetFaction"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, player)
ClearArg(1)
local result = ExecuteCall("GetFaction")
if result ~= 1 then
  print("command failed")
else
  print(GetArgAsString(1))
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4807</ID>
                      <Description>"GetFaction"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, player)
ClearArg(1)
local result = ExecuteCall("GetFaction")
if result ~= 1 then
  print("command failed")
else
  print(GetArgAsString(1))
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4793</ID>
                      <Description>"GetIndividualRelation"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local target = SPAWNED_UNIT
local player = GetHostCharacter()

SetArgToString(0, player)
ClearArg(1)
local result = ExecuteCall("GetFaction")
if result ~= 1 then
  print("GetFaction of Player Failed")
  return
end
local playerFaction = GetArgAsString(1)

SetArgToString(0, target)
ClearArg(1)
result = ExecuteCall("GetFaction")
if result ~= 1 then
  print("GetFaction of Unit Failed")
  return
end
local targetFaction = GetArgAsString(1)

SetArgToString(1, playerFaction)
SetArgToString(0, targetFaction)
ClearArg(2)
result = ExecuteCall("GetRelation")
if result ~= 1 then
  print("GetRelation Failed")
else
  print("GetRelation: " .. GetArgAsInteger(2))
end

SetArgToString(0, playerFaction)
SetArgToString(1, targetFaction)
ClearArg(2)
result = ExecuteCall("GetRelationRaw")
if result ~= 1 then
  print("GetRelationRaw Failed")
else
  print("GetRelationRaw: " .. GetArgAsInteger(2))
end

SetArgToString(0, target)
SetArgToString(1, playerFaction)
ClearArg(2)
result = ExecuteCall("GetIndividualRelation")
if result ~= 1 then
  print("GetIndividualRelation Failed")
else
  print("GetIndividualRelation: " .. GetArgAsInteger(2))
end

SetArgToString(0, target)
SetArgToString(1, player)
ClearArg(2)
result = ExecuteCall("IsEnemy")
if result ~= 1 then
  print("IsEnemy Failed")
else
  print("IsEnemy: " .. GetArgAsInteger(2))
end

SetArgToString(0, target)
SetArgToString(1, player)
ClearArg(2)
result = ExecuteCall("IsAlly")
if result ~= 1 then
  print("IsAlly Failed")
else
  print("IsAlly: " .. GetArgAsInteger(2))
end

SetArgToString(0, player)
SetArgToString(1, target)
ClearArg(2)
result = ExecuteCall("IsNeutral")
if result ~= 1 then
  print("IsNeutral Failed")
else
  print("IsNeutral: " .. GetArgAsInteger(2))
end

SetArgToString(1, target)
SetArgToString(0, player)
ClearArg(2)
result = ExecuteCall("IsEnemy")
if result ~= 1 then
  print("IsEnemy Failed")
else
  print("IsEnemy: " .. GetArgAsInteger(2))
end

SetArgToString(1, target)
SetArgToString(0, player)
ClearArg(2)
result = ExecuteCall("IsAlly")
if result ~= 1 then
  print("IsAlly Failed")
else
  print("IsAlly: " .. GetArgAsInteger(2))
end

SetArgToString(1, player)
SetArgToString(0, target)
ClearArg(2)
result = ExecuteCall("IsNeutral")
if result ~= 1 then
  print("IsNeutral Failed")
else
  print("IsNeutral: " .. GetArgAsInteger(2))
end

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4810</ID>
                      <Description>"SetCanGossip"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT)
SetArgToLong(1, 1)
result = ExecuteCall("SetCanGossip")
if result ~= 1 then
  print("SetCanGossip Failed")
else
  print("SetCanGossip Success")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4811</ID>
                      <Description>"SetRelation"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local target = SPAWNED_UNIT
local player = GetHostCharacter()

SetArgToString(0, player)
ClearArg(1)
local result = ExecuteCall("GetFaction")
if result ~= 1 then
  print("GetFaction of Player Failed")
  return
end
local playerFaction = GetArgAsString(1)

SetArgToString(0, target)
ClearArg(1)
result = ExecuteCall("GetFaction")
if result ~= 1 then
  print("GetFaction of Unit Failed")
  return
end
local targetFaction = GetArgAsString(1)

SetArgToString(1, playerFaction)
SetArgToString(0, targetFaction)
SetArgToLong(2, 50)
result = ExecuteCall("SetRelation")
if result ~= 1 then
  print("SetRelation Failed")
else
  print("SetRelation Success")
end

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4809</ID>
                      <Description>"ClearIndividualRelation"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]

local player = GetHostCharacter()
SetArgToString(0, player)
ClearArg(1)
local result = ExecuteCall("GetFaction")
if result ~= 1 then
  print("GetFaction Failed")
  return
end

local playerFaction = GetArgAsString(1)

local player = GetHostCharacter()
SetArgToString(0, SPAWNED_UNIT)
SetArgToString(1, playerFaction)
local result = ExecuteCall("ClearIndividualRelation")
if result ~= 1 then
  print("ClearIndividualRelation Failed")
else
  print("ClearIndividualRelation Success")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4812</ID>
                      <Description>"ResetRelation"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local target = SPAWNED_UNIT
local player = GetHostCharacter()

SetArgToString(0, player)
ClearArg(1)
local result = ExecuteCall("GetFaction")
if result ~= 1 then
  print("GetFaction of Player Failed")
  return
end
local playerFaction = GetArgAsString(1)

SetArgToString(0, target)
ClearArg(1)
result = ExecuteCall("GetFaction")
if result ~= 1 then
  print("GetFaction of Unit Failed")
  return
end
local targetFaction = GetArgAsString(1)

SetArgToString(0, playerFaction)
SetArgToString(1, targetFaction)
result = ExecuteCall("ResetRelation")
if result ~= 1 then
  print("ResetRelation Failed")
else
  print("ResetRelation Success")
end

SetArgToString(1, playerFaction)
SetArgToString(0, targetFaction)
result = ExecuteCall("ResetRelation")
if result ~= 1 then
  print("ResetRelation Failed")
else
  print("ResetRelation Success")
end

[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4808</ID>
                      <Description>"SetRelationTemporaryHostile"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
local player = GetHostCharacter()
SetArgToString(0, SPAWNED_UNIT)
SetArgToString(1, player)
local result = ExecuteCall("SetRelationTemporaryHostile")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>4785</ID>
                  <Description>"Other Commands"</Description>
                  <Options moHideChildren="1"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>4782</ID>
                      <Description>"SetVisible"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, SPAWNED_UNIT) -- SourceObject
SetArgToLong(1, 1)
local result = ExecuteCall("SetVisible")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>4796</ID>
                      <Description>"Pickup"</Description>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript Async="1">{$lua}
if syntaxcheck then return end
[ENABLE]
SetArgToString(0, GetHostCharacter())
SetArgToString(1, "LOOT_DLC_Adventurers_Pack_3b22432d-b940-389b-652b-e73556021f0d")
SetArgToLong(2, 0)
SetArgToLong(3, 1)
local result = ExecuteCall("Pickup")
if result ~= 1 then
  print("command failed")
end
[DISABLE]
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>538</ID>
      <Description>"Broken"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>210</ID>
          <Description>"Unlimited Spells (must have 3+ slots)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(spells,$process,F2 0F 10 76 18 F2)
alloc(newmem,$1000,spells)

label(code)
label(return)

newmem:
  cmp [rsp+34],BFF00000
  jne code
  cmp [rsi+24],40000000
  je code
  cmp [rsi+24],3FF00000
  je code
  movsd xmm6,[rsi+20]
  jmp return
code:
  movsd xmm6,[rsi+18]
  jmp return

spells:
  jmp newmem
return:
registersymbol(spells)

[DISABLE]
spells:
  db F2 0F 10 76 18
unregistersymbol(spells)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+20C3C6C

"bg3.exe"+20C3C3F: 48 89 44 24 58           -  mov [rsp+58],rax
"bg3.exe"+20C3C44: 48 8B 47 10              -  mov rax,[rdi+10]
"bg3.exe"+20C3C48: 48 89 44 24 50           -  mov [rsp+50],rax
"bg3.exe"+20C3C4D: 48 8D 44 24 30           -  lea rax,[rsp+30]
"bg3.exe"+20C3C52: 48 89 44 24 20           -  mov [rsp+20],rax
"bg3.exe"+20C3C57: 45 8B CF                 -  mov r9d,r15d
"bg3.exe"+20C3C5A: 4D 8B C4                 -  mov r8,r12
"bg3.exe"+20C3C5D: 48 8D 54 24 40           -  lea rdx,[rsp+40]
"bg3.exe"+20C3C62: 48 8D 4C 24 78           -  lea rcx,[rsp+78]
"bg3.exe"+20C3C67: E8 D4 6D 9B 00           -  call bg3.exe+2A7AA40
// ---------- INJECTING HERE ----------
"bg3.exe"+20C3C6C: F2 0F 10 76 18           -  movsd xmm6,[rsi+18]
// ---------- DONE INJECTING  ----------
"bg3.exe"+20C3C71: F2 0F 10 54 24 30        -  movsd xmm2,[rsp+30]
"bg3.exe"+20C3C77: F2 0F 58 D6              -  addsd xmm2,xmm6
"bg3.exe"+20C3C7B: 48 8B 07                 -  mov rax,[rdi]
"bg3.exe"+20C3C7E: 48 89 44 24 38           -  mov [rsp+38],rax
"bg3.exe"+20C3C83: 4C 8D 4E 28              -  lea r9,[rsi+28]
"bg3.exe"+20C3C87: 0F B6 85 58 03 00 00     -  movzx eax,byte ptr [rbp+00000358]
"bg3.exe"+20C3C8E: 88 44 24 20              -  mov [rsp+20],al
"bg3.exe"+20C3C92: 48 8B D6                 -  mov rdx,rsi
"bg3.exe"+20C3C95: 49 8B CE                 -  mov rcx,r14
"bg3.exe"+20C3C98: E8 13 0D 00 00           -  call bg3.exe+20C49B0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>236</ID>
          <Description>"Player Scripts"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(playerCharacters,$process,49 8B 59 28 33 C9 41 8B 54)
globalalloc(playerCharactersPtr,$100)
alloc(newmem,$1000,playerCharacters)

label(code)
label(return)
label(reset)

newmem:
  mov rbx,playerCharactersPtr
  xor rcx,rcx
@@:
  cmp qword ptr [rbx+rcx],r9
  je code
  cmp qword ptr [rbx+rcx],0
  je @f
  add rcx,8
  cmp rcx,20
  jge reset
  jmp @b
@@:
  mov [rbx+rcx],r9
  jmp code
reset:
  xor rcx,rcx
  mov [rbx+00],rcx
  mov [rbx+08],rcx
  mov [rbx+10],rcx
  mov [rbx+18],rcx
code:
  mov rbx,[r9+28]
  xor ecx,ecx
  jmp return

playerCharacters:
  jmp newmem
  nop
return:
registersymbol(playerCharacters)

[DISABLE]
playerCharacters:
  db 49 8B 59 28 33 C9
unregistersymbol(playerCharacters)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+2689603

"bg3.exe"+26895D8: 4C 8D 6A 10              -  lea r13,[rdx+10]
"bg3.exe"+26895DC: 4C 89 6C 24 38           -  mov [rsp+38],r13
"bg3.exe"+26895E1: 49 8B 7C 24 38           -  mov rdi,[r12+38]
"bg3.exe"+26895E6: 41 8B 44 24 44           -  mov eax,[r12+44]
"bg3.exe"+26895EB: 48 8D 34 C7              -  lea rsi,[rdi+rax*8]
"bg3.exe"+26895EF: 48 3B FE                 -  cmp rdi,rsi
"bg3.exe"+26895F2: 0F 84 D2 00 00 00        -  je bg3.exe+26896CA
"bg3.exe"+26895F8: 4D 8D 65 18              -  lea r12,[r13+18]
"bg3.exe"+26895FC: 4C 8B 6D B8              -  mov r13,[rbp-48]
"bg3.exe"+2689600: 4C 8B 0F                 -  mov r9,[rdi]
// ---------- INJECTING HERE ----------
"bg3.exe"+2689603: 49 8B 59 28              -  mov rbx,[r9+28]
"bg3.exe"+2689607: 33 C9                    -  xor ecx,ecx
// ---------- DONE INJECTING  ----------
"bg3.exe"+2689609: 41 8B 54 24 0C           -  mov edx,[r12+0C]
"bg3.exe"+268960E: 85 D2                    -  test edx,edx
"bg3.exe"+2689610: 74 1B                    -  je bg3.exe+268962D
"bg3.exe"+2689612: 4D 8B 04 24              -  mov r8,[r12]
"bg3.exe"+2689616: 49 39 1C C8              -  cmp [r8+rcx*8],rbx
"bg3.exe"+268961A: 74 08                    -  je bg3.exe+2689624
"bg3.exe"+268961C: FF C1                    -  inc ecx
"bg3.exe"+268961E: 3B CA                    -  cmp ecx,edx
"bg3.exe"+2689620: 73 0B                    -  jae bg3.exe+268962D
"bg3.exe"+2689622: EB F2                    -  jmp bg3.exe+2689616
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>321</ID>
              <Description>"Unlimited Actions/Spells"</Description>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(actions,$process,0F 28 F2 4C 8B F2 E8 ?? ?? ?? ?? 48 8D)
globalalloc(playerCharactersPtr,$100)
alloc(newmem,$1000,actions)

label(code)
label(return)
label(change)

newmem:
  mov r14,playerCharactersPtr
  mov rax,[r14+00]
  test rax,rax
  je @f
  cmp [rax+10],rbx
  je change
@@:
  mov rax,[r14+08]
  test rax,rax
  je @f
  cmp [rax+10],rbx
  je change
@@:
  mov rax,[r14+10]
  test rax,rax
  je @f
  cmp [rax+10],rbx
  je change
@@:
  mov rax,[r14+18]
  test rax,rax
  je @f
  cmp [rax+10],rbx
  je change
@@:
  jmp code
change:
  xorps xmm2,xmm2
code:
  movaps xmm6,xmm2
  mov r14,rdx
  jmp return

actions:
  jmp newmem
  nop
return:
registersymbol(actions)

[DISABLE]

actions:
  db 0F 28 F2 4C 8B F2

unregistersymbol(actions)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+2496B09

"bg3.exe"+2496AD7: 48 81 EC 80 00 00 00     -  sub rsp,00000080
"bg3.exe"+2496ADE: 0F 29 74 24 70           -  movaps [rsp+70],xmm6
"bg3.exe"+2496AE3: 48 8B 05 3E 24 62 03     -  mov rax,[bg3.exe+5AB8F28]
"bg3.exe"+2496AEA: 48 33 C4                 -  xor rax,rsp
"bg3.exe"+2496AED: 48 89 44 24 68           -  mov [rsp+68],rax
"bg3.exe"+2496AF2: 48 8B 19                 -  mov rbx,[rcx]
"bg3.exe"+2496AF5: 48 8B F9                 -  mov rdi,rcx
"bg3.exe"+2496AF8: 48 8B 0D 51 CF 69 03     -  mov rcx,[bg3.exe+5B33A50]
"bg3.exe"+2496AFF: 49 8B E9                 -  mov rbp,r9
"bg3.exe"+2496B02: 8B B4 24 D0 00 00 00     -  mov esi,[rsp+000000D0]
// ---------- INJECTING HERE ----------
"bg3.exe"+2496B09: 0F 28 F2                 -  movaps xmm6,xmm2
"bg3.exe"+2496B0C: 4C 8B F2                 -  mov r14,rdx
// ---------- DONE INJECTING  ----------
"bg3.exe"+2496B0F: E8 7C 1F 80 FF           -  call bg3.exe+1C98A90
"bg3.exe"+2496B14: 48 8D 54 24 58           -  lea rdx,[rsp+58]
"bg3.exe"+2496B19: 48 89 5C 24 58           -  mov [rsp+58],rbx
"bg3.exe"+2496B1E: 48 8D 4C 24 30           -  lea rcx,[rsp+30]
"bg3.exe"+2496B23: 48 89 44 24 60           -  mov [rsp+60],rax
"bg3.exe"+2496B28: E8 A3 FC 32 FF           -  call bg3.exe+17C67D0
"bg3.exe"+2496B2D: 44 8B CE                 -  mov r9d,esi
"bg3.exe"+2496B30: 4C 8D 05 51 BB 6C 03     -  lea r8,[bg3.exe+5B62688]
"bg3.exe"+2496B37: 48 8D 54 24 30           -  lea rdx,[rsp+30]
"bg3.exe"+2496B3C: 48 8D 4C 24 58           -  lea rcx,[rsp+58]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>161</ID>
          <Description>"Character Pointers"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(character,$process,4A 8B 04 00 48 89 45 BF)
alloc(newmem,$1000,character)

label(code)
label(return)
label(characterPtr)
label(characterIdx)

newmem:
code:
  mov rax,[rax+r8]
  mov [characterPtr],rax
  mov [rbp-41],rax
  jmp return

align 10

characterPtr:
  dq 0
characterIdx:
  dq 0

character:
  jmp newmem
  nop 3
return:
registersymbol(character)
registersymbol(characterPtr)
registersymbol(characterIdx)

[DISABLE]
character:
  db 4A 8B 04 00 48 89 45 BF
unregistersymbol(character)
unregistersymbol(characterPtr)
unregistersymbol(characterIdx)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+2652AA8

"bg3.exe"+2652A7C: 48 63 05 AD 8A 4E 03  -  movsxd  rax,dword ptr [bg3.exe+5B3B530]
"bg3.exe"+2652A83: 89 45 A7              -  mov [rbp-59],eax
"bg3.exe"+2652A86: 48 8D 04 40           -  lea rax,[rax+rax*2]
"bg3.exe"+2652A8A: 48 C1 E0 06           -  shl rax,06
"bg3.exe"+2652A8E: 4A 8B 04 00           -  mov rax,[rax+r8]
"bg3.exe"+2652A92: 48 89 45 AF           -  mov [rbp-51],rax
"bg3.exe"+2652A96: 48 63 05 E7 89 4E 03  -  movsxd  rax,dword ptr [bg3.exe+5B3B484]
"bg3.exe"+2652A9D: 89 45 B7              -  mov [rbp-49],eax
"bg3.exe"+2652AA0: 48 8D 04 40           -  lea rax,[rax+rax*2]
"bg3.exe"+2652AA4: 48 C1 E0 06           -  shl rax,06
// ---------- INJECTING HERE ----------
"bg3.exe"+2652AA8: 4A 8B 04 00           -  mov rax,[rax+r8]
"bg3.exe"+2652AAC: 48 89 45 BF           -  mov [rbp-41],rax
// ---------- DONE INJECTING  ----------
"bg3.exe"+2652AB0: 48 63 05 35 8B 4E 03  -  movsxd  rax,dword ptr [bg3.exe+5B3B5EC]
"bg3.exe"+2652AB7: 89 45 C7              -  mov [rbp-39],eax
"bg3.exe"+2652ABA: 48 8D 04 40           -  lea rax,[rax+rax*2]
"bg3.exe"+2652ABE: 48 C1 E0 06           -  shl rax,06
"bg3.exe"+2652AC2: 4A 8B 04 00           -  mov rax,[rax+r8]
"bg3.exe"+2652AC6: 48 89 45 CF           -  mov [rbp-31],rax
"bg3.exe"+2652ACA: 48 63 05 C7 8A 4E 03  -  movsxd  rax,dword ptr [bg3.exe+5B3B598]
"bg3.exe"+2652AD1: 89 45 D7              -  mov [rbp-29],eax
"bg3.exe"+2652AD4: 48 8D 04 40           -  lea rax,[rax+rax*2]
"bg3.exe"+2652AD8: 48 C1 E0 06           -  shl rax,06
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>162</ID>
              <Description>"Character X"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <Address>characterPtr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>163</ID>
                  <Description>"Change to Cycle Characters"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:First
1:Second
2:Third
3:Fourth
4:Fifth
5:Sixth
6:Seventh
7:Eighth
8:Ninth
9:Tenth
</DropDownList>
                  <VariableType>4 Bytes</VariableType>
                  <Address>characterIdx</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>164</ID>
                  <Description>"Abilities"</Description>
                  <GroupHeader>1</GroupHeader>
                  <Address>+68</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>8*[characterIdx]</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>166</ID>
                      <Description>"Name1 (don't touch!)"</Description>
                      <VariableType>String</VariableType>
                      <Length>128</Length>
                      <Unicode>1</Unicode>
                      <CodePage>0</CodePage>
                      <ZeroTerminate>1</ZeroTerminate>
                      <Address>+40</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>168</ID>
                      <Description>"Name2 (don't touch!)"</Description>
                      <VariableType>String</VariableType>
                      <Length>128</Length>
                      <Unicode>1</Unicode>
                      <CodePage>0</CodePage>
                      <ZeroTerminate>1</ZeroTerminate>
                      <Address>+40</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>165</ID>
                      <Description>"Strength"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+64</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>169</ID>
                      <Description>"Dexterity"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+68</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>170</ID>
                      <Description>"Constitution"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+6C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>171</ID>
                      <Description>"Intelligence"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+70</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>172</ID>
                      <Description>"Wisdom"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+74</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>173</ID>
                      <Description>"Charisma"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+78</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>559</ID>
          <Description>"Gain Bonus Experience"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(XpGain,$process,44 8B ?? 48 8D ?? ?? ?? 8B ?? E8 ?? ?? ?? ?? 48 83 ?? 08)
alloc(newmem,$1000,XpGain)

label(XpGainBkp)
label(XpGainPtr)
label(return)

newmem:

XpGainBkp:
  readmem(XpGain,7)
XpGainPtr:
  mov r8d,#100
  jmp return

XpGain:
  jmp newmem
  nop 2
return:
registersymbol(XpGain)
registersymbol(XpGainBkp)
registersymbol(XpGainPtr)

[DISABLE]
XpGain:
  db 44 8B C6 48 8D 55 C8
unregistersymbol(XpGain)
unregistersymbol(XpGainBkp)
unregistersymbol(XpGainPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+4D426FF

bg3.exe+4D426DC: 0F 57 C9           - xorps xmm1,xmm1
bg3.exe+4D426DF: F3 0F 7F 4D D8     - movdqu [rbp-28],xmm1
bg3.exe+4D426E4: 0F B6 48 20        - movzx ecx,byte ptr [rax+20]
bg3.exe+4D426E8: 88 4D E8           - mov [rbp-18],cl
bg3.exe+4D426EB: 84 C9              - test cl,cl
bg3.exe+4D426ED: 74 10              - je bg3.exe+4D426FF
bg3.exe+4D426EF: 48 8B 48 10        - mov rcx,[rax+10]
bg3.exe+4D426F3: 48 89 4D E0        - mov [rbp-20],rcx
bg3.exe+4D426F7: 48 8B 40 18        - mov rax,[rax+18]
bg3.exe+4D426FB: 48 89 45 D8        - mov [rbp-28],rax
// ---------- INJECTING HERE ----------
bg3.exe+4D426FF: 44 8B C6           - mov r8d,esi
// ---------- DONE INJECTING  ----------
bg3.exe+4D42702: 48 8D 55 C8        - lea rdx,[rbp-38]
bg3.exe+4D42706: 49 8B CE           - mov rcx,r14
bg3.exe+4D42709: E8 32 04 00 00     - call bg3.exe+4D42B40
bg3.exe+4D4270E: 48 83 C3 08        - add rbx,08
bg3.exe+4D42712: 49 3B DC           - cmp rbx,r12
bg3.exe+4D42715: 0F 85 55 FF FF FF  - jne bg3.exe+4D42670
bg3.exe+4D4271B: 48 8B 7C 24 70     - mov rdi,[rsp+70]
bg3.exe+4D42720: 48 8B 74 24 58     - mov rsi,[rsp+58]
bg3.exe+4D42725: 45 33 F6           - xor r14d,r14d
bg3.exe+4D42728: 48 8B 5C 24 48     - mov rbx,[rsp+48]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>560</ID>
              <Description>"Experience"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>XpGainPtr+2</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"Health Pointer (equip something to populate)"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(health,$process,0F B6 4B ?? E8 ?? ?? ?? ?? 84 C0 0F 84 ?? ?? ?? ?? 0F)
alloc(newmem,$1000,health)

label(healthBkp)
label(healthPtr)
label(return)

newmem:
  push rcx
  mov rcx,healthPtr
  mov [rcx],rax
  pop rcx
healthBkp:
  reassemble(health+04)
  jmp return

healthPtr:
  dq 0

health+04:
  jmp newmem
return:
registersymbol(health)
registersymbol(healthBkp)
registersymbol(healthPtr)

[DISABLE]
health+04:
  reassemble(healthBkp)
unregistersymbol(health)
unregistersymbol(healthBkp)
unregistersymbol(healthPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+2F78670

bg3.exe+2F78648: E8 43 45 23 FE     - call bg3.exe+11ACB90
bg3.exe+2F7864D: 48 8D 4D A7        - lea rcx,[rbp-59]
bg3.exe+2F78651: 83 7D B3 40        - cmp dword ptr [rbp-4D],40
bg3.exe+2F78655: 48 0F 4F 4D A7     - cmovg rcx,[rbp-59]
bg3.exe+2F7865A: 48 8B 01           - mov rax,[rcx]
bg3.exe+2F7865D: 48 0F BA E8 05     - bts rax,05
bg3.exe+2F78662: 48 89 01           - mov [rcx],rax
bg3.exe+2F78665: 48 8B 45 97        - mov rax,[rbp-69]
bg3.exe+2F78669: 89 78 5C           - mov [rax+5C],edi
bg3.exe+2F7866C: 0F B6 4B 1C        - movzx ecx,byte ptr [rbx+1C]
// ---------- INJECTING HERE ----------
bg3.exe+2F78670: E8 4B 27 5E 00     - call bg3.exe+355ADC0
// ---------- DONE INJECTING  ----------
bg3.exe+2F78675: 84 C0              - test al,al
bg3.exe+2F78677: 0F 84 98 00 00 00  - je bg3.exe+2F78715
bg3.exe+2F7867D: 0F B6 43 1C        - movzx eax,byte ptr [rbx+1C]
bg3.exe+2F78681: 41 8B 4C 87 14     - mov ecx,[r15+rax*4+14]
bg3.exe+2F78686: E8 E5 7B 9F 00     - call bg3.exe+3970270
bg3.exe+2F7868B: 8B F8              - mov edi,eax
bg3.exe+2F7868D: 89 44 24 28        - mov [rsp+28],eax
bg3.exe+2F78691: 48 83 C3 18        - add rbx,18
bg3.exe+2F78695: 8B 03              - mov eax,[rbx]
bg3.exe+2F78697: 85 C0              - test eax,eax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>80</ID>
              <Description>"Health"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <Address>healthPtr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>81</ID>
                  <Description>"Current"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>82</ID>
                  <Description>"Maximum"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>275</ID>
                  <Description>"Absorb"</Description>
                  <ShowAsSigned>1</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>83</ID>
                  <Description>"God Mode"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:On
0:Off
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>+94</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>839</ID>
          <Description>"Unlimited Spells"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(abilities2,$process,88 44 ?? ?? E8 ?? ?? ?? ?? 84 C0 75 ?? 48 83)
abilities2+0B:
  db EB
registersymbol(abilities2)

[DISABLE]
abilities2+0B:
  db 75
unregistersymbol(abilities2)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+592F21D

bg3.exe+592F1EF: C6 44 24 48 00           - mov byte ptr [rsp+48],00
bg3.exe+592F1F4: 89 6C 24 40              - mov [rsp+40],ebp
bg3.exe+592F1F8: 48 89 5C 24 38           - mov [rsp+38],rbx
bg3.exe+592F1FD: F2 0F 11 74 24 30        - movsd [rsp+30],xmm6
bg3.exe+592F203: 4C 89 7C 24 28           - mov [rsp+28],r15
bg3.exe+592F208: 4C 89 64 24 20           - mov [rsp+20],r12
bg3.exe+592F20D: 0F 11 44 24 60           - movups [rsp+60],xmm0
bg3.exe+592F212: 88 44 24 71              - mov [rsp+71],al
bg3.exe+592F216: E8 35 FD FF FF           - call bg3.exe+592EF50
bg3.exe+592F21B: 84 C0                    - test al,al
// ---------- INJECTING HERE ----------
bg3.exe+592F21D: 75 31                    - jne bg3.exe+592F250
// ---------- DONE INJECTING  ----------
bg3.exe+592F21F: 48 83 C3 10              - add rbx,10
bg3.exe+592F223: 48 3B DF                 - cmp rbx,rdi
bg3.exe+592F226: 75 88                    - jne bg3.exe+592F1B0
bg3.exe+592F228: 32 C0                    - xor al,al
bg3.exe+592F22A: 4C 8D 9C 24 90 00 00 00  - lea r11,[rsp+00000090]
bg3.exe+592F232: 49 8B 5B 30              - mov rbx,[r11+30]
bg3.exe+592F236: 49 8B 6B 40              - mov rbp,[r11+40]
bg3.exe+592F23A: 49 8B 73 48              - mov rsi,[r11+48]
bg3.exe+592F23E: 41 0F 28 73 F0           - movaps xmm6,[r11-10]
bg3.exe+592F243: 49 8B E3                 - mov rsp,r11
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>838</ID>
          <Description>"Unlimited Spells"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(abilities,$process,0F 93 C0 EB ?? F2 0F 10 ?? ?? 66 0F 2F ?? ?? 0F 93 C0)
abilities+00:
  db B0 01 90
abilities+0F:
  db B0 01 90
registersymbol(abilities)

[DISABLE]
abilities+00:
  db 0F 93 C0
abilities+0F:
  db 0F 93 C0
unregistersymbol(abilities)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+592D5E6

bg3.exe+592D5C1: 4C 89 7D C0     - mov [rbp-40],r15
bg3.exe+592D5C5: 4D 8B C4        - mov r8,r12
bg3.exe+592D5C8: 48 89 45 D0     - mov [rbp-30],rax
bg3.exe+592D5CC: B2 0E           - mov dl,0E
bg3.exe+592D5CE: 49 8B CE        - mov rcx,r14
bg3.exe+592D5D1: E8 5A 42 00 00  - call bg3.exe+5931830
bg3.exe+592D5D6: 80 7D 70 00     - cmp byte ptr [rbp+70],00
bg3.exe+592D5DA: 74 0F           - je bg3.exe+592D5EB
bg3.exe+592D5DC: F2 0F 10 43 20  - movsd xmm0,[rbx+20]
bg3.exe+592D5E1: 66 0F 2F 45 58  - comisd xmm0,[rbp+58]
// ---------- INJECTING HERE ----------
bg3.exe+592D5E6: 0F 93 C0        - setae al
// ---------- DONE INJECTING  ----------
bg3.exe+592D5E9: EB 80           - jmp bg3.exe+592D56B
bg3.exe+592D5EB: F2 0F 10 43 18  - movsd xmm0,[rbx+18]
bg3.exe+592D5F0: 66 0F 2F 45 58  - comisd xmm0,[rbp+58]
bg3.exe+592D5F5: 0F 93 C0        - setae al
bg3.exe+592D5F8: E9 6E FF FF FF  - jmp bg3.exe+592D56B
bg3.exe+592D5FD: CC              - int 3 
bg3.exe+592D5FE: CC              - int 3 
bg3.exe+592D5FF: CC              - int 3 
bg3.exe+592D600: CC              - int 3 
bg3.exe+592D601: CC              - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>558</ID>
          <Description>"Zero Weight"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(weight,$process,E8 ?? ?? ?? ?? 03 30 48 83 ?? 08)
weight+05:
  xor esi,esi
registersymbol(weight)

[DISABLE]
weight+05:
  db 03 30
unregistersymbol(weight)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+4363694

bg3.exe+436366F: 74 2E              - je bg3.exe+436369F
bg3.exe+4363671: 48 8B D3           - mov rdx,rbx
bg3.exe+4363674: 49 8B CF           - mov rcx,r15
bg3.exe+4363677: E8 84 CC B4 FE     - call bg3.exe+2EB0300
bg3.exe+436367C: 48 85 C0           - test rax,rax
bg3.exe+436367F: 74 15              - je bg3.exe+4363696
bg3.exe+4363681: 41 B8 FF FF FF FF  - mov r8d,FFFFFFFF
bg3.exe+4363687: 48 8D 54 24 40     - lea rdx,[rsp+40]
bg3.exe+436368C: 48 8B C8           - mov rcx,rax
bg3.exe+436368F: E8 6C 53 EF FF     - call bg3.exe+4258A00
// ---------- INJECTING HERE ----------
bg3.exe+4363694: 03 30              - add esi,[rax]
// ---------- DONE INJECTING  ----------
bg3.exe+4363696: 48 83 C3 08        - add rbx,08
bg3.exe+436369A: 48 3B DF           - cmp rbx,rdi
bg3.exe+436369D: 75 D2              - jne bg3.exe+4363671
bg3.exe+436369F: 89 75 4C           - mov [rbp+4C],esi
bg3.exe+43636A2: 80 7D 50 00        - cmp byte ptr [rbp+50],00
bg3.exe+43636A6: 4C 8B 7C 24 20     - mov r15,[rsp+20]
bg3.exe+43636AB: 48 8B 7C 24 58     - mov rdi,[rsp+58]
bg3.exe+43636B0: 48 8B 74 24 50     - mov rsi,[rsp+50]
bg3.exe+43636B5: 48 8B 5C 24 48     - mov rbx,[rsp+48]
bg3.exe+43636BA: 75 04              - jne bg3.exe+43636C0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>653</ID>
          <Description>"Always Win Rolls (use Dice Roll cheats in console commands)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(rolls,$process,41 83 ?? 14 75 ?? B0)
alloc(rollsBkp,2)
rollsBkp:
  readmem(rolls+04,2)
rolls+04:
  nop 2
registersymbol(rolls)
registersymbol(rollsBkp)

[DISABLE]
rolls+04:
  readmem(rollsBkp,2)
unregistersymbol(rolls)
unregistersymbol(rollsBkp)
dealloc(rollsBkp)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+48E6F65

bg3.exe+48E6F3B: 48 85 C0                 - test rax,rax
bg3.exe+48E6F3E: 75 3F                    - jne bg3.exe+48E6F7F
bg3.exe+48E6F40: 48 8B C3                 - mov rax,rbx
bg3.exe+48E6F43: EB 45                    - jmp bg3.exe+48E6F8A
bg3.exe+48E6F45: 45 8B A6 BC 00 00 00     - mov r12d,[r14+000000BC]
bg3.exe+48E6F4C: 41 8B 86 C0 00 00 00     - mov eax,[r14+000000C0]
bg3.exe+48E6F53: 89 45 94                 - mov [rbp-6C],eax
bg3.exe+48E6F56: 41 0F B6 86 AC 00 00 00  - movzx eax,byte ptr [r14+000000AC]
bg3.exe+48E6F5E: 88 45 80                 - mov [rbp-80],al
bg3.exe+48E6F61: 41 83 FC 14              - cmp r12d,14
// ---------- INJECTING HERE ----------
bg3.exe+48E6F65: 75 07                    - jne bg3.exe+48E6F6E
// ---------- DONE INJECTING  ----------
bg3.exe+48E6F67: B0 01                    - mov al,01
bg3.exe+48E6F69: E9 5C FF FF FF           - jmp bg3.exe+48E6ECA
bg3.exe+48E6F6E: 41 83 FC 01              - cmp r12d,01
bg3.exe+48E6F72: 0F 85 48 FF FF FF        - jne bg3.exe+48E6EC0
bg3.exe+48E6F78: 32 C0                    - xor al,al
bg3.exe+48E6F7A: E9 4B FF FF FF           - jmp bg3.exe+48E6ECA
bg3.exe+48E6F7F: 48 8B D0                 - mov rdx,rax
bg3.exe+48E6F82: 48 8B CF                 - mov rcx,rdi
bg3.exe+48E6F85: E8 96 EB B9 FD           - call bg3.exe+2485B20
bg3.exe+48E6F8A: 48 89 85 D8 00 00 00     - mov [rbp+000000D8],rax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>652</ID>
          <Description>"Add 50 to Rolls (backup if the above ever breaks, this still fails on rolls of 1)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
// group search for current stats and find what accesses them during dialogs
aobscanmodule(maxRoll,$process,F3 0F 5C 05 ?? ?? ?? ?? F3 0F 59 05 ?? ?? ?? ?? E8 ?? ?? ?? ?? F3 0F 2C C0 48)
alloc(newmem,$1000,maxRoll)

label(maxRollBkp)
label(return)

newmem:
  mov eax,#50
maxRollBkp:
  readmem(maxRoll+19,4)
  jmp return

maxRoll+15:
  jmp newmem
  nop 3
return:
registersymbol(maxRoll)
registersymbol(maxRollBkp)

[DISABLE]
maxRoll+15:
  db F3 0F 2C C0
  readmem(maxRollBkp,4)
unregistersymbol(maxRoll)
unregistersymbol(maxRollBkp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+641FD20

bg3.exe+641FCFC: CC                       - int 3 
bg3.exe+641FCFD: CC                       - int 3 
bg3.exe+641FCFE: CC                       - int 3 
bg3.exe+641FCFF: CC                       - int 3 
bg3.exe+641FD00: 48 83 EC 28              - sub rsp,28
bg3.exe+641FD04: 66 0F 6E C1              - movd xmm0,ecx
bg3.exe+641FD08: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
bg3.exe+641FD0B: F3 0F 5C 05 8D 68 52 03  - subss xmm0,[bg3.exe+99465A0]
bg3.exe+641FD13: F3 0F 59 05 59 60 E1 03  - mulss xmm0,[bg3.exe+A235D74]
bg3.exe+641FD1B: E8 AC C4 71 02           - call bg3.exe+8B3C1CC
// ---------- INJECTING HERE ----------
bg3.exe+641FD20: F3 0F 2C C0              - cvttss2si eax,xmm0
// ---------- DONE INJECTING  ----------
bg3.exe+641FD24: 48 83 C4 28              - add rsp,28
bg3.exe+641FD28: C3                       - ret 
bg3.exe+641FD29: CC                       - int 3 
bg3.exe+641FD2A: CC                       - int 3 
bg3.exe+641FD2B: CC                       - int 3 
bg3.exe+641FD2C: CC                       - int 3 
bg3.exe+641FD2D: CC                       - int 3 
bg3.exe+641FD2E: CC                       - int 3 
bg3.exe+641FD2F: CC                       - int 3 
bg3.exe+641FD30: 40 53                    - push rbx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>795</ID>
          <Description>"Disable Damage"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(god,$process,80 B9 ?? ?? 00 00 00 0F 85 ?? ?? ?? ?? ?? 8B ?? ?? ?? 8B ?? ?? ?? 8B)
god+07:
  db 90 E9
registersymbol(god)

[DISABLE]
god+07:
  db 0F 85
unregistersymbol(god)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+492BC55

bg3.exe+492BC2E: 41 56                 - push r14
bg3.exe+492BC30: 41 57                 - push r15
bg3.exe+492BC32: 48 8D 6C 24 C9        - lea rbp,[rsp-37]
bg3.exe+492BC37: 48 81 EC 00 01 00 00  - sub rsp,00000100
bg3.exe+492BC3E: 48 8B 05 F3 34 09 07  - mov rax,[bg3.g_pAssertHook+F968]
bg3.exe+492BC45: 48 33 C4              - xor rax,rsp
bg3.exe+492BC48: 48 89 45 27           - mov [rbp+27],rax
bg3.exe+492BC4C: 45 8B E0              - mov r12d,r8d
bg3.exe+492BC4F: 4C 8B F2              - mov r14,rdx
bg3.exe+492BC52: 4C 8B F9              - mov r15,rcx
// ---------- INJECTING HERE ----------
bg3.exe+492BC55: 80 B9 C8 01 00 00 00  - cmp byte ptr [rcx+000001C8],00
// ---------- DONE INJECTING  ----------
bg3.exe+492BC5C: 0F 85 9C 02 00 00     - jne bg3.exe+492BEFE
bg3.exe+492BC62: 4C 8B 4A 10           - mov r9,[rdx+10]
bg3.exe+492BC66: 48 8B 72 08           - mov rsi,[rdx+08]
bg3.exe+492BC6A: 48 8B 1A              - mov rbx,[rdx]
bg3.exe+492BC6D: 33 FF                 - xor edi,edi
bg3.exe+492BC6F: 4D 85 C9              - test r9,r9
bg3.exe+492BC72: 74 40                 - je bg3.exe+492BCB4
bg3.exe+492BC74: 48 8B 46 08           - mov rax,[rsi+08]
bg3.exe+492BC78: 4C 89 4C 24 40        - mov [rsp+40],r9
bg3.exe+492BC7D: 48 89 44 24 48        - mov [rsp+48],rax
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4761</ID>
      <Description>"--- Game v4.1.1.3905231 --- Table v14 ---"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>99</ID>
      <Description>"Ignore This"</Description>
      <Options moHideChildren="1"/>
      <Color>FFFFFF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>98</ID>
          <Description>"Last Interacted Object"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(interact,$process,C3 8B 41 ?? 8B 51 ?? 03 C2 C3)
alloc(newmem,$1000,interact)

label(interactBkp)
label(interactPtr)
label(return)

newmem:
  mov rax,interactPtr
  mov [rax],rcx
interactBkp:
  mov eax,[rcx+50]
  mov edx,[rcx+58]
  jmp return

interactPtr:
  dq 0

interact+01:
  jmp newmem
  nop
return:
registersymbol(interact)
registersymbol(interactBkp)
registersymbol(interactPtr)

[DISABLE]
interact+01:
  db 8B 41 50 8B 51 58
unregistersymbol(interact)
unregistersymbol(interactBkp)
unregistersymbol(interactPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+2999D0C

"bg3.exe"+2999CFC: CC                             -  int 3 
"bg3.exe"+2999CFD: CC                             -  int 3 
"bg3.exe"+2999CFE: CC                             -  int 3 
"bg3.exe"+2999CFF: CC                             -  int 3 
"bg3.exe"+2999D00: 84 D2                          -  test dl,dl
"bg3.exe"+2999D02: 74 08                          -  je bg3.exe+2999D0C
"bg3.exe"+2999D04: 8B 41 50                       -  mov eax,[rcx+50]
"bg3.exe"+2999D07: 33 D2                          -  xor edx,edx
"bg3.exe"+2999D09: 03 C2                          -  add eax,edx
"bg3.exe"+2999D0B: C3                             -  ret 
// ---------- INJECTING HERE ----------
"bg3.exe"+2999D0C: 8B 41 50                       -  mov eax,[rcx+50]
"bg3.exe"+2999D0F: 8B 51 58                       -  mov edx,[rcx+58]
// ---------- DONE INJECTING  ----------
"bg3.exe"+2999D12: 03 C2                          -  add eax,edx
"bg3.exe"+2999D14: C3                             -  ret 
"bg3.exe"+2999D15: CC                             -  int 3 
"bg3.exe"+2999D16: CC                             -  int 3 
"bg3.exe"+2999D17: CC                             -  int 3 
"bg3.exe"+2999D18: CC                             -  int 3 
"bg3.exe"+2999D19: CC                             -  int 3 
"bg3.exe"+2999D1A: CC                             -  int 3 
"bg3.exe"+2999D1B: CC                             -  int 3 
"bg3.exe"+2999D1C: CC                             -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"Gain Bonus Experience"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(experience,$process,44 01 7A 1C 83 7D D8 04)
alloc(newmem,$1000,experience)

label(code)
label(return)

newmem:
  // add r15d,#100
code:
  add [rdx+1C],r15d
  cmp dword ptr [rbp-28],04
  jmp return

experience:
  jmp newmem
  nop 3
return:
registersymbol(experience)

[DISABLE]
experience:
  db 44 01 7A 1C 83 7D D8 04
unregistersymbol(experience)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+21DD95A

"bg3.exe"+21DD931: 41 8D 50 02        -  lea edx,[r8+02]
"bg3.exe"+21DD935: 48 8D 4D D0        -  lea rcx,[rbp-30]
"bg3.exe"+21DD939: E8 22 25 01 FF     -  call bg3.exe+11EFE60
"bg3.exe"+21DD93E: 48 8D 4D D0        -  lea rcx,[rbp-30]
"bg3.exe"+21DD942: 83 7D DC 40        -  cmp dword ptr [rbp-24],40
"bg3.exe"+21DD946: 48 0F 4F 4D D0     -  cmovg rcx,[rbp-30]
"bg3.exe"+21DD94B: 48 8B 01           -  mov rax,[rcx]
"bg3.exe"+21DD94E: 48 0F BA E8 01     -  bts rax,01
"bg3.exe"+21DD953: 48 89 01           -  mov [rcx],rax
"bg3.exe"+21DD956: 48 8B 55 C0        -  mov rdx,[rbp-40]
// ---------- INJECTING HERE ----------
"bg3.exe"+21DD95A: 44 01 7A 1C        -  add [rdx+1C],r15d
"bg3.exe"+21DD95E: 83 7D D8 04        -  cmp dword ptr [rbp-28],04
// ---------- DONE INJECTING  ----------
"bg3.exe"+21DD962: 7F 10              -  jg bg3.exe+21DD974
"bg3.exe"+21DD964: 45 33 C0           -  xor r8d,r8d
"bg3.exe"+21DD967: 41 8D 50 05        -  lea edx,[r8+05]
"bg3.exe"+21DD96B: 48 8D 4D D0        -  lea rcx,[rbp-30]
"bg3.exe"+21DD96F: E8 EC 24 01 FF     -  call bg3.exe+11EFE60
"bg3.exe"+21DD974: 48 8D 4D D0        -  lea rcx,[rbp-30]
"bg3.exe"+21DD978: 83 7D DC 40        -  cmp dword ptr [rbp-24],40
"bg3.exe"+21DD97C: 48 0F 4F 4D D0     -  cmovg rcx,[rbp-30]
"bg3.exe"+21DD981: 48 8B 01           -  mov rax,[rcx]
"bg3.exe"+21DD984: 48 0F BA E8 04     -  bts rax,04
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>134</ID>
          <Description>"Max Ability Points at Creation"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(creationCap,$process,E8 4E 76 FD FF)
alloc(creationCapBkp,$1000)
creationCapBkp:
  readmem(creationCap,5)
creationCap:
  mov eax,1B
registersymbol(creationCap)
registersymbol(creationCapBkp)

[DISABLE]
creationCap:
  readmem(creationCapBkp,5)
unregistersymbol(creationCap)
unregistersymbol(creationCapBkp)
dealloc(creationCapBkp)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+2B3EDFD

"bg3.exe"+2B3EDDF: 48 63 CA                 -  movsxd  rcx,edx
"bg3.exe"+2B3EDE2: 83 7C 8C 5C 00           -  cmp dword ptr [rsp+rcx*4+5C],00
"bg3.exe"+2B3EDE7: 0F 95 C1                 -  setne cl
"bg3.exe"+2B3EDEA: 40 0A F9                 -  or dil,cl
"bg3.exe"+2B3EDED: FF C2                    -  inc edx
"bg3.exe"+2B3EDEF: 48 83 C0 04              -  add rax,04
"bg3.exe"+2B3EDF3: 49 3B C0                 -  cmp rax,r8
"bg3.exe"+2B3EDF6: 75 C0                    -  jne bg3.exe+2B3EDB8
"bg3.exe"+2B3EDF8: 33 D2                    -  xor edx,edx
"bg3.exe"+2B3EDFA: 48 8B CB                 -  mov rcx,rbx
// ---------- INJECTING HERE ----------
"bg3.exe"+2B3EDFD: E8 4E 76 FD FF           -  call bg3.exe+2B16450
// ---------- DONE INJECTING  ----------
"bg3.exe"+2B3EE02: 83 F8 1B                 -  cmp eax,1B
"bg3.exe"+2B3EE05: 8B 44 24 58              -  mov eax,[rsp+58]
"bg3.exe"+2B3EE09: 7D 07                    -  jnl bg3.exe+2B3EE12
"bg3.exe"+2B3EE0B: 0D 80 00 00 00           -  or eax,00000080
"bg3.exe"+2B3EE10: EB 06                    -  jmp bg3.exe+2B3EE18
"bg3.exe"+2B3EE12: 7E 04                    -  jle bg3.exe+2B3EE18
"bg3.exe"+2B3EE14: 0F BA E8 08              -  bts eax,08
"bg3.exe"+2B3EE18: 85 C0                    -  test eax,eax
"bg3.exe"+2B3EE1A: 75 05                    -  jne bg3.exe+2B3EE21
"bg3.exe"+2B3EE1C: 40 84 FF                 -  test dil,dil
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>136</ID>
          <Description>"Increase Creation Stat Cap"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(creationStatCap,$process,8B 0C B1 83 F9 07 7C ?? B8)
creationStatCap+05:
  db 10
registersymbol(creationStatCap)

[DISABLE]
creationStatCap+05:
  db 07
unregistersymbol(creationStatCap)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+1B53B24

"bg3.exe"+1B53B01: 48 85 C9              -  test rcx,rcx
"bg3.exe"+1B53B04: 74 09                 -  je bg3.exe+1B53B0F
"bg3.exe"+1B53B06: 48 81 C1 68 01 00 00  -  add rcx,00000168
"bg3.exe"+1B53B0D: EB 15                 -  jmp bg3.exe+1B53B24
"bg3.exe"+1B53B0F: 48 8B 4B 30           -  mov rcx,[rbx+30]
"bg3.exe"+1B53B13: 48 85 C9              -  test rcx,rcx
"bg3.exe"+1B53B16: 74 09                 -  je bg3.exe+1B53B21
"bg3.exe"+1B53B18: 48 81 C1 68 01 00 00  -  add rcx,00000168
"bg3.exe"+1B53B1F: EB 03                 -  jmp bg3.exe+1B53B24
"bg3.exe"+1B53B21: 48 8B CF              -  mov rcx,rdi
// ---------- INJECTING HERE ----------
"bg3.exe"+1B53B24: 8B 0C B1              -  mov ecx,[rcx+rsi*4]
"bg3.exe"+1B53B27: 83 F9 07              -  cmp ecx,07
// ---------- DONE INJECTING  ----------
"bg3.exe"+1B53B2A: 7C 15                 -  jl bg3.exe+1B53B41
"bg3.exe"+1B53B2C: B8 0A 00 00 00        -  mov eax,0000000A
"bg3.exe"+1B53B31: 48 8B 5C 24 30        -  mov rbx,[rsp+30]
"bg3.exe"+1B53B36: 48 8B 74 24 38        -  mov rsi,[rsp+38]
"bg3.exe"+1B53B3B: 48 83 C4 20           -  add rsp,20
"bg3.exe"+1B53B3F: 5F                    -  pop rdi
"bg3.exe"+1B53B40: C3                    -  ret 
"bg3.exe"+1B53B41: 33 D2                 -  xor edx,edx
"bg3.exe"+1B53B43: E8 58 28 FC 00        -  call bg3.exe+2B163A0
"bg3.exe"+1B53B48: 48 8B 4B 08           -  mov rcx,[rbx+08]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>199</ID>
          <Description>"Ignore Action/Spell Costs"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(actions,$process,F2 0F 10 43 18 66)
actions+04:
  db 20
registersymbol(actions)

[DISABLE]
actions+04:
  db 18
unregistersymbol(actions)

{
bg3.exe+20C3C67 - E8 D4 6D 9B 00           - call bg3.exe+2A7AA40
bg3.exe+20C3C6C - F2 0F 10 76 18           - movsd xmm6,[rsi+18]
bg3.exe+20C3C71 - F2 0F 10 54 24 30        - movsd xmm2,[rsp+30]
bg3.exe+20C3C77 - F2 0F 58 D6              - addsd xmm2,xmm6

// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+2A7A18E

"bg3.exe"+2A7A168: 48 8D 4D DF              -  lea rcx,[rbp-21]
"bg3.exe"+2A7A16C: 4D 8B C7                 -  mov r8,r15
"bg3.exe"+2A7A16F: 49 8B D6                 -  mov rdx,r14
"bg3.exe"+2A7A172: E8 E9 07 00 00           -  call bg3.exe+2A7A960
"bg3.exe"+2A7A177: 80 78 08 00              -  cmp byte ptr [rax+08],00
"bg3.exe"+2A7A17B: 75 2C                    -  jne bg3.exe+2A7A1A9
"bg3.exe"+2A7A17D: F2 0F 10 00              -  movsd xmm0,[rax]
"bg3.exe"+2A7A181: 66 0F 2F 45 67           -  comisd xmm0,[rbp+67]
"bg3.exe"+2A7A186: 0F 93 C0                 -  setae al
"bg3.exe"+2A7A189: E9 3C FF FF FF           -  jmp bg3.exe+2A7A0CA
// ---------- INJECTING HERE ----------
"bg3.exe"+2A7A18E: F2 0F 10 43 18           -  movsd xmm0,[rbx+18]
// ---------- DONE INJECTING  ----------
"bg3.exe"+2A7A193: 66 0F 2F 45 67           -  comisd xmm0,[rbp+67]
"bg3.exe"+2A7A198: 0F 93 C0                 -  setae al
"bg3.exe"+2A7A19B: E9 2A FF FF FF           -  jmp bg3.exe+2A7A0CA
"bg3.exe"+2A7A1A0: 48 8B C8                 -  mov rcx,rax
"bg3.exe"+2A7A1A3: E8 38 A4 F6 FE           -  call bg3.exe+19E45E0
"bg3.exe"+2A7A1A8: CC                       -  int 3 
"bg3.exe"+2A7A1A9: 48 8B C8                 -  mov rcx,rax
"bg3.exe"+2A7A1AC: E8 2F A4 F6 FE           -  call bg3.exe+19E45E0
"bg3.exe"+2A7A1B1: CC                       -  int 3 
"bg3.exe"+2A7A1B2: CC                       -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>213</ID>
          <Description>"Dump Class Names"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
{$lua}
--[[
bg3.exe+1E445 - 7F 59                 - jg bg3.exe+1E4A0
bg3.exe+1E447 - 48 8D 05 A247B105     - lea rax,[bg3.exe+5B32BF0] { (8) }
bg3.exe+1E44E - C7 44 24 28 1B000000  - mov [rsp+28],0000001B { 27 }
bg3.exe+1E456 - 48 89 05 8B3EB105     - mov [bg3.exe+5B322E8],rax { (7FF69B212BF0) }
bg3.exe+1E45D - 48 8D 05 80ACCC04     - lea rax,[bg3.exe+4CE90E4] { ("class ls::_StringView&lt;char&gt;&gt;(void)") }
bg3.exe+1E464 - 48 89 44 24 20        - mov [rsp+20],rax
bg3.exe+1E469 - 48 8B 05 6847B105     - mov rax,[bg3.exe+5B32BD8] { (7FF69B26EE40) }
]]

if syntaxcheck then return end

local scan = AOBScan("48 8D 05 ?? ?? ?? ?? 48 89 ?? ?? ?? C7 ?? ?? ?? ?? ?? ?? ?? 0F 28", "+X-C-W")
if scan == nil then return end

local names = {}
local list = {}
local count = scan.Count - 1
local i = 0
for i = 0, count, 1 do
  local addr = tonumber(scan[i],16)
  local len = readInteger(addr + 0x10) - 1
  if len &gt; 2000 then
    len = 2000
  end
  --[[
  local indexAddr = addr + 0x00
  indexAddr = indexAddr + readInteger(indexAddr + 0x03) + 0x07
  local index = readInteger(indexAddr)
  --]]
  local nameAddr = addr
  nameAddr = nameAddr + readInteger(nameAddr + 0x03) + 0x07
  name = readString(nameAddr, len, false)
  if name and names[name] == nil then
    names[name] = true
    table.insert(list, name)
  end
end
scan.Destroy()
scan = nil

io.output("F:/BaldursGate3Dump/BaldursGate3-Classes.txt")
table.sort(list)
for i,name in ipairs(list) do
  io.write(string.format("%s\n",name))
end
io.close()

list = nil
names = nil

print("done")

{$asm}
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4931</ID>
          <Description>"Dump Strings 2"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
{$lua}
--[[
bg3.exe+1E445 - 7F 59                 - jg bg3.exe+1E4A0
bg3.exe+1E447 - 48 8D 05 A247B105     - lea rax,[bg3.exe+5B32BF0] { (8) }
bg3.exe+1E44E - C7 44 24 28 1B000000  - mov [rsp+28],0000001B { 27 }
bg3.exe+1E456 - 48 89 05 8B3EB105     - mov [bg3.exe+5B322E8],rax { (7FF69B212BF0) }
bg3.exe+1E45D - 48 8D 05 80ACCC04     - lea rax,[bg3.exe+4CE90E4] { ("class ls::_StringView&lt;char&gt;&gt;(void)") }
bg3.exe+1E464 - 48 89 44 24 20        - mov [rsp+20],rax
bg3.exe+1E469 - 48 8B 05 6847B105     - mov rax,[bg3.exe+5B32BD8] { (7FF69B26EE40) }
]]

if syntaxcheck then return end

local scan = AOBScan("48 8D 05 ?? ?? ?? ?? 48 89 ?? ?? ?? C7 ?? ?? ?? ?? ?? ?? ?? 8B", "+X-C-W")
if scan == nil then return end

local names = {}
local list = {}
local count = scan.Count - 1
local i = 0
for i = 0, count, 1 do
  local addr = tonumber(scan[i],16)
  local len = readInteger(addr + 0x10) - 1
  if len &gt; 2000 then
    len = 2000
  end
  --[[
  local indexAddr = addr + 0x00
  indexAddr = indexAddr + readInteger(indexAddr + 0x03) + 0x07
  local index = readInteger(indexAddr)
  --]]
  local nameAddr = addr
  nameAddr = nameAddr + readInteger(nameAddr + 0x03) + 0x07
  name = readString(nameAddr, len, false)
  if name and names[name] == nil then
    names[name] = addr
    table.insert(list, name)
  end
end
scan.Destroy()
scan = nil

io.output("F:/BaldursGate3Dump/BaldursGate3-Strings-2.txt")
table.sort(list)
for i,name in ipairs(list) do
  io.write(string.format("%X %s\n",names[name],name))
end
io.close()

list = nil
names = nil

print("done")

{$asm}
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>291</ID>
          <Description>"Dump Game Strings"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
{$lua}
--[[
bg3.exe+29890BF - CC                    - int 3
bg3.exe+29890C0 - 48 89 5C 24 10        - mov [rsp+10],rbx
bg3.exe+29890C5 - 57                    - push rdi
bg3.exe+29890C6 - 48 83 EC 20           - sub rsp,20 { 32 }
bg3.exe+29890CA - 48 8D 1D 4F7F4502     - lea rbx,[bg3.exe+4DE1020] { (7FF72AF03B88) }
bg3.exe+29890D1 - 48 8D 3D E0D64602     - lea rdi,[bg3.exe+4DF67B8] { (-1) }
bg3.exe+29890D8 - 48 83 3B 00           - cmp qword ptr [rbx],00 { 0 }
bg3.exe+29890DC - 74 28                 - je bg3.exe+2989106
bg3.exe+29890DE - 48 8D 4C 24 30        - lea rcx,[rsp+30]
bg3.exe+29890E3 - E8 68BC3B01           - call bg3.exe+3D44D50
bg3.exe+29890E8 - 48 8B 0B              - mov rcx,[rbx]
bg3.exe+29890EB - 48 8B D0              - mov rdx,rax
bg3.exe+29890EE - E8 2DC03B01           - call bg3.exe+3D45120
]]

if syntaxcheck then return end

local scan = AOBScan("48 8D 1D ?? ?? ?? ?? 48 8D 3D ?? ?? ?? ?? 48 83 3B 00", "+X-C-W")
if scan == nil then return end
local found = tonumber(scan[0],16)
scan.Destroy()
scan = nil

local item = found + readInteger(found + 3) + 7
found = found + 7
local last = found + readInteger(found + 3) + 7

io.output("F:/BaldursGate3Dump/BaldursGate3-Strings.txt")
while item &lt; last do
  local addr = readPointer(item)
  if addr == 0 then
    addr = -1
  else
    addr = readInteger(addr)
  end
  local size = readInteger(item + 0x10)
  if size &gt; 0x1000 then
    size = 0x1000
  end
  local name = readPointer(item + 0x08)
  name = readString(name, size, false)
  io.write(string.format("%08X %s\n", item, name))
  item = item + 0x18
end
io.close()

print("done")

{$asm}
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>246</ID>
          <Description>"Dump Function Names"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
{$lua}
--[[
bg3.exe+27FAA90 - 48 89 5C 24 10        - mov [rsp+10],rbx
bg3.exe+27FAA95 - 48 89 74 24 18        - mov [rsp+18],rsi
bg3.exe+27FAA9A - 57                    - push rdi
bg3.exe+27FAA9B - 41 56                 - push r14
bg3.exe+27FAA9D - 41 57                 - push r15
bg3.exe+27FAA9F - 48 81 EC 90000000     - sub rsp,00000090 { 144
bg3.exe+27FAAA6 - 49 8B F8              - mov rdi,r8
bg3.exe+27FAAA9 - 48 8B DA              - mov rbx,rdx
bg3.exe+27FAAAC - 48 8B F1              - mov rsi,rcx
bg3.exe+27FAAAF - 48 8B 11              - mov rdx,[rcx]
bg3.exe+27FAAB2 - 48 8D 4C 24 58        - lea rcx,[rsp+58]
bg3.exe+27FAAB7 - E8 144CDC04           - call bg3.exe+75BF6D0
bg3.exe+27FAABC - 48 8D 05 29EBA007     - lea rax,[bg3.exe+A2095EC] { ("name")
bg3.exe+27FAAC3 - 48 89 44 24 48        - mov [rsp+48],rax
bg3.exe+27FAAC8 - C7 44 24 50 04000000  - mov [rsp+50],00000004 { 4
bg3.exe+27FAAD0 - C7 44 24 20 01000000  - mov [rsp+20],00000001 { 1
bg3.exe+27FAAD8 - 4C 8B CF              - mov r9,rdi
bg3.exe+27FAADB - 4C 8D 44 24 48        - lea r8,[rsp+48]
bg3.exe+27FAAE0 - 48 8D 54 24 38        - lea rdx,[rsp+38]
bg3.exe+27FAAE5 - 48 8D 4C 24 58        - lea rcx,[rsp+58]
bg3.exe+27FAAEA - E8 61F10100           - call bg3.exe+2819C50
bg3.exe+27FAAEF - 90                    - nop
bg3.exe+27FAAF0 - 48 8D 15 894A9C09     - lea rdx,[bg3.exe+C1BF580] { (7FF7799293E4)
bg3.exe+27FAAF7 - 4C 8D 3D AA4A9C09     - lea r15,[bg3.exe+C1BF5A8] { (7FF779929428)
bg3.exe+27FAAFE - 44 8B 5C 24 40        - mov r11d,[rsp+40]
bg3.exe+27FAB03 - 4C 8B 74 24 38        - mov r14,[rsp+38]
bg3.exe+27FAB08 - 0F1F 84 00 00000000   - nop dword ptr [rax+rax+00000000]
bg3.exe+27FAB10 - 48 63 4A 08           - movsxd  rcx,dword ptr [rdx+08]
bg3.exe+27FAB14 - 41 3B CB              - cmp ecx,r11d
bg3.exe+27FAB17 - 75 45                 - jne bg3.exe+27FAB5E
bg3.exe+27FAB19 - 48 8B 02              - mov rax,[rdx]
bg3.exe+27FAB1C - 4C 8B C9              - mov r9,rcx
bg3.exe+27FAB1F - 85 C9                 - test ecx,ecx
bg3.exe+27FAB21 - 7E 22                 - jle bg3.exe+27FAB45
bg3.exe+27FAB23 - 4C 8B C0              - mov r8,rax
bg3.exe+27FAB26 - 49 F7 D8              - neg r8
bg3.exe+27FAB29 - 4F 8D 14 30           - lea r10,[r8+r14]
bg3.exe+27FAB2D - 0F1F 00               - nop dword ptr [rax]
bg3.exe+27FAB30 - 41 0FB6 0C 02         - movzx ecx,byte ptr [r10+rax]
bg3.exe+27FAB35 - 38 08                 - cmp [rax],cl
bg3.exe+27FAB37 - 75 25                 - jne bg3.exe+27FAB5E
bg3.exe+27FAB39 - 48 FF C0              - inc rax
bg3.exe+27FAB3C - 4A 8D 0C 00           - lea rcx,[rax+r8]
bg3.exe+27FAB40 - 49 3B C9              - cmp rcx,r9
bg3.exe+27FAB43 - 7C EB                 - jl bg3.exe+27FAB30
bg3.exe+27FAB45 - 48 85 D2              - test rdx,rdx
bg3.exe+27FAB48 - 74 38                 - je bg3.exe+27FAB82
bg3.exe+27FAB4A - 48 8B 42 20           - mov rax,[rdx+20]
bg3.exe+27FAB4E - 4C 8B C7              - mov r8,rdi
bg3.exe+27FAB51 - 48 8B D6              - mov rdx,rsi
bg3.exe+27FAB54 - 48 8B CB              - mov rcx,rbx
bg3.exe+27FAB57 - FF D0                 - call rax
bg3.exe+27FAB59 - 48 8B C3              - mov rax,rbx
bg3.exe+27FAB5C - EB 0B                 - jmp bg3.exe+27FAB69
bg3.exe+27FAB5E - 48 83 C2 28           - add rdx,28 { 40
bg3.exe+27FAB62 - 49 3B D7              - cmp rdx,r15
bg3.exe+27FAB65 - 74 1B                 - je bg3.exe+27FAB82
bg3.exe+27FAB67 - EB A7                 - jmp bg3.exe+27FAB10
bg3.exe+27FAB69 - 4C 8D 9C 24 90000000  - lea r11,[rsp+00000090]
bg3.exe+27FAB71 - 49 8B 5B 28           - mov rbx,[r11+28]
bg3.exe+27FAB75 - 49 8B 73 30           - mov rsi,[r11+30]
bg3.exe+27FAB79 - 49 8B E3              - mov rsp,r11
bg3.exe+27FAB7C - 41 5F                 - pop r15
bg3.exe+27FAB7E - 41 5E                 - pop r14
bg3.exe+27FAB80 - 5F                    - pop rdi
bg3.exe+27FAB81 - C3                    - ret
bg3.exe+27FAB82 - C6 84 24 B0000000 00  - mov byte ptr [rsp+000000B0],00 { 0
bg3.exe+27FAB8A - 48 8D 8C 24 B0000000  - lea rcx,[rsp+000000B0]
bg3.exe+27FAB92 - E8 E9730200           - call bg3.exe+2821F80
bg3.exe+27FAB97 - CC                    - int 3
]]

if syntaxcheck then return end

--local scan = AOBScan("48 8D ?? ?? ?? ?? ?? ?? 8D ?? ?? ?? ?? ?? 44 8B ?? 24 40", "+X-C-W")
local scan = AOBScan("48 8D ?? ?? ?? ?? ?? ?? 8D ?? ?? ?? ?? ?? 8B ?? 24 40", "+X-C-W")
if scan == nil then return end

local seen = {}
io.output("F:/BaldursGate3Dump/BaldursGate3-Functions.txt")
local count = scan.Count - 1
for i = 0, count, 1 do
  local item = tonumber(scan[i], 16)
  --item = item - 32
  local last = item + 7
  item = item + readInteger(item + 3) + 7
  last = last + readInteger(last + 3) + 7
  if not seen[item] then
    seen[item] = true
    while item &lt; last do
      if last - item &lt; 0 or last - item &gt; 0x2000 then
        print(string.format("Bad List: %s - %X %X",scan[i],item,last))
        break
      end
      local size = readInteger(item + 0x08) - 1
      local name = readPointer(item)
      name = readString(name, size, false)
      local func = readPointer(item + 0x18)
      local unknown = readPointer(item + 0x10)
      name = name .. i
      if func &gt; 0x10000 then
        unregisterSymbol(name)
        registerSymbol(name, func, true)
      end
      io.write(string.format("%016X %016X %s\n", func, unknown, name))
      item = item + 0x28
    end
    io.write("\n")
  end
end
io.close()
seen = nil

scan.Destroy()
scan = nil

print("done")

{$asm}
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>282</ID>
          <Description>"Dump Command List"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return end

local funcInfo = function(addr)
  local info = {}
  local name = readPointer(addr + 0x08)
  info.name = readString(name, 256, false)
  info.args = {}
  local argCount = readInteger(addr + 0x18) - 1
  if argCount &gt; 10 then
    argCount = 10
  end
  local argList = readPointer(addr + 0x10)
  for i = 0, argCount do
    local argAddr = argList + i * 0x10
    local argName = readPointer(argAddr)
    argName = readString(argName, 256, false)
    local argType = readInteger(argAddr + 0x0C)
    local argInfo = {
      name = argName,
      isReturn = argType == 2
    }
    info.args[#info.args + 1] = argInfo
  end
  info.addr = readPointer(addr + 0x48)
  return info
end

local funcDef = function(info)
  local def = info.name .. "("
  local args = info.args
  for i = 1, #args do
    if not args[i].isReturn then
      if i &gt; 1 then
        def = def .. ", "
      end
      def = def .. args[i].name
    end
  end
  def = def .. ")"
  for i = 1, #args do
    if args[i].isReturn then
      def = def .. ": " .. args[i].name
    end
  end
  return def
end

local list = readPointer("cmdList")
if list == 0 then return end

local size = readInteger(list + 0x2C)
if size &gt; 3000 then
  -- just in case
  print("truncated function list from "..size)
  size = 3000
end

list = readPointer(list + 0x20)

io.output("F:/BaldursGate3Dump/BaldursGate3-Functions2.txt")
for i = 1, size do
  local addr = readPointer(list)
  if addr ~= 0 then
    local info = funcInfo(addr)
    local def = funcDef(info)
    if info.addr &gt; 0x10000 then
      unregisterSymbol(info.name)
      registerSymbol(info.name, info.addr, true)
    end
    io.write(string.format("%016X %s\n", info.addr, def))
  end
  list = list + 0x08
end
io.close()

local list = readPointer("cmdList")
if list == 0 then return end

local size = readInteger(list + 0x4C)
if size &gt; 3000 then
  -- just in case
  print("truncated function list from "..size)
  size = 3000
end

list = readPointer(list + 0x40)

io.output("F:/BaldursGate3Dump/BaldursGate3-Functions3.txt")
for i = 1, size do
  local addr = readPointer(list)
  if addr ~= 0 then
    local info = funcInfo(addr)
    local def = funcDef(info)
    io.write(string.format("%016X %s\n", info.addr, def))
  end
  list = list + 0x08
end
io.close()


local addr = readPointer("cmdList")
local size = readInteger(addr + 0x8C)
local list = readPointer(addr + 0x80)
list = list + 0x10
io.output("F:/BaldursGate3Dump/BaldursGate3-ArgTypes.txt")
for i = 1, size do
  local name = readPointer(list + 0x38)
  name = readString(name, 256, false)
  local index = readByte(list + 0x40)
  io.write(string.format("%d %s\n", index, name))
  list = list + 0x48
end
io.close()

print("done")

{$asm}
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>280</ID>
          <Description>"Function List 2"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(functionList,$process,48 8B 41 20 48 8B 04 D0 C3 33)
alloc(newmem,$1000,functionList)

label(code)
label(return)
label(functionListPtr)
label(functionBuffer)
label(functionEntry)
label(functionAddress)
label(functionString1)
label(functionString2)

newmem:
  mov rax,functionListPtr
  mov [rax],rcx
  mov [rax+08],rdx
code:
  mov rax,[rcx+20]
  mov rax,[rax+rdx*8]
  jmp return

functionListPtr:
  dq 0
  dq 0

align 10
functionEntry:
sub rsp,38
mov rdx,functionBuffer
mov rax,functionAddress
call [rax]
add rsp,38
xor rax,rax
ret

align 10
functionAddress:
  dq 0

align 10
functionBuffer:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
align 100
functionString1:
  dq 0
align 100
functionString2:
  dq 0
align 100

functionList:
  jmp newmem
  nop 3
return:
registersymbol(functionList)
registersymbol(functionListPtr)
registersymbol(functionBuffer)
registersymbol(functionEntry)
registersymbol(functionAddress)
registersymbol(functionString1)
registersymbol(functionString2)

[DISABLE]
functionList:
  db 48 8B 41 20 48 8B 04 D0
unregistersymbol(functionList)
unregistersymbol(functionListPtr)
unregistersymbol(functionBuffer)
unregistersymbol(functionEntry)
unregistersymbol(functionAddress)
unregistersymbol(functionString1)
unregistersymbol(functionString2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+338D96E

"bg3.exe"+338D95A: CC                 -  int 3 
"bg3.exe"+338D95B: CC                 -  int 3 
"bg3.exe"+338D95C: CC                 -  int 3 
"bg3.exe"+338D95D: CC                 -  int 3 
"bg3.exe"+338D95E: CC                 -  int 3 
"bg3.exe"+338D95F: CC                 -  int 3 
"bg3.exe"+338D960: C1 EA 03           -  shr edx,03
"bg3.exe"+338D963: 81 E2 FF FF FF 01  -  and edx,01FFFFFF
"bg3.exe"+338D969: 3B 51 2C           -  cmp edx,[rcx+2C]
"bg3.exe"+338D96C: 73 09              -  jae bg3.exe+338D977
// ---------- INJECTING HERE ----------
"bg3.exe"+338D96E: 48 8B 41 20        -  mov rax,[rcx+20]
"bg3.exe"+338D972: 48 8B 04 D0        -  mov rax,[rax+rdx*8]
// ---------- DONE INJECTING  ----------
"bg3.exe"+338D976: C3                 -  ret 
"bg3.exe"+338D977: 33 C0              -  xor eax,eax
"bg3.exe"+338D979: C3                 -  ret 
"bg3.exe"+338D97A: CC                 -  int 3 
"bg3.exe"+338D97B: CC                 -  int 3 
"bg3.exe"+338D97C: CC                 -  int 3 
"bg3.exe"+338D97D: CC                 -  int 3 
"bg3.exe"+338D97E: CC                 -  int 3 
"bg3.exe"+338D97F: CC                 -  int 3 
"bg3.exe"+338D980: 48 89 5C 24 08     -  mov [rsp+08],rbx
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>281</ID>
              <Description>"List2"</Description>
              <GroupHeader>1</GroupHeader>
              <Address>functionListPtr</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>285</ID>
              <Description>"List3"</Description>
              <GroupHeader>1</GroupHeader>
              <Address>functionListPtr</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>329</ID>
              <Description>"Arg1"</Description>
              <VariableType>String</VariableType>
              <Length>256</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>functionBuffer+08</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>330</ID>
              <Description>"Arg2"</Description>
              <VariableType>String</VariableType>
              <Length>256</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>functionBuffer+18</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>337</ID>
              <Description>"Arg3"</Description>
              <VariableType>String</VariableType>
              <Length>256</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>functionBuffer+28</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>339</ID>
              <Description>"String1"</Description>
              <VariableType>String</VariableType>
              <Length>36</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>functionString1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>340</ID>
              <Description>"String2"</Description>
              <VariableType>String</VariableType>
              <Length>256</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>functionString2</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>292</ID>
          <Description>"Wrappers1"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
autoAssemble([[
aobscanmodule(wrappers,$process,E8 ?? ?? ?? ?? 48 8B 17 48 8D 4C 24 40 E8 ?? ?? ?? ?? 48 8D)
registersymbol(wrappers)
]])
local wrappers = getAddress("wrappers")
registerSymbol("wrapper1",wrappers+readInteger(wrappers+1,true)+5,true)
wrappers = wrappers + 0x0D
registerSymbol("wrapper2",wrappers+readInteger(wrappers+1,true)+5,true)
wrappers = wrappers + 0x29
registerSymbol("wrapper3",wrappers+readInteger(wrappers+1,true)+5,true)
unregisterSymbol("wrappers")
{$asm}

[DISABLE]
unregistersymbol(wrapper1)
unregistersymbol(wrapper2)
unregistersymbol(wrapper3)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>271</ID>
          <Description>"Has Recipe Unlocked"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(recipe,$process,44 8B 81 A4 00 00 00 33 C0 45 85 C0 74 16)
alloc(newmem,$1000,recipe)

label(code)
label(return)

newmem:

code:
  mov r8d,[rcx+000000A4]
  jmp return

recipe:
  jmp newmem
  nop 2
return:
registersymbol(recipe)

[DISABLE]
recipe:
  db 44 8B 81 A4 00 00 00
unregistersymbol(recipe)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+2406100

"bg3.exe"+24060F6: CC                    -  int 3 
"bg3.exe"+24060F7: CC                    -  int 3 
"bg3.exe"+24060F8: CC                    -  int 3 
"bg3.exe"+24060F9: CC                    -  int 3 
"bg3.exe"+24060FA: CC                    -  int 3 
"bg3.exe"+24060FB: CC                    -  int 3 
"bg3.exe"+24060FC: CC                    -  int 3 
"bg3.exe"+24060FD: CC                    -  int 3 
"bg3.exe"+24060FE: CC                    -  int 3 
"bg3.exe"+24060FF: CC                    -  int 3 
// ---------- INJECTING HERE ----------
"bg3.exe"+2406100: 44 8B 81 A4 00 00 00  -  mov r8d,[rcx+000000A4]
// ---------- DONE INJECTING  ----------
"bg3.exe"+2406107: 33 C0                 -  xor eax,eax
"bg3.exe"+2406109: 45 85 C0              -  test r8d,r8d
"bg3.exe"+240610C: 74 16                 -  je bg3.exe+2406124
"bg3.exe"+240610E: 4C 8B 89 98 00 00 00  -  mov r9,[rcx+00000098]
"bg3.exe"+2406115: 8B 12                 -  mov edx,[rdx]
"bg3.exe"+2406117: 41 39 14 81           -  cmp [r9+rax*4],edx
"bg3.exe"+240611B: 74 0C                 -  je bg3.exe+2406129
"bg3.exe"+240611D: FF C0                 -  inc eax
"bg3.exe"+240611F: 41 3B C0              -  cmp eax,r8d
"bg3.exe"+2406122: 72 F3                 -  jb bg3.exe+2406117
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>268</ID>
          <Description>"User Pointer"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(user,$process,0F B7 4F ?? 0F B7 57 ?? 44)
alloc(newmem,$1000,user)

label(userBkp)
label(userPtr)
label(return)

newmem:
  mov [userPtr],rax
userBkp:
  readmem(user,8)
  jmp return

userPtr:
  dq 0

user:
  jmp newmem
  nop 3
return:
registersymbol(user)
registersymbol(userBkp)
registersymbol(userPtr)

[DISABLE]
user:
  readmem(userBkp,8)
unregistersymbol(user)
unregistersymbol(userBkp)
unregistersymbol(userPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+3D7DCD7

"bg3.exe"+3D7DCA9: 48 33 C4                 -  xor rax,rsp
"bg3.exe"+3D7DCAC: 48 89 84 24 A0 00 00 00  -  mov [rsp+000000A0],rax
"bg3.exe"+3D7DCB4: 48 89 54 24 50           -  mov [rsp+50],rdx
"bg3.exe"+3D7DCB9: 48 8B F9                 -  mov rdi,rcx
"bg3.exe"+3D7DCBC: 48 8B 0D 0D CC E2 01     -  mov rcx,[bg3.exe+5BAA8D0]
"bg3.exe"+3D7DCC3: 48 8B DA                 -  mov rbx,rdx
"bg3.exe"+3D7DCC6: 45 84 C0                 -  test r8l,r8l
"bg3.exe"+3D7DCC9: 75 07                    -  jne bg3.exe+3D7DCD2
"bg3.exe"+3D7DCCB: 48 8B 0D 06 CC E2 01     -  mov rcx,[bg3.exe+5BAA8D8]
"bg3.exe"+3D7DCD2: E8 79 71 FC FF           -  call bg3.exe+3D44E50
// ---------- INJECTING HERE ----------
"bg3.exe"+3D7DCD7: 0F B7 4F 0E              -  movzx ecx,word ptr [rdi+0E]
"bg3.exe"+3D7DCDB: 0F B7 57 0C              -  movzx edx,word ptr [rdi+0C]
// ---------- DONE INJECTING  ----------
"bg3.exe"+3D7DCDF: 44 0F B7 47 0A           -  movzx r8d,word ptr [rdi+0A]
"bg3.exe"+3D7DCE4: 44 0F B7 4F 08           -  movzx r9d,word ptr [rdi+08]
"bg3.exe"+3D7DCE9: 44 0F B7 57 06           -  movzx r10d,word ptr [rdi+06]
"bg3.exe"+3D7DCEE: 44 0F B7 5F 04           -  movzx r11d,word ptr [rdi+04]
"bg3.exe"+3D7DCF3: 89 4C 24 48              -  mov [rsp+48],ecx
"bg3.exe"+3D7DCF7: 48 8D 4C 24 60           -  lea rcx,[rsp+60]
"bg3.exe"+3D7DCFC: 89 54 24 40              -  mov [rsp+40],edx
"bg3.exe"+3D7DD00: BA 40 00 00 00           -  mov edx,00000040
"bg3.exe"+3D7DD05: 44 89 44 24 38           -  mov [rsp+38],r8d
"bg3.exe"+3D7DD0A: 4C 8B C0                 -  mov r8,rax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>269</ID>
              <Description>"User"</Description>
              <GroupHeader>1</GroupHeader>
              <Address>userPtr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>234</ID>
          <Description>"Selected Character"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(selectedCharacter,$process,4C 8B E8 48 8B 50 10 48 89 54)
alloc(newmem,$1000,selectedCharacter)

label(code)
label(return)
label(selectedCharacterPtr)

newmem:
  mov r13,selectedCharacterPtr
  mov [r13],rax
code:
  mov r13,rax
  mov rdx,[rax+10]
  jmp return

selectedCharacterPtr:
  dq 0

selectedCharacter:
  jmp newmem
  nop 2
return:
registersymbol(selectedCharacter)
registersymbol(selectedCharacterPtr)

[DISABLE]
selectedCharacter:
  db 4C 8B E8 48 8B 50 10
unregistersymbol(selectedCharacter)
unregistersymbol(selectedCharacterPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+2631BF9

"bg3.exe"+2631BD5: 56                             -  push rsi
"bg3.exe"+2631BD6: 57                             -  push rdi
"bg3.exe"+2631BD7: 41 55                          -  push r13
"bg3.exe"+2631BD9: 48 81 EC 90 00 00 00           -  sub rsp,00000090
"bg3.exe"+2631BE0: 4C 89 60 10                    -  mov [rax+10],r12
"bg3.exe"+2631BE4: 48 8B E9                       -  mov rbp,rcx
"bg3.exe"+2631BE7: 4C 89 70 D0                    -  mov [rax-30],r14
"bg3.exe"+2631BEB: 4C 89 78 C8                    -  mov [rax-38],r15
"bg3.exe"+2631BEF: E8 5C 5C 05 00                 -  call bg3.exe+2687850
"bg3.exe"+2631BF4: 48 8D 4C 24 68                 -  lea rcx,[rsp+68]
// ---------- INJECTING HERE ----------
"bg3.exe"+2631BF9: 4C 8B E8                       -  mov r13,rax
"bg3.exe"+2631BFC: 48 8B 50 10                    -  mov rdx,[rax+10]
// ---------- DONE INJECTING  ----------
"bg3.exe"+2631C00: 48 89 54 24 58                 -  mov [rsp+58],rdx
"bg3.exe"+2631C05: 48 8D 54 24 58                 -  lea rdx,[rsp+58]
"bg3.exe"+2631C0A: E8 31 A9 80 FF                 -  call bg3.exe+1E3C540
"bg3.exe"+2631C0F: 48 8B 54 24 68                 -  mov rdx,[rsp+68]
"bg3.exe"+2631C14: 33 F6                          -  xor esi,esi
"bg3.exe"+2631C16: 48 8B 5C 24 70                 -  mov rbx,[rsp+70]
"bg3.exe"+2631C1B: 4C 8B C2                       -  mov r8,rdx
"bg3.exe"+2631C1E: 49 C1 E8 36                    -  shr r8,36
"bg3.exe"+2631C22: 48 89 94 24 D8 00 00 00        -  mov [rsp+000000D8],rdx
"bg3.exe"+2631C2A: 41 83 F8 40                    -  cmp r8d,40
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>235</ID>
              <Description>"Character"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <Address>selectedCharacterPtr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>245</ID>
                  <Description>"ID"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>261</ID>
                  <Description>"Flags 1"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+30</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>262</ID>
                      <Description>"IsPlayer"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Binary</VariableType>
                      <BitStart>1</BitStart>
                      <BitLength>1</BitLength>
                      <ShowAsBinary>0</ShowAsBinary>
                      <Address>+0</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>270</ID>
                      <Description>"IsImmortal"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Binary</VariableType>
                      <BitStart>2</BitStart>
                      <BitLength>1</BitLength>
                      <ShowAsBinary>0</ShowAsBinary>
                      <Address>+1</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>263</ID>
                  <Description>"Flags 2"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+80</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>264</ID>
                      <Description>"IsGameMaster (don't do it)"</Description>
                      <ShowAsHex>1</ShowAsHex>
                      <VariableType>Binary</VariableType>
                      <BitStart>7</BitStart>
                      <BitLength>1</BitLength>
                      <ShowAsBinary>0</ShowAsBinary>
                      <Address>+0</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>319</ID>
          <Description>"Characters (ignore)"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>237</ID>
              <Description>"Character 1"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <Address>playerCharactersPtr+00</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>241</ID>
                  <Description>"ID"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>238</ID>
              <Description>"Character 2"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <Address>playerCharactersPtr+08</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>242</ID>
                  <Description>"ID"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>239</ID>
              <Description>"Character 3"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <Address>playerCharactersPtr+10</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>243</ID>
                  <Description>"ID"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>240</ID>
              <Description>"Character 4"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <Address>playerCharactersPtr+18</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>244</ID>
                  <Description>"ID"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>175</ID>
          <Description>"Zero Weight"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(weight,$process,0F 5B C9 F3 0F 59 0D ?? ?? ?? ??0F 2E C1)
weight:
  db 0F 57 C9
registersymbol(weight)

[DISABLE]
weight:
  db 0F 5B C9
unregistersymbol(weight)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+2DE302B

"bg3.exe"+2DE3003: 4C 8D 44 24 38           -  lea r8,[rsp+38]
"bg3.exe"+2DE3008: 48 8B 53 38              -  mov rdx,[rbx+38]
"bg3.exe"+2DE300C: 89 4C 24 38              -  mov [rsp+38],ecx
"bg3.exe"+2DE3010: 48 8B C8                 -  mov rcx,rax
"bg3.exe"+2DE3013: 4C 8B 08                 -  mov r9,[rax]
"bg3.exe"+2DE3016: 41 FF 51 28              -  call qword ptr [r9+28]
"bg3.exe"+2DE301A: 48 8B CF                 -  mov rcx,rdi
"bg3.exe"+2DE301D: E8 5E 91 C9 FE           -  call bg3.exe+1A7C180
"bg3.exe"+2DE3022: F3 0F 10 43 50           -  movss xmm0,[rbx+50]
"bg3.exe"+2DE3027: 66 0F 6E C8              -  movd xmm1,eax
// ---------- INJECTING HERE ----------
"bg3.exe"+2DE302B: 0F 5B C9                 -  cvtdq2ps xmm1,xmm1
"bg3.exe"+2DE302E: F3 0F 59 0D 1E 02 2A 02  -  mulss xmm1,[bg3.exe+5083254]
// ---------- DONE INJECTING  ----------
"bg3.exe"+2DE3036: 0F 2E C1                 -  ucomiss xmm0,xmm1
"bg3.exe"+2DE3039: 7A 02                    -  jp bg3.exe+2DE303D
"bg3.exe"+2DE303B: 74 2D                    -  je bg3.exe+2DE306A
"bg3.exe"+2DE303D: 48 8B 4B 48              -  mov rcx,[rbx+48]
"bg3.exe"+2DE3041: 48 83 C1 10              -  add rcx,10
"bg3.exe"+2DE3045: F3 0F 11 4B 50           -  movss [rbx+50],xmm1
"bg3.exe"+2DE304A: 48 8B 01                 -  mov rax,[rcx]
"bg3.exe"+2DE304D: FF 50 30                 -  call qword ptr [rax+30]
"bg3.exe"+2DE3050: 8B 4B 54                 -  mov ecx,[rbx+54]
"bg3.exe"+2DE3053: 4C 8D 44 24 38           -  lea r8,[rsp+38]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>352</ID>
          <Description>"Commands List Pointers"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>349</ID>
              <Description>"Commands List"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"bg3.exe"+05B4E288</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>356</ID>
              <Description>"Commands List"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"bg3.exe"+05B8A958</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>350</ID>
              <Description>"Commands List"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"bg3.exe"+05B4E268</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>351</ID>
              <Description>"Commands List"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"bg3.exe"+05B4E260</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>346</ID>
              <Description>"Commands List"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"bg3.exe"+05B4E288</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>353</ID>
              <Description>"Commands List"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"bg3.exe"+05B4E278</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>354</ID>
              <Description>"Commands List"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"bg3.exe"+05B4E288</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>355</ID>
              <Description>"Commands List"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"bg3.exe"+05B4E280</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>418</ID>
          <Description>"HealthComponent"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>1A97B9B94A0</Address>
          <CheatEntries>
            <CheatEntry>
              <ID>419</ID>
              <Description>"[48] Current Health"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>+48</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>423</ID>
              <Description>"[4C] ???"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>+4C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>420</ID>
              <Description>"[50] Maximum Health"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>+50</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>421</ID>
              <Description>"[54] Bonus Health"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>+54</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>484</ID>
          <Description>"Settings"</Description>
          <Options moHideChildren="1"/>
          <ShowAsSigned>0</ShowAsSigned>
          <GroupHeader>1</GroupHeader>
          <Address>settings</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>485</ID>
              <Description>"Settings Pointer"</Description>
              <ShowAsHex>1</ShowAsHex>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>8 Bytes</VariableType>
              <Address>settings</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>486</ID>
              <Description>"God Mode"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+godmode</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>487</ID>
              <Description>"Game Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>+50</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>488</ID>
              <Description>"004C"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>+4C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>489</ID>
              <Description>"0094"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+94</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>490</ID>
              <Description>"00A0"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>+A0</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>491</ID>
                  <Description>"0000"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>10</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>492</ID>
                  <Description>"0010"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>8 Bytes</VariableType>
                  <Address>+10</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>493</ID>
              <Description>"01B8"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>+1B8</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>494</ID>
                  <Description>"0000"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>495</ID>
                  <Description>"0040"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>8 Bytes</VariableType>
                  <Address>+40</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>496</ID>
                  <Description>"0050"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>497</ID>
                  <Description>"0070"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>8 Bytes</VariableType>
                  <Address>+70</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>498</ID>
              <Description>"0488"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>+488</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>499</ID>
                  <Description>"0000"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>500</ID>
                  <Description>"0040"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>8 Bytes</VariableType>
                  <Address>+40</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>501</ID>
                  <Description>"0050"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>502</ID>
                  <Description>"0070"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>8 Bytes</VariableType>
                  <Address>+70</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>503</ID>
              <Description>"0806"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+806</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>504</ID>
              <Description>"080F"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+80F</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>505</ID>
              <Description>"0109"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+109</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>506</ID>
              <Description>"0078"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>+78</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>507</ID>
              <Description>"01BC"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>+1BC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>508</ID>
              <Description>"1234"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>+1234</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>509</ID>
              <Description>"0078"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>+78</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>510</ID>
              <Description>"001F"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+1F</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>511</ID>
              <Description>"0020"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+20</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>512</ID>
              <Description>"0760"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+760</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>513</ID>
              <Description>"080F Meters vs Feet"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+80F</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>514</ID>
              <Description>"080E"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+80E</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>515</ID>
              <Description>"11E7"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+11e7</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>516</ID>
              <Description>"1211 can see?"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+1211</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>542</ID>
              <Description>"1228"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>+1228</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>517</ID>
              <Description>"1232"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+1232</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>518</ID>
              <Description>"127E"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>2 Bytes</VariableType>
              <Address>+127E</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>519</ID>
              <Description>"1275"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+1275</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>520</ID>
              <Description>"1278"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+1278</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>521</ID>
              <Description>"1279"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+1279</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>522</ID>
              <Description>"127A"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+127A</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>523</ID>
              <Description>"127B"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+127B</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>524</ID>
              <Description>"127C"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+127C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>525</ID>
              <Description>"124C"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>+124C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>526</ID>
              <Description>"1250"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>+1250</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>527</ID>
              <Description>"1268"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>+1268</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>528</ID>
              <Description>"126C"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>+126C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>529</ID>
              <Description>"1260"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>+1260</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>530</ID>
              <Description>"1270"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>+1270</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>531</ID>
              <Description>"1298"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+1298</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>532</ID>
              <Description>"No description"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+10A</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>533</ID>
              <Description>"No description"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+810</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>534</ID>
              <Description>"No description"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+1294</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>535</ID>
              <Description>"No description"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+109</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>536</ID>
              <Description>"No description"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Byte</VariableType>
              <Address>+760</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>537</ID>
              <Description>"???"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>+130</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>539</ID>
          <Description>"Weight Multiplier"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>bg3.exe+67B0408</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>323</ID>
          <Description>"Zero Weight"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(weight,$process,F3 0F 10 40 ?? F3 0F 59 05 ?? ?? ?? ?? E8 ?? ?? ?? ?? F3 0F 2C ?? EB)
alloc(weightBkp,5)
weightBkp:
  readmem(weight,5)
weight:
  db 0F 57 C0 90 90
registersymbol(weight)
registersymbol(weightBkp)

[DISABLE]
weight:
  readmem(weightBkp,5)
unregistersymbol(weight)
unregistersymbol(weightBkp)
dealloc(weightBkp)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+1919B58

"bg3.exe"+1919B38: 3B 51 74                 -  cmp edx,[rcx+74]
"bg3.exe"+1919B3B: 7E 03                    -  jle bg3.exe+1919B40
"bg3.exe"+1919B3D: 8B 71 74                 -  mov esi,[rcx+74]
"bg3.exe"+1919B40: 8B 99 FC 00 00 00        -  mov ebx,[rcx+000000FC]
"bg3.exe"+1919B46: 85 DB                    -  test ebx,ebx
"bg3.exe"+1919B48: 79 4E                    -  jns bg3.exe+1919B98
"bg3.exe"+1919B4A: 48 83 C1 48              -  add rcx,48
"bg3.exe"+1919B4E: E8 6D 41 E0 FF           -  call bg3.exe+171DCC0
"bg3.exe"+1919B53: 48 85 C0                 -  test rax,rax
"bg3.exe"+1919B56: 74 19                    -  je bg3.exe+1919B71
// ---------- INJECTING HERE ----------
"bg3.exe"+1919B58: F3 0F 10 40 18           -  movss xmm0,[rax+18]
// ---------- DONE INJECTING  ----------
"bg3.exe"+1919B5D: F3 0F 59 05 43 9F 76 03  -  mulss xmm0,[bg3.exe+5083AA8]
"bg3.exe"+1919B65: FF 15 AD 99 38 03        -  call qword ptr [bg3.exe+4CA3518]
"bg3.exe"+1919B6B: F3 0F 2C D8              -  cvttss2si ebx,xmm0
"bg3.exe"+1919B6F: EB 27                    -  jmp bg3.exe+1919B98
"bg3.exe"+1919B71: 48 8B CF                 -  mov rcx,rdi
"bg3.exe"+1919B74: E8 17 FA FF FF           -  call bg3.exe+1919590
"bg3.exe"+1919B79: 48 8B D8                 -  mov rbx,rax
"bg3.exe"+1919B7C: 48 85 C0                 -  test rax,rax
"bg3.exe"+1919B7F: 74 15                    -  je bg3.exe+1919B96
"bg3.exe"+1919B81: 48 8B C8                 -  mov rcx,rax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>543</ID>
          <Description>"Last Item Stack Changed (use split stack)"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(ItemStackUpdate,bg3.exe,48 83 C9 04 48 89)
alloc(newmem,$1000,ItemStackUpdate)

label(ItemStackUpdateBkp)
label(ItemStackUpdatePtr)
label(return)

newmem:
ItemStackUpdateBkp:
  readmem(ItemStackUpdate+04,5)
  mov rdx,ItemStackUpdatePtr
  mov [rdx],r13
  jmp return

align 10
ItemStackUpdatePtr:
  dq 0

ItemStackUpdate+04:
  jmp newmem
return:
registersymbol(ItemStackUpdate)
registersymbol(ItemStackUpdateBkp)
registersymbol(ItemStackUpdatePtr)

[DISABLE]
ItemStackUpdate+04:
  readmem(ItemStackUpdateBkp,5)
unregistersymbol(ItemStackUpdate)
unregistersymbol(ItemStackUpdateBkp)
unregistersymbol(ItemStackUpdatePtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+49A5B91

bg3.exe+49A5B64: 49 89 44 24 58              - mov [r12+58],rax
bg3.exe+49A5B69: 0F B7 44 24 60              - movzx eax,word ptr [rsp+60]
bg3.exe+49A5B6E: 66 41 89 44 24 60           - mov [r12+60],ax
bg3.exe+49A5B74: EB 05                       - jmp bg3.exe+49A5B7B
bg3.exe+49A5B76: 48 8B 4C 24 40              - mov rcx,[rsp+40]
bg3.exe+49A5B7B: 41 8B 85 C8 00 00 00        - mov eax,[r13+000000C8]
bg3.exe+49A5B82: 41 39 44 24 64              - cmp [r12+64],eax
bg3.exe+49A5B87: 74 12                       - je bg3.exe+49A5B9B
bg3.exe+49A5B89: 89 44 24 64                 - mov [rsp+64],eax
bg3.exe+49A5B8D: 48 83 C9 04                 - or rcx,04
// ---------- INJECTING HERE ----------
bg3.exe+49A5B91: 48 89 4C 24 40              - mov [rsp+40],rcx
// ---------- DONE INJECTING  ----------
bg3.exe+49A5B96: 41 89 44 24 64              - mov [r12+64],eax
bg3.exe+49A5B9B: 49 8B 45 00                 - mov rax,[r13+00]
bg3.exe+49A5B9F: BA 00 02 00 00              - mov edx,00000200
bg3.exe+49A5BA4: 49 8B CD                    - mov rcx,r13
bg3.exe+49A5BA7: FF 90 88 00 00 00           - call qword ptr [rax+00000088]
bg3.exe+49A5BAD: 41 8B CF                    - mov ecx,r15d
bg3.exe+49A5BB0: 84 C0                       - test al,al
bg3.exe+49A5BB2: 0F 94 C1                    - sete cl
bg3.exe+49A5BB5: 41 0F B6 84 24 96 00 00 00  - movzx eax,byte ptr [r12+00000096]
bg3.exe+49A5BBE: D1 E8                       - shr eax,1
}

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+2665FAA

"bg3.exe"+2665F7F: 49 89 47 58                 -  mov [r15+58],rax
"bg3.exe"+2665F83: 0F B7 44 24 40              -  movzx eax,word ptr [rsp+40]
"bg3.exe"+2665F88: 66 41 89 47 60              -  mov [r15+60],ax
"bg3.exe"+2665F8D: EB 05                       -  jmp bg3.exe+2665F94
"bg3.exe"+2665F8F: 48 8B 4C 24 20              -  mov rcx,[rsp+20]
"bg3.exe"+2665F94: 41 8B 84 24 F0 00 00 00     -  mov eax,[r12+000000F0]
"bg3.exe"+2665F9C: 41 39 47 64                 -  cmp [r15+64],eax
"bg3.exe"+2665FA0: 74 11                       -  je bg3.exe+2665FB3
"bg3.exe"+2665FA2: 89 44 24 44                 -  mov [rsp+44],eax
"bg3.exe"+2665FA6: 48 83 C9 04                 -  or rcx,04
// ---------- INJECTING HERE ----------
"bg3.exe"+2665FAA: 48 89 4C 24 20              -  mov [rsp+20],rcx
// ---------- DONE INJECTING  ----------
"bg3.exe"+2665FAF: 41 89 47 64                 -  mov [r15+64],eax
"bg3.exe"+2665FB3: 49 8B 04 24                 -  mov rax,[r12]
"bg3.exe"+2665FB7: BA 00 02 00 00              -  mov edx,00000200
"bg3.exe"+2665FBC: 49 8B CC                    -  mov rcx,r12
"bg3.exe"+2665FBF: FF 90 98 00 00 00           -  call qword ptr [rax+00000098]
"bg3.exe"+2665FC5: 45 33 F6                    -  xor r14d,r14d
"bg3.exe"+2665FC8: 41 8B CE                    -  mov ecx,r14d
"bg3.exe"+2665FCB: 84 C0                       -  test al,al
"bg3.exe"+2665FCD: 0F 94 C1                    -  sete cl
"bg3.exe"+2665FD0: 41 0F B6 87 9E 00 00 00     -  movzx eax,byte ptr [r15+0000009E]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>56</ID>
              <Description>"Stack Count"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>ItemStackUpdatePtr</Address>
              <Offsets>
                <Offset>C8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>113</ID>
          <Description>"Gain Bonus Experience"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(addXp,$process,49 8B 46 70 48 8B 15)
alloc(newmem,$1000,addXp)

label(addXpBkp)
label(addXpVal)
label(return)

newmem:
  mov rax,addXpVal
  add r15d,[rax]
addXpBkp:
  readmem(addXp,4)
  reassemble(addXp+04)
  jmp return

align 10

addXpVal:
  dd #100

addXp:
  jmp newmem
  nop 6
return:
registersymbol(addXp)
registersymbol(addXpBkp)
registersymbol(addXpVal)

[DISABLE]
addXp:
  readmem(addXpBkp,4)
  reassemble(addXpBkp+04)
unregistersymbol(addXp)
unregistersymbol(addXpBkp)
unregistersymbol(addXpVal)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+21DD7E0

"bg3.exe"+21DD7BA: 4C 8B 0A              -  mov r9,[rdx]
"bg3.exe"+21DD7BD: 48 8D 55 C0           -  lea rdx,[rbp-40]
"bg3.exe"+21DD7C1: E8 6A 9C F4 FF        -  call bg3.exe+2127430
"bg3.exe"+21DD7C6: EB 0D                 -  jmp bg3.exe+21DD7D5
"bg3.exe"+21DD7C8: 4C 8B C6              -  mov r8,rsi
"bg3.exe"+21DD7CB: 48 8D 55 C0           -  lea rdx,[rbp-40]
"bg3.exe"+21DD7CF: E8 5C B0 F4 FF        -  call bg3.exe+2128830
"bg3.exe"+21DD7D4: 90                    -  nop 
"bg3.exe"+21DD7D5: 48 83 7D C0 00        -  cmp qword ptr [rbp-40],00
"bg3.exe"+21DD7DA: 0F 84 1A 03 00 00     -  je bg3.exe+21DDAFA
// ---------- INJECTING HERE ----------
"bg3.exe"+21DD7E0: 49 8B 46 70           -  mov rax,[r14+70]
"bg3.exe"+21DD7E4: 48 8B 15 6D 34 97 03  -  mov rdx,[bg3.exe+5B50C58]
// ---------- DONE INJECTING  ----------
"bg3.exe"+21DD7EB: 48 8B 88 68 02 00 00  -  mov rcx,[rax+00000268]
"bg3.exe"+21DD7F2: E8 C9 D8 84 00        -  call bg3.exe+2A2B0C0
"bg3.exe"+21DD7F7: F3 0F 2C D8           -  cvttss2si ebx,xmm0
"bg3.exe"+21DD7FB: 83 7D D8 03           -  cmp dword ptr [rbp-28],03
"bg3.exe"+21DD7FF: 7F 10                 -  jg bg3.exe+21DD811
"bg3.exe"+21DD801: 45 33 C0              -  xor r8d,r8d
"bg3.exe"+21DD804: 41 8D 50 04           -  lea edx,[r8+04]
"bg3.exe"+21DD808: 48 8D 4D D0           -  lea rcx,[rbp-30]
"bg3.exe"+21DD80C: E8 4F 26 01 FF        -  call bg3.exe+11EFE60
"bg3.exe"+21DD811: 48 8D 4D D0           -  lea rcx,[rbp-30]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>114</ID>
              <Description>"Amount"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>addXpVal</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>561</ID>
          <Description>"GainXp"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(GainXp,bg3.exe,44 01 20 48 8B 44 24 20)
registersymbol(GainXp)

[DISABLE]
unregistersymbol(GainXp)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+4D42CF4

bg3.exe+4D42CBF: 48 89 5C 24 48        - mov [rsp+48],rbx
bg3.exe+4D42CC4: C6 45 50 00           - mov byte ptr [rbp+50],00
bg3.exe+4D42CC8: C7 45 4C 40 00 00 00  - mov [rbp+4C],00000040
bg3.exe+4D42CCF: 49 8B 47 58           - mov rax,[r15+58]
bg3.exe+4D42CD3: 48 8B 15 0E AE EB 06  - mov rdx,[bg3.exe+BBFDAE8]
bg3.exe+4D42CDA: 48 8B 88 D0 01 00 00  - mov rcx,[rax+000001D0]
bg3.exe+4D42CE1: E8 5A EA 6A 01        - call bg3.exe+63F1740
bg3.exe+4D42CE6: F3 0F 2C D8           - cvttss2si ebx,xmm0
bg3.exe+4D42CEA: 48 8D 4C 24 52        - lea rcx,[rsp+52]
bg3.exe+4D42CEF: E8 8C AC 00 00        - call bg3.exe+4D4D980
// ---------- INJECTING HERE ----------
bg3.exe+4D42CF4: 44 01 20              - add [rax],r12d
// ---------- DONE INJECTING  ----------
bg3.exe+4D42CF7: 48 8B 44 24 20        - mov rax,[rsp+20]
bg3.exe+4D42CFC: 8B 78 14              - mov edi,[rax+14]
bg3.exe+4D42CFF: 42 8D 04 27           - lea eax,[rdi+r12]
bg3.exe+4D42D03: 48 8D 4C 24 51        - lea rcx,[rsp+51]
bg3.exe+4D42D08: 3B C3                 - cmp eax,ebx
bg3.exe+4D42D0A: 7C 37                 - jl bg3.exe+4D42D43
bg3.exe+4D42D0C: E8 1F AC 00 00        - call bg3.exe+4D4D930
bg3.exe+4D42D11: 89 18                 - mov [rax],ebx
bg3.exe+4D42D13: 2B DF                 - sub ebx,edi
bg3.exe+4D42D15: 48 8B 44 24 20        - mov rax,[rsp+20]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>562</ID>
          <Description>"LastEquippedHealthComponent"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(LastEquippedHealthComponent,$process,E8 ?? ?? ?? ?? 48 8B ?? ?? ?? ?? 00 00 48 8B ?? 48 8B ?? ?? ?? ?? 00 00 E8 ?? ?? ?? ?? 48 8B ?? ?? ?? ?? 00 00 48 8B ?? 48 8B ?? ?? ?? ?? 00 00 E8 ?? ?? ?? ?? 48 8B)
registersymbol(LastEquippedHealthComponent)

[DISABLE]
unregistersymbol(LastEquippedHealthComponent)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+49494B6

bg3.exe+494948D: 4C 8B F0                 - mov r14,rax
bg3.exe+4949490: E8 4B 9C 49 FD           - call bg3.exe+1DE30E0
bg3.exe+4949495: 48 8B E8                 - mov rbp,rax
bg3.exe+4949498: 48 8B D6                 - mov rdx,rsi
bg3.exe+494949B: 48 8B CF                 - mov rcx,rdi
bg3.exe+494949E: E8 4D 6A 91 FF           - call bg3.exe+425FEF0
bg3.exe+49494A3: 48 8B 94 24 E8 00 00 00  - mov rdx,[rsp+000000E8]
bg3.exe+49494AB: 48 8B CF                 - mov rcx,rdi
bg3.exe+49494AE: 48 8B F0                 - mov rsi,rax
bg3.exe+49494B1: E8 1A 1B C4 FD           - call bg3.exe+258AFD0
// ---------- INJECTING HERE ----------
bg3.exe+49494B6: 48 8B 94 24 E8 00 00 00  - mov rdx,[rsp+000000E8]
// ---------- DONE INJECTING  ----------
bg3.exe+49494BE: 48 8B F8                 - mov rdi,rax
bg3.exe+49494C1: 48 8B 8C 24 D0 00 00 00  - mov rcx,[rsp+000000D0]
bg3.exe+49494C9: E8 22 DE 7A FE           - call bg3.exe+30F72F0
bg3.exe+49494CE: 48 8B 94 24 E8 00 00 00  - mov rdx,[rsp+000000E8]
bg3.exe+49494D6: 48 8B D8                 - mov rbx,rax
bg3.exe+49494D9: 48 8B 8C 24 D0 00 00 00  - mov rcx,[rsp+000000D0]
bg3.exe+49494E1: E8 BA 9E 49 FD           - call bg3.exe+1DE33A0
bg3.exe+49494E6: 48 8B 94 24 D8 00 00 00  - mov rdx,[rsp+000000D8]
bg3.exe+49494EE: 48 8B 4C 24 20           - mov rcx,[rsp+20]
bg3.exe+49494F3: 48 89 0A                 - mov [rdx],rcx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>570</ID>
          <Description>"Console Commands"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(cmdAob,$process,48 8B 0D ?? ?? ?? ?? 48 85 C9 74 0A 4C 8B ?? 8B ?? E9 ?? ?? ?? ?? 32 C0)
alloc(cmdCode1,$1000,cmdAob)
alloc(cmdCode2,$1000,cmdAob)

label(return)
label(cmdBkp)
label(cmdExec)
label(cmdList)
label(cmdCall)
label(cmdArgs)
label(cmdTemp)
label(cmdAddr)
label(cmdStr1)
label(cmdStr2)

cmdAob+(DWORD)[cmdAob+03]+07:
cmdList:

cmdCode1:
align 10
cmdCall:
sub rsp,60
sub rsp,100
mov rcx,cmdTemp
mov [rcx+08],rsp
mov rdx,cmdArgs
mov rax,cmdAddr
jmp @f
align 10
@@:
call [rax]
add rsp,100
add rsp,60
movzx rax,al
ret

align 10
cmdAddr:
  dq 0
align 10
cmdArgs:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
align 100
cmdTemp:
  dq 0
align 100
  dq 0
align 100
cmdStr1:
  dq 0
align 100
cmdStr2:
  dq 0
align 100

cmdCode2:
  mov rcx,cmdExec
  cmp byte ptr [rcx],1
  jne @f
  mov byte ptr [rcx],0
  push rdx
  push rax
  mov rcx,cmdCall
  sub rsp,28
  call rcx
  add rsp,28
  pop rax
  pop rdx
cmdBkp:
  reassemble(cmdAob)
  jmp return

align 10
cmdExec:
  dq 0

cmdAob:
  jmp cmdCode2
  nop 2
return:

registersymbol(cmdAob)
registersymbol(cmdBkp)
registersymbol(cmdExec)
registersymbol(cmdCode1)
registersymbol(cmdCode2)
registersymbol(cmdList)
registersymbol(cmdCall)
registersymbol(cmdAddr)
registersymbol(cmdArgs)
registersymbol(cmdTemp)
registersymbol(cmdStr1)
registersymbol(cmdStr2)

[DISABLE]
cmdAob:
  reassemble(cmdBkp)
unregistersymbol(cmdAob)
unregistersymbol(cmdBkp)
unregistersymbol(cmdExec)
unregistersymbol(cmdCode1)
unregistersymbol(cmdCode2)
unregistersymbol(cmdList)
unregistersymbol(cmdCall)
unregistersymbol(cmdAddr)
unregistersymbol(cmdArgs)
unregistersymbol(cmdTemp)
unregistersymbol(cmdStr1)
unregistersymbol(cmdStr2)
dealloc(cmdCode1)
dealloc(cmdCode2)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+7195492

bg3.exe+7195487: CC                    - int 3 
bg3.exe+7195488: CC                    - int 3 
bg3.exe+7195489: CC                    - int 3 
bg3.exe+719548A: CC                    - int 3 
bg3.exe+719548B: CC                    - int 3 
bg3.exe+719548C: CC                    - int 3 
bg3.exe+719548D: CC                    - int 3 
bg3.exe+719548E: CC                    - int 3 
bg3.exe+719548F: CC                    - int 3 
bg3.exe+7195490: 8B C1                 - mov eax,ecx
// ---------- INJECTING HERE ----------
bg3.exe+7195492: 48 8B 0D 3F 69 BB 04  - mov rcx,[bg3.exe+BD4BDD8]
// ---------- DONE INJECTING  ----------
bg3.exe+7195499: 48 85 C9              - test rcx,rcx
bg3.exe+719549C: 74 0A                 - je bg3.exe+71954A8
bg3.exe+719549E: 4C 8B C2              - mov r8,rdx
bg3.exe+71954A1: 8B D0                 - mov edx,eax
bg3.exe+71954A3: E9 E8 03 00 00        - jmp bg3.exe+7195890
bg3.exe+71954A8: 32 C0                 - xor al,al
bg3.exe+71954AA: C3                    - ret 
bg3.exe+71954AB: CC                    - int 3 
bg3.exe+71954AC: CC                    - int 3 
bg3.exe+71954AD: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>643</ID>
          <Description>"findFunc"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(findFunc,bg3.exe,48 83 C4 38 C3 45 8B C8 48)
alloc(newmem,$1000,findFunc)

label(code)
label(return)

newmem:

code:
  add rsp,38
  push rax
  mov rax,[rsp+08]
  lea rax,[rax]
  pop rax
  ret 
  jmp return

findFunc:
  jmp newmem
return:
registersymbol(findFunc)

[DISABLE]

findFunc:
  db 48 83 C4 38 C3

unregistersymbol(findFunc)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+73AAE59

wrapper1: 48 83 EC 38     - sub rsp,38
bg3.exe+73AAE44: 8B C2           - mov eax,edx
bg3.exe+73AAE46: 8B 51 04        - mov edx,[rcx+04]
bg3.exe+73AAE49: 2B 11           - sub edx,[rcx]
bg3.exe+73AAE4B: 3B D0           - cmp edx,eax
bg3.exe+73AAE4D: 7C 0F           - jl bg3.exe+73AAE5E
bg3.exe+73AAE4F: 45 85 C0        - test r8d,r8d
bg3.exe+73AAE52: 78 05           - js bg3.exe+73AAE59
bg3.exe+73AAE54: 41 3B D0        - cmp edx,r8d
bg3.exe+73AAE57: 7F 05           - jg bg3.exe+73AAE5E
// ---------- INJECTING HERE ----------
bg3.exe+73AAE59: 48 83 C4 38     - add rsp,38
// ---------- DONE INJECTING  ----------
bg3.exe+73AAE5D: C3              - ret 
bg3.exe+73AAE5E: 45 8B C8        - mov r9d,r8d
bg3.exe+73AAE61: 48 8D 4C 24 20  - lea rcx,[rsp+20]
bg3.exe+73AAE66: 44 8B C0        - mov r8d,eax
bg3.exe+73AAE69: E8 52 03 00 00  - call bg3.exe+73AB1C0
bg3.exe+73AAE6E: 48 8B C8        - mov rcx,rax
bg3.exe+73AAE71: E8 FA 02 00 00  - call bg3.exe+73AB170
bg3.exe+73AAE76: CC              - int 3 
bg3.exe+73AAE77: CC              - int 3 
bg3.exe+73AAE78: CC              - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>174</ID>
          <Description>"Always Win Rolls"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(rolls,$process,7D 04 32 C0 EB ?? B0 01)
alloc(rollsBkp,4)
rollsBkp:
  readmem(rolls+02,4)
rolls+02:
  nop 4
registersymbol(rolls)
registersymbol(rollsBkp)

[DISABLE]
rolls+02:
  readmem(rollsBkp,4)
unregistersymbol(rolls)
unregistersymbol(rollsBkp)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+22D0A72

"bg3.exe"+22D0A48: 74 0B                       -  je bg3.exe+22D0A55
"bg3.exe"+22D0A4A: 41 BC 0A 00 00 00           -  mov r12d,0000000A
"bg3.exe"+22D0A50: 45 2A EC                    -  sub r13l,r12l
"bg3.exe"+22D0A53: EB 15                       -  jmp bg3.exe+22D0A6A
"bg3.exe"+22D0A55: 45 8B A6 A8 00 00 00        -  mov r12d,[r14+000000A8]
"bg3.exe"+22D0A5C: 45 0F B6 AE 9C 00 00 00     -  movzx r13d,byte ptr [r14+0000009C]
"bg3.exe"+22D0A64: 41 83 FC 14                 -  cmp r12d,14
"bg3.exe"+22D0A68: 74 0E                       -  je bg3.exe+22D0A78
"bg3.exe"+22D0A6A: 41 0F BE 4E 59              -  movsx ecx,byte ptr [r14+59]
"bg3.exe"+22D0A6F: 39 4D C0                    -  cmp [rbp-40],ecx
// ---------- INJECTING HERE ----------
"bg3.exe"+22D0A72: 7D 04                       -  jnl bg3.exe+22D0A78
"bg3.exe"+22D0A74: 32 C0                       -  xor al,al
"bg3.exe"+22D0A76: EB 07                       -  jmp bg3.exe+22D0A7F
// ---------- DONE INJECTING  ----------
"bg3.exe"+22D0A78: B0 01                       -  mov al,01
"bg3.exe"+22D0A7A: 41 0F B6 4E 59              -  movzx ecx,byte ptr [r14+59]
"bg3.exe"+22D0A7F: 88 44 24 50                 -  mov [rsp+50],al
"bg3.exe"+22D0A83: 48 89 74 24 78              -  mov [rsp+78],rsi
"bg3.exe"+22D0A88: C6 45 80 00                 -  mov byte ptr [rbp-80],00
"bg3.exe"+22D0A8C: 0F BE D1                    -  movsx edx,cl
"bg3.exe"+22D0A8F: 4C 8B C6                    -  mov r8,rsi
"bg3.exe"+22D0A92: 0F B6 4D 58                 -  movzx ecx,byte ptr [rbp+58]
"bg3.exe"+22D0A96: 84 C9                       -  test cl,cl
"bg3.exe"+22D0A98: 4C 0F 45 45 38              -  cmovne r8,[rbp+38]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>414</ID>
          <Description>"Always Win Rolls 2"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(rolls2,$process,7D 04 32 C0 EB ?? B0 01)
alloc(rolls2Bkp,4)
rolls2Bkp:
  readmem(rolls2+02,4)
rolls2+02:
  nop 4
registersymbol(rolls2)
registersymbol(rolls2Bkp)

[DISABLE]
rolls2+02:
  readmem(rolls2Bkp,4)
unregistersymbol(rolls2)
unregistersymbol(rolls2Bkp)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+22D0A72

"bg3.exe"+22D0A48: 74 0B                       -  je bg3.exe+22D0A55
"bg3.exe"+22D0A4A: 41 BC 0A 00 00 00           -  mov r12d,0000000A
"bg3.exe"+22D0A50: 45 2A EC                    -  sub r13l,r12l
"bg3.exe"+22D0A53: EB 15                       -  jmp bg3.exe+22D0A6A
"bg3.exe"+22D0A55: 45 8B A6 A8 00 00 00        -  mov r12d,[r14+000000A8]
"bg3.exe"+22D0A5C: 45 0F B6 AE 9C 00 00 00     -  movzx r13d,byte ptr [r14+0000009C]
"bg3.exe"+22D0A64: 41 83 FC 14                 -  cmp r12d,14
"bg3.exe"+22D0A68: 74 0E                       -  je bg3.exe+22D0A78
"bg3.exe"+22D0A6A: 41 0F BE 4E 59              -  movsx ecx,byte ptr [r14+59]
"bg3.exe"+22D0A6F: 39 4D C0                    -  cmp [rbp-40],ecx
// ---------- INJECTING HERE ----------
"bg3.exe"+22D0A72: 7D 04                       -  jnl bg3.exe+22D0A78
"bg3.exe"+22D0A74: 32 C0                       -  xor al,al
"bg3.exe"+22D0A76: EB 07                       -  jmp bg3.exe+22D0A7F
// ---------- DONE INJECTING  ----------
"bg3.exe"+22D0A78: B0 01                       -  mov al,01
"bg3.exe"+22D0A7A: 41 0F B6 4E 59              -  movzx ecx,byte ptr [r14+59]
"bg3.exe"+22D0A7F: 88 44 24 50                 -  mov [rsp+50],al
"bg3.exe"+22D0A83: 48 89 74 24 78              -  mov [rsp+78],rsi
"bg3.exe"+22D0A88: C6 45 80 00                 -  mov byte ptr [rbp-80],00
"bg3.exe"+22D0A8C: 0F BE D1                    -  movsx edx,cl
"bg3.exe"+22D0A8F: 4C 8B C6                    -  mov r8,rsi
"bg3.exe"+22D0A92: 0F B6 4D 58                 -  movzx ecx,byte ptr [rbp+58]
"bg3.exe"+22D0A96: 84 C9                       -  test cl,cl
"bg3.exe"+22D0A98: 4C 0F 45 45 38              -  cmovne r8,[rbp+38]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>267</ID>
          <Description>"Last Item Dropped"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(dropItem,$process,74 ?? 48 8B 13 48 8B CB FF 92 ?? ?? ?? ?? 48 8B ?? ?? ?? ?? ?? 48)
alloc(newmem,$1000,dropItem)

label(code)
label(return)
label(dropItemPtr)

newmem:
  mov rdx,dropItemPtr
  mov [rdx],rbx
code:
  mov rdx,[rbx]
  mov rcx,rbx
  jmp return

dropItemPtr:
  dq 0

dropItem+02:
  jmp newmem
  nop
return:
registersymbol(dropItem)
registersymbol(dropItemPtr)

[DISABLE]
dropItem+02:
  db 48 8B 13 48 8B CB
unregistersymbol(dropItem)
unregistersymbol(dropItemPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+25E984D

"bg3.exe"+25E982D: E8 BE F3 E2 FF        -  call bg3.exe+2418BF0
"bg3.exe"+25E9832: 48 8B D8              -  mov rbx,rax
"bg3.exe"+25E9835: 48 85 C0              -  test rax,rax
"bg3.exe"+25E9838: 74 4D                 -  je bg3.exe+25E9887
"bg3.exe"+25E983A: 48 8D 4F 10           -  lea rcx,[rdi+10]
"bg3.exe"+25E983E: 33 D2                 -  xor edx,edx
"bg3.exe"+25E9840: E8 1B EE DF FF        -  call bg3.exe+23E8660
"bg3.exe"+25E9845: 48 8B F0              -  mov rsi,rax
"bg3.exe"+25E9848: 48 85 C0              -  test rax,rax
"bg3.exe"+25E984B: 74 3A                 -  je bg3.exe+25E9887
// ---------- INJECTING HERE ----------
"bg3.exe"+25E984D: 48 8B 13              -  mov rdx,[rbx]
"bg3.exe"+25E9850: 48 8B CB              -  mov rcx,rbx
// ---------- DONE INJECTING  ----------
"bg3.exe"+25E9853: FF 92 D0 00 00 00     -  call qword ptr [rdx+000000D0]
"bg3.exe"+25E9859: 48 8B 15 C8 CF 54 03  -  mov rdx,[bg3.exe+5B36828]
"bg3.exe"+25E9860: 48 8D 4C 24 20        -  lea rcx,[rsp+20]
"bg3.exe"+25E9865: 4C 8B C0              -  mov r8,rax
"bg3.exe"+25E9868: 4C 8B CE              -  mov r9,rsi
"bg3.exe"+25E986B: E8 10 7C 14 00        -  call bg3.exe+2731480
"bg3.exe"+25E9870: 80 7C 24 28 00        -  cmp byte ptr [rsp+28],00
"bg3.exe"+25E9875: 75 10                 -  jne bg3.exe+25E9887
"bg3.exe"+25E9877: 33 C0                 -  xor eax,eax
"bg3.exe"+25E9879: 38 44 24 20           -  cmp [rsp+20],al
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>324</ID>
              <Description>"Dropped Item"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <Address>dropItemPtr</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>326</ID>
                  <Description>"Name (don't touch)"</Description>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+70</Address>
                  <Offsets>
                    <Offset>0</Offset>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>327</ID>
                  <Description>"Name (don't touch)"</Description>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+70</Address>
                  <Offsets>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>325</ID>
                  <Description>"Count"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+F0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>702</ID>
          <Description>"flags"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(flags,$process,CC CC CC CC CC CC CC CC CC CC CC CC CC CC CC 48 85 51 28 0F 95 C0)
alloc(newmem,$1000,flags)

label(code)
label(return)

newmem:
  mov rax,LastItemMovedPtr
  mov rax,[rax]
  cmp rax,rcx
  jne code
  bt rdx,15
  jnc @f
  mov rax,[rsp]
  lea rax,[rax]
@@:
  bt rdx,1A
  jnc @f
  mov rax,[rsp]
  lea rax,[rax]
code:
  test [rcx+28],rdx
  setne al
  jmp return

flags+0F:
  jmp newmem
  nop 2
return:
registersymbol(flags)

[DISABLE]
flags+0F:
  db 48 85 51 28 0F 95 C0
unregistersymbol(flags)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+4259020

bg3.exe+4259016: CC           - int 3 
bg3.exe+4259017: CC           - int 3 
bg3.exe+4259018: CC           - int 3 
bg3.exe+4259019: CC           - int 3 
bg3.exe+425901A: CC           - int 3 
bg3.exe+425901B: CC           - int 3 
bg3.exe+425901C: CC           - int 3 
bg3.exe+425901D: CC           - int 3 
bg3.exe+425901E: CC           - int 3 
bg3.exe+425901F: CC           - int 3 
// ---------- INJECTING HERE ----------
bg3.exe+4259020: 48 85 51 28  - test [rcx+28],rdx
// ---------- DONE INJECTING  ----------
bg3.exe+4259024: 0F 95 C0     - setne al
bg3.exe+4259027: C3           - ret 
bg3.exe+4259028: CC           - int 3 
bg3.exe+4259029: CC           - int 3 
bg3.exe+425902A: CC           - int 3 
bg3.exe+425902B: CC           - int 3 
bg3.exe+425902C: CC           - int 3 
bg3.exe+425902D: CC           - int 3 
bg3.exe+425902E: CC           - int 3 
bg3.exe+425902F: CC           - int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>780</ID>
          <Description>"setFlag"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(setFlag,$process,48 8B F2 BA 02 00 00 00)
alloc(newmem,$1000,setFlag)

label(code)
label(return)

newmem:
  bt rsi,15
  jnc @f
  mov rdx,[rcx+28]
@@:
  bt rsi,1A
  jnc @f
  mov rdx,[rcx+28]
code:
  mov edx,00000002
  jmp return

setFlag+03:
  jmp newmem
return:
registersymbol(setFlag)

[DISABLE]
setFlag+03:
  db BA 02 00 00 00
unregistersymbol(setFlag)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+4258DFF

bg3.exe+4258DDF: CC                             - int 3 
bg3.exe+4258DE0: 40 57                          - push rdi
bg3.exe+4258DE2: 41 56                          - push r14
bg3.exe+4258DE4: 48 83 EC 38                    - sub rsp,38
bg3.exe+4258DE8: 48 8B 01                       - mov rax,[rcx]
bg3.exe+4258DEB: 48 8B F9                       - mov rdi,rcx
bg3.exe+4258DEE: 4C 8B 71 28                    - mov r14,[rcx+28]
bg3.exe+4258DF2: 48 89 6C 24 30                 - mov [rsp+30],rbp
bg3.exe+4258DF7: 48 89 74 24 28                 - mov [rsp+28],rsi
bg3.exe+4258DFC: 48 8B F2                       - mov rsi,rdx
// ---------- INJECTING HERE ----------
bg3.exe+4258DFF: BA 02 00 00 00                 - mov edx,00000002
// ---------- DONE INJECTING  ----------
bg3.exe+4258E04: 4C 89 7C 24 20                 - mov [rsp+20],r15
bg3.exe+4258E09: FF 90 88 00 00 00              - call qword ptr [rax+00000088]
bg3.exe+4258E0F: 4C 8B C6                       - mov r8,rsi
bg3.exe+4258E12: 44 0F B6 F8                    - movzx r15d,al
bg3.exe+4258E16: 49 F7 D0                       - not r8
bg3.exe+4258E19: 48 B8 12 00 01 00 00 18 40 00  - mov rax,0040180000010012
bg3.exe+4258E23: 4C 21 47 28                    - and [rdi+28],r8
bg3.exe+4258E27: 48 85 F0                       - test rax,rsi
bg3.exe+4258E2A: 74 08                          - je bg3.exe+4258E34
bg3.exe+4258E2C: 48 8B CF                       - mov rcx,rdi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>781</ID>
          <Description>"Open Container Flag 1"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Binary</VariableType>
          <BitStart>5</BitStart>
          <BitLength>1</BitLength>
          <ShowAsBinary>0</ShowAsBinary>
          <Address>LastItemMovedPtr</Address>
          <Offsets>
            <Offset>2A</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>782</ID>
          <Description>"Open Container Flag 2"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Binary</VariableType>
          <BitStart>2</BitStart>
          <BitLength>1</BitLength>
          <ShowAsBinary>0</ShowAsBinary>
          <Address>LastItemMovedPtr</Address>
          <Offsets>
            <Offset>2B</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>796</ID>
          <Description>"changeStat"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(changeStat,$process,48 8D ?? ?? ?? 3B ?? 48 0F 4D ?? 8B)
registersymbol(changeStat)

[DISABLE]
unregistersymbol(changeStat)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+492BD5D

bg3.exe+492BD36: 89 7C 24 30        - mov [rsp+30],edi
bg3.exe+492BD3A: 44 89 64 24 38     - mov [rsp+38],r12d
bg3.exe+492BD3F: 48 8D 4C 24 30     - lea rcx,[rsp+30]
bg3.exe+492BD44: 48 8D 44 24 38     - lea rax,[rsp+38]
bg3.exe+492BD49: 45 85 E4           - test r12d,r12d
bg3.exe+492BD4C: 48 0F 49 C8        - cmovns rcx,rax
bg3.exe+492BD50: 48 8D 44 24 20     - lea rax,[rsp+20]
bg3.exe+492BD55: 3B 11              - cmp edx,[rcx]
bg3.exe+492BD57: 48 0F 4D C1        - cmovge rax,rcx
bg3.exe+492BD5B: 8B 18              - mov ebx,[rax]
// ---------- INJECTING HERE ----------
bg3.exe+492BD5D: 41 39 59 4C        - cmp [r9+4C],ebx
// ---------- DONE INJECTING  ----------
bg3.exe+492BD61: 0F 84 8D 01 00 00  - je bg3.exe+492BEF4
bg3.exe+492BD67: 45 33 C0           - xor r8d,r8d
bg3.exe+492BD6A: 41 8D 50 03        - lea edx,[r8+03]
bg3.exe+492BD6E: 48 8D 4D 87        - lea rcx,[rbp-79]
bg3.exe+492BD72: E8 59 C1 3E FD     - call bg3.exe+1D17ED0
bg3.exe+492BD77: 48 8D 4D 87        - lea rcx,[rbp-79]
bg3.exe+492BD7B: 83 7D 93 40        - cmp dword ptr [rbp-6D],40
bg3.exe+492BD7F: 48 0F 4F 4D 87     - cmovg rcx,[rbp-79]
bg3.exe+492BD84: 48 8B 01           - mov rax,[rcx]
bg3.exe+492BD87: 48 0F BA E8 02     - bts rax,02
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>829</ID>
          <Description>"Last Item Moved"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(LastItemMoved,$process,48 8D 8A ?? ?? 00 00 83 39 FF 74)
alloc(newmem,$1000,LastItemMoved)

label(LastItemMovedBkp)
label(LastItemMovedPtr)
label(return)

newmem:

LastItemMovedBkp:
  readmem(LastItemMoved,7)
  mov rax,LastItemMovedPtr
  mov [rax+00],rcx
  mov [rax+08],rdx
  jmp return

align 10
LastItemMovedPtr:
  dq 0
  dq 0

LastItemMoved:
  jmp newmem
  nop 2
return:
registersymbol(LastItemMoved)
registersymbol(LastItemMovedBkp)
registersymbol(LastItemMovedPtr)

[DISABLE]
LastItemMoved:
  readmem(LastItemMovedBkp,7)
unregistersymbol(LastItemMoved)
unregistersymbol(LastItemMovedBkp)
unregistersymbol(LastItemMovedPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+3BD902D

bg3.exe+3BD9000: 48 8D 6C 24 D9        - lea rbp,[rsp-27]
bg3.exe+3BD9005: 48 81 EC 90 00 00 00  - sub rsp,00000090
bg3.exe+3BD900C: 48 8B 05 C5 E6 61 08  - mov rax,[bg3.g_pAssertHook+F978]
bg3.exe+3BD9013: 48 33 C4              - xor rax,rsp
bg3.exe+3BD9016: 48 89 45 1F           - mov [rbp+1F],rax
bg3.exe+3BD901A: 44 88 45 B7           - mov [rbp-49],r8l
bg3.exe+3BD901E: 48 8B F2              - mov rsi,rdx
bg3.exe+3BD9021: 4C 8B F9              - mov r15,rcx
bg3.exe+3BD9024: 48 85 D2              - test rdx,rdx
bg3.exe+3BD9027: 0F 84 06 02 00 00     - je bg3.exe+3BD9233
// ---------- INJECTING HERE ----------
bg3.exe+3BD902D: 48 8D 8A 90 00 00 00  - lea rcx,[rdx+00000090]
// ---------- DONE INJECTING  ----------
bg3.exe+3BD9034: 83 39 FF              - cmp dword ptr [rcx],-01
bg3.exe+3BD9037: 74 0E                 - je bg3.exe+3BD9047
bg3.exe+3BD9039: E8 A2 68 64 04        - call bg3.exe+821F8E0
bg3.exe+3BD903E: 80 38 5F              - cmp byte ptr [rax],5F
bg3.exe+3BD9041: 0F 84 EC 01 00 00     - je bg3.exe+3BD9233
bg3.exe+3BD9047: BF 02 00 00 00        - mov edi,00000002
bg3.exe+3BD904C: 48 8B CE              - mov rcx,rsi
bg3.exe+3BD904F: 8B D7                 - mov edx,edi
bg3.exe+3BD9051: E8 9A AE EB FF        - call bg3.exe+3A93EF0
bg3.exe+3BD9056: 84 C0                 - test al,al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>870</ID>
          <Description>"Last Item Moved"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(LastItemMoved,$process,48 8B ?? ?? 0F B7 ?? 41 3B ?? ?? 7D)
alloc(newmem,$1000,LastItemMoved)

label(LastItemMovedBkp)
label(return)

newmem:
LastItemMovedBkp:
  readmem(LastItemMoved,7)
  push rdx
  mov rdx,LastItemMovedPtr
  mov [rdx],rax
  pop rdx
  jmp return

align 10
LastItemMovedPtr:
  dq 0

LastItemMoved:
  jmp newmem
  nop 2
return:
registersymbol(LastItemMoved)
registersymbol(LastItemMovedBkp)
registersymbol(LastItemMovedPtr)

[DISABLE]
LastItemMoved:
  readmem(LastItemMovedBkp,7)
unregistersymbol(LastItemMoved)
unregistersymbol(LastItemMovedBkp)
unregistersymbol(LastItemMovedPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+2272839

bg3.exe+2272823: 48 83 C2 08                    - add rdx,08
bg3.exe+2272827: 49 3B D0                       - cmp rdx,r8
bg3.exe+227282A: 75 F4                          - jne bg3.exe+2272820
bg3.exe+227282C: C3                             - ret 
bg3.exe+227282D: CC                             - int 3 
bg3.exe+227282E: CC                             - int 3 
bg3.exe+227282F: CC                             - int 3 
bg3.exe+2272830: 83 79 1C 00                    - cmp dword ptr [rcx+1C],00
bg3.exe+2272834: 4C 8B C1                       - mov r8,rcx
bg3.exe+2272837: 74 1B                          - je bg3.exe+2272854
// ---------- INJECTING HERE ----------
bg3.exe+2272839: 48 8B 41 10                    - mov rax,[rcx+10]
// ---------- DONE INJECTING  ----------
bg3.exe+227283D: 0F B7 08                       - movzx ecx,word ptr [rax]
bg3.exe+2272840: 41 3B 48 0C                    - cmp ecx,[r8+0C]
bg3.exe+2272844: 7D 0E                          - jnl bg3.exe+2272854
bg3.exe+2272846: 49 8B 00                       - mov rax,[r8]
bg3.exe+2272849: 48 8B 0C C8                    - mov rcx,[rax+rcx*8]
bg3.exe+227284D: 48 8B C2                       - mov rax,rdx
bg3.exe+2272850: 48 89 0A                       - mov [rdx],rcx
bg3.exe+2272853: C3                             - ret 
bg3.exe+2272854: 48 B8 00 00 00 00 00 00 C0 FF  - mov rax,FFC0000000000000
bg3.exe+227285E: 48 89 02                       - mov [rdx],rax
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>915</ID>
              <Description>"Quantity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>LastItemMovedPtr</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>872</ID>
          <Description>"Last Item Moved"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(LastItemMoved,bg3.exe,44 38 64 24 40 0F)
alloc(newmem,$1000,LastItemMoved)

label(LastItemMovedPtr)
label(code)
label(return)

newmem:
  mov rcx,[rsp+38]
  mov rax,LastItemMovedPtr
  mov [rax],rcx
code:
  cmp [rsp+40],r12b
  jmp return

align 10
LastItemMovedPtr:
  dq 0

LastItemMoved:
  jmp newmem
return:
registersymbol(LastItemMoved)
registersymbol(LastItemMovedPtr)

[DISABLE]
LastItemMoved:
  db 44 38 64 24 40
unregistersymbol(LastItemMoved)
unregistersymbol(LastItemMovedPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: LastItemMoved

bg3.exe+13EFEA5: 48 03 D1                 - add rdx,rcx
bg3.exe+13EFEA8: 4D 63 43 4C              - movsxd  r8,dword ptr [r11+4C]
bg3.exe+13EFEAC: 49 C1 E0 03              - shl r8,03
bg3.exe+13EFEB0: 4A 8D 0C CD 00 00 00 00  - lea rcx,[r9*8+00000000]
bg3.exe+13EFEB8: 49 3B C8                 - cmp rcx,r8
bg3.exe+13EFEBB: 0F 85 AF 00 00 00        - jne bg3.exe+13EFF70
bg3.exe+13EFEC1: 4C 8D 44 24 20           - lea r8,[rsp+20]
bg3.exe+13EFEC6: 48 8B D5                 - mov rdx,rbp
bg3.exe+13EFEC9: 48 8D 4C 24 38           - lea rcx,[rsp+38]
bg3.exe+13EFECE: E8 7D C4 D2 00           - call bg3.exe+211C350
// ---------- INJECTING HERE ----------
LastItemMoved: 44 38 64 24 40           - cmp [rsp+40],r12b
// ---------- DONE INJECTING  ----------
bg3.exe+13EFED8: 0F 85 9C 00 00 00        - jne bg3.exe+13EFF7A
bg3.exe+13EFEDE: 48 8D 54 24 28           - lea rdx,[rsp+28]
bg3.exe+13EFEE3: E9 18 01 C0 FE           - jmp LastItemMovedBkp
bg3.exe+13EFEE8: E8 43 29 E8 00           - call bg3.exe+2272830
bg3.exe+13EFEED: 48 8B 38                 - mov rdi,[rax]
bg3.exe+13EFEF0: 48 89 7C 24 20           - mov [rsp+20],rdi
bg3.exe+13EFEF5: 48 8D 44 24 38           - lea rax,[rsp+38]
bg3.exe+13EFEFA: 48 8B 4C 24 40           - mov rcx,[rsp+40]
bg3.exe+13EFEFF: 84 C9                    - test cl,cl
bg3.exe+13EFF01: 49 0F 45 C4              - cmovne rax,r12
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>924</ID>
          <Description>"itemDisplay"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(itemDisplay1,$process,E8 ?? ?? ?? ?? E9 ?? ?? ?? ?? ?? 8B ?? E8 ?? ?? ?? ?? 89 44)
registersymbol(itemDisplay1)

aobscanmodule(itemDisplay2,bg3.exe,39 87 00 02 00 00 75)
registersymbol(itemDisplay2)

[DISABLE]
unregistersymbol(itemDisplay1)
unregistersymbol(itemDisplay2)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+24B1CE3

bg3.exe+24B1CBE: 48 85 DB              - test rbx,rbx
bg3.exe+24B1CC1: 74 0C                 - je bg3.exe+24B1CCF
bg3.exe+24B1CC3: 48 8B 43 10           - mov rax,[rbx+10]
bg3.exe+24B1CC7: 48 8D 4B 10           - lea rcx,[rbx+10]
bg3.exe+24B1CCB: FF 50 20              - call qword ptr [rax+20]
bg3.exe+24B1CCE: 90                    - nop 
bg3.exe+24B1CCF: 4C 8B 64 24 60        - mov r12,[rsp+60]
bg3.exe+24B1CD4: 0F B7 5C 24 30        - movzx ebx,word ptr [rsp+30]
bg3.exe+24B1CD9: 8B 44 24 68           - mov eax,[rsp+68]
bg3.exe+24B1CDD: 44 0F B6 6C 24 40     - movzx r13d,byte ptr [rsp+40]
// ---------- INJECTING HERE ----------
bg3.exe+24B1CE3: 39 87 00 02 00 00     - cmp [rdi+00000200],eax
// ---------- DONE INJECTING  ----------
bg3.exe+24B1CE9: 75 2A                 - jne bg3.exe+24B1D15
bg3.exe+24B1CEB: 66 41 39 5C 24 58     - cmp [r12+58],bx
bg3.exe+24B1CF1: 75 1A                 - jne bg3.exe+24B1D0D
bg3.exe+24B1CF3: 44 38 AF 20 02 00 00  - cmp [rdi+00000220],r13b
bg3.exe+24B1CFA: 75 11                 - jne bg3.exe+24B1D0D
bg3.exe+24B1CFC: 0F B6 4C 24 38        - movzx ecx,byte ptr [rsp+38]
bg3.exe+24B1D01: 38 8F 60 02 00 00     - cmp [rdi+00000260],cl
bg3.exe+24B1D07: 0F 84 69 01 00 00     - je bg3.exe+24B1E76
bg3.exe+24B1D0D: 39 87 00 02 00 00     - cmp [rdi+00000200],eax
bg3.exe+24B1D13: 74 38                 - je bg3.exe+24B1D4D
}

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+24B1CE3

bg3.exe+24B1CBE: 48 85 DB              - test rbx,rbx
bg3.exe+24B1CC1: 74 0C                 - je bg3.exe+24B1CCF
bg3.exe+24B1CC3: 48 8B 43 10           - mov rax,[rbx+10]
bg3.exe+24B1CC7: 48 8D 4B 10           - lea rcx,[rbx+10]
bg3.exe+24B1CCB: FF 50 20              - call qword ptr [rax+20]
bg3.exe+24B1CCE: 90                    - nop 
bg3.exe+24B1CCF: 4C 8B 64 24 60        - mov r12,[rsp+60]
bg3.exe+24B1CD4: 0F B7 5C 24 30        - movzx ebx,word ptr [rsp+30]
bg3.exe+24B1CD9: 8B 44 24 68           - mov eax,[rsp+68]
bg3.exe+24B1CDD: 44 0F B6 6C 24 40     - movzx r13d,byte ptr [rsp+40]
// ---------- INJECTING HERE ----------
bg3.exe+24B1CE3: 39 87 00 02 00 00     - cmp [rdi+00000200],eax
// ---------- DONE INJECTING  ----------
bg3.exe+24B1CE9: 75 2A                 - jne bg3.exe+24B1D15
bg3.exe+24B1CEB: 66 41 39 5C 24 58     - cmp [r12+58],bx
bg3.exe+24B1CF1: 75 1A                 - jne bg3.exe+24B1D0D
bg3.exe+24B1CF3: 44 38 AF 20 02 00 00  - cmp [rdi+00000220],r13b
bg3.exe+24B1CFA: 75 11                 - jne bg3.exe+24B1D0D
bg3.exe+24B1CFC: 0F B6 4C 24 38        - movzx ecx,byte ptr [rsp+38]
bg3.exe+24B1D01: 38 8F 60 02 00 00     - cmp [rdi+00000260],cl
bg3.exe+24B1D07: 0F 84 69 01 00 00     - je bg3.exe+24B1E76
bg3.exe+24B1D0D: 39 87 00 02 00 00     - cmp [rdi+00000200],eax
bg3.exe+24B1D13: 74 38                 - je bg3.exe+24B1D4D
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1539</ID>
          <Description>"Win convo/steal"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Baldur's Gate 3 (3440x1440) - (DX11) - (6 + 6 WT)
  Version: 
  Date   : 2023-08-11
  Author : fear

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(convocheck,bg3.exe,8B 44 81 3C 89 44 24 68) // should be unique
alloc(newmem,$1000,convocheck)

label(code)
label(return)

newmem:

code:
  mov eax,[rcx+rax*4+3C]
  mov eax,#69
  mov [rsp+68],eax
  jmp return

convocheck:
  jmp newmem
  nop 3
return:
registersymbol(convocheck)

[DISABLE]

convocheck:
  db 8B 44 81 3C 89 44 24 68

unregistersymbol(convocheck)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3_dx11.exe+21D4234

bg3_dx11.exe+21D4209: 40 88 7C 24 28           - mov [rsp+28],dil
bg3_dx11.exe+21D420E: 4D 8B C7                 - mov r8,r15
bg3_dx11.exe+21D4211: 49 8B D4                 - mov rdx,r12
bg3_dx11.exe+21D4214: 88 44 24 20              - mov [rsp+20],al
bg3_dx11.exe+21D4218: 49 8B CE                 - mov rcx,r14
bg3_dx11.exe+21D421B: E8 E0 A7 FF FF           - call bg3_dx11.exe+21CEA00
bg3_dx11.exe+21D4220: 48 8B 4D 80              - mov rcx,[rbp-80]
bg3_dx11.exe+21D4224: 48 8B 9D F8 00 00 00     - mov rbx,[rbp+000000F8]
bg3_dx11.exe+21D422B: EB 0B                    - jmp bg3_dx11.exe+21D4238
bg3_dx11.exe+21D422D: 0F B6 85 C0 00 00 00     - movzx eax,byte ptr [rbp+000000C0]
// ---------- INJECTING HERE ----------
bg3_dx11.exe+21D4234: 8B 44 81 3C              - mov eax,[rcx+rax*4+3C]
// ---------- DONE INJECTING  ----------
bg3_dx11.exe+21D4238: 89 44 24 68              - mov [rsp+68],eax
bg3_dx11.exe+21D423C: 85 C0                    - test eax,eax
bg3_dx11.exe+21D423E: 0F 84 A8 02 00 00        - je bg3_dx11.exe+21D44EC
bg3_dx11.exe+21D4244: 48 85 DB                 - test rbx,rbx
bg3_dx11.exe+21D4247: 0F 84 9F 02 00 00        - je bg3_dx11.exe+21D44EC
bg3_dx11.exe+21D424D: 40 0F B6 C7              - movzx eax,dil
bg3_dx11.exe+21D4251: 0F 29 B4 24 40 01 00 00  - movaps [rsp+00000140],xmm6
bg3_dx11.exe+21D4259: 66 0F 6E 44 81 04        - movd xmm0,[rcx+rax*4+04]
bg3_dx11.exe+21D425F: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
bg3_dx11.exe+21D4262: F3 0F 5C 05 1E F9 6C 02  - subss xmm0,[bg3_dx11.exe+48A3B88]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4491</ID>
          <Description>"getItem"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
{$lua}
if syntaxcheck then return "define(address,1)" end
local memscan = createMemScan()
local found = createFoundList(memscan)
local bytes = "48 33 ?? 48 89 ?? ?? ?? 0F B6 ?? 33 ?? E8"
local start = getAddress(process)
local stop  = start + getModuleSize(process)
memscan.firstScan(
  soExactValue, vtByteArray, rtRounded,
  bytes, nil, start, stop, "+X-C-W",
  fsmNotAligned, "1", true, false, false, false)
memscan.waitTillDone()
found.initialize()
local count = found.Count
local address = nil
if count &gt; 1 then
  address = found.Address[1]
end
memscan.Destroy()
memscan = nil
assert(count &gt; 1, "Unable to find array of bytes.")
return "define(address," .. address .. ")"
{$asm}
alloc(newmem,$1000,address)
alloc(getItemUUID,$2000)
//aobscanmodule(getItem,$process,48 33 ?? 48 89 ?? ?? ?? 0F B6 ?? 33 ?? E8)

label(getItem)
label(done)
label(getItemBkp)
label(return)

newmem:
  push rax
  mov rax,[rcx+08]
  test rax,rax
  je done
  push rbx
  push rcx
  //mov rcx,6972445F534E4F43
  //cmp [rax],rcx
  //jne @f
  mov rcx,[rsp+90]
  lea rcx,[rcx]
@@:
  mov rcx,getItemUUID
  mov rbx,[rcx]
  cmp rbx,1000
  jge @f
  add [rcx],40
  lea rcx,[rcx+rbx+10]
  mov rbx,[rax+00]
  mov [rcx+00],rbx
  mov rbx,[rax+08]
  mov [rcx+08],rbx
  mov rbx,[rax+10]
  mov [rcx+10],rbx
  mov rbx,[rax+18]
  mov [rcx+18],rbx
  mov rbx,[rax+20]
  mov [rcx+20],rbx
  mov rbx,[rax+28]
  mov [rcx+28],rbx
  mov rbx,[rax+30]
  mov [rcx+30],rbx
  mov rbx,[rax+38]
  mov [rcx+38],rbx
@@:
  pop rcx
  pop rbx
done:
  pop rax
getItemBkp:
  readmem(address,8)
  jmp return

address:
getItem:
  jmp newmem
  nop 3
return:
registersymbol(getItem)
registersymbol(getItemBkp)
registersymbol(getItemUUID)

[DISABLE]
getItem:
  readmem(getItemBkp,8)
unregistersymbol(getItem)
unregistersymbol(getItemBkp)
unregistersymbol(getItemUUID)
dealloc(newmem)
dealloc(getItemUUID)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+10D47C1

bg3.exe+10D47AA: CC                    - int 3 
bg3.exe+10D47AB: CC                    - int 3 
bg3.exe+10D47AC: CC                    - int 3 
bg3.exe+10D47AD: CC                    - int 3 
bg3.exe+10D47AE: CC                    - int 3 
bg3.exe+10D47AF: CC                    - int 3 
bg3.exe+10D47B0: 48 89 5C 24 10        - mov [rsp+10],rbx
bg3.exe+10D47B5: 57                    - push rdi
bg3.exe+10D47B6: 48 83 EC 70           - sub rsp,70
bg3.exe+10D47BA: 48 8B 05 67 1C 56 04  - mov rax,[bg3.exe+5636428]
// ---------- INJECTING HERE ----------
bg3.exe+10D47C1: 48 33 C4              - xor rax,rsp
// ---------- DONE INJECTING  ----------
bg3.exe+10D47C4: 48 89 44 24 60        - mov [rsp+60],rax
bg3.exe+10D47C9: 0F B6 FA              - movzx edi,dl
bg3.exe+10D47CC: 33 DB                 - xor ebx,ebx
bg3.exe+10D47CE: E8 4D 9B 58 FF        - call bg3.AK::Monitor::PostCodeVaList+C0D0
bg3.exe+10D47D3: 48 8B D0              - mov rdx,rax
bg3.exe+10D47D6: 48 8D 4C 24 48        - lea rcx,[rsp+48]
bg3.exe+10D47DB: E8 30 98 70 02        - call bg3.exe+37DE010
bg3.exe+10D47E0: 90                    - nop 
bg3.exe+10D47E1: 48 8D 54 24 38        - lea rdx,[rsp+38]
bg3.exe+10D47E6: 48 8D 4C 24 48        - lea rcx,[rsp+48]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4915</ID>
          <Description>"Player Is Wizard"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(isWizard,$process,74 ?? 33 C0 48 89 ?? ?? EB ?? 33)
isWizard:
  db EB
registersymbol(isWizard)

[DISABLE]
isWizard:
  db 74
unregistersymbol(isWizard)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+215AFC6

bg3.exe+215AFA6: 39 08                    - cmp [rax],ecx
bg3.exe+215AFA8: 74 26                    - je bg3.exe+215AFD0
bg3.exe+215AFAA: 48 83 C0 58              - add rax,58
bg3.exe+215AFAE: 49 3B C0                 - cmp rax,r8
bg3.exe+215AFB1: 75 F3                    - jne bg3.exe+215AFA6
bg3.exe+215AFB3: 4D 8B C6                 - mov r8,r14
bg3.exe+215AFB6: 49 8B D4                 - mov rdx,r12
bg3.exe+215AFB9: 48 8D 4D D0              - lea rcx,[rbp-30]
bg3.exe+215AFBD: E8 BE 2E 00 00           - call bg3.exe+215DE80
bg3.exe+215AFC2: 80 7D E0 00              - cmp byte ptr [rbp-20],00
// ---------- INJECTING HERE ----------
bg3.exe+215AFC6: 74 31                    - je bg3.exe+215AFF9
// ---------- DONE INJECTING  ----------
bg3.exe+215AFC8: 33 C0                    - xor eax,eax
bg3.exe+215AFCA: 48 89 45 B8              - mov [rbp-48],rax
bg3.exe+215AFCE: EB 0A                    - jmp bg3.exe+215AFDA
bg3.exe+215AFD0: 33 C0                    - xor eax,eax
bg3.exe+215AFD2: 48 C7 45 B8 02 00 00 00  - mov qword ptr [rbp-48],00000002
bg3.exe+215AFDA: 0F 57 C0                 - xorps xmm0,xmm0
bg3.exe+215AFDD: 0F 11 06                 - movups [rsi],xmm0
bg3.exe+215AFE0: 0F 11 46 10              - movups [rsi+10],xmm0
bg3.exe+215AFE4: C6 46 18 01              - mov byte ptr [rsi+18],01
bg3.exe+215AFE8: F2 0F 10 45 B8           - movsd xmm0,[rbp-48]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4913</ID>
          <Description>"Learn Any Spell"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(learn1,$process,0F 84 ?? ?? ?? ?? 48 8D ?? ?? ?? ?? ?? 3C 01)
learn1:
  db 90 E9
registersymbol(learn1)

aobscanmodule(learn2,$process,75 0A ?? ?? ?? ?? 75 04 B0 01 EB 02 32 C0 C6)
learn2+0C:
  db B0 01
registersymbol(learn2)

[DISABLE]
learn1:
  db 0F 84
unregistersymbol(learn1)

learn2+0C:
  db 32 C0
unregistersymbol(learn2)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+FB508B

bg3.exe+FB5065: E8 26 9E 84 02        - call bg3.exe+37FEE90
bg3.exe+FB506A: 90                    - nop 
bg3.exe+FB506B: 48 8D 55 80           - lea rdx,[rbp-80]
bg3.exe+FB506F: 48 8D 4D 60           - lea rcx,[rbp+60]
bg3.exe+FB5073: E8 D8 E4 82 02        - call bg3.exe+37E3550
bg3.exe+FB5078: 90                    - nop 
bg3.exe+FB5079: 48 8D 4D 80           - lea rcx,[rbp-80]
bg3.exe+FB507D: E8 DE 13 82 02        - call bg3.exe+37D6460
bg3.exe+FB5082: 48 8B 85 78 03 00 00  - mov rax,[rbp+00000378]
bg3.exe+FB5089: 84 C0                 - test al,al
// ---------- INJECTING HERE ----------
bg3.exe+FB508B: 0F 84 A6 01 00 00     - je bg3.exe+FB5237
// ---------- DONE INJECTING  ----------
bg3.exe+FB5091: 48 8D 9D 60 03 00 00  - lea rbx,[rbp+00000360]
bg3.exe+FB5098: 3C 01                 - cmp al,01
bg3.exe+FB509A: B8 00 00 00 00        - mov eax,00000000
bg3.exe+FB509F: 48 0F 45 D8           - cmovne rbx,rax
bg3.exe+FB50A3: 48 85 DB              - test rbx,rbx
bg3.exe+FB50A6: 0F 84 CF 23 00 00     - je bg3.exe+FB747B
bg3.exe+FB50AC: 38 43 08              - cmp [rbx+08],al
bg3.exe+FB50AF: 0F 85 EC 23 00 00     - jne bg3.exe+FB74A1
bg3.exe+FB50B5: 48 8D 05 BC 5F 9D 03  - lea rax,[bg3.exe+498B078]
bg3.exe+FB50BC: 48 89 45 08           - mov [rbp+08],rax
}

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+FB525F

bg3.exe+FB5237: 44 8B 85 60 03 00 00  - mov r8d,[rbp+00000360]
bg3.exe+FB523E: BA 01 00 00 00        - mov edx,00000001
bg3.exe+FB5243: 48 8D 4D 60           - lea rcx,[rbp+60]
bg3.exe+FB5247: E8 C4 E9 82 02        - call bg3.exe+37E3C10
bg3.exe+FB524C: 80 BD 78 03 00 00 00  - cmp byte ptr [rbp+00000378],00
bg3.exe+FB5253: 75 0A                 - jne bg3.exe+FB525F
bg3.exe+FB5255: 48 39 75 E0           - cmp [rbp-20],rsi
bg3.exe+FB5259: 75 04                 - jne bg3.exe+FB525F
bg3.exe+FB525B: B0 01                 - mov al,01
bg3.exe+FB525D: EB 02                 - jmp bg3.exe+FB5261
// ---------- INJECTING HERE ----------
bg3.exe+FB525F: 32 C0                 - xor al,al
// ---------- DONE INJECTING  ----------
bg3.exe+FB5261: C6 44 24 40 00        - mov byte ptr [rsp+40],00
bg3.exe+FB5266: C6 44 24 38 00        - mov byte ptr [rsp+38],00
bg3.exe+FB526B: 0F B6 4C 24 70        - movzx ecx,byte ptr [rsp+70]
bg3.exe+FB5270: 88 4C 24 30           - mov [rsp+30],cl
bg3.exe+FB5274: 88 44 24 28           - mov [rsp+28],al
bg3.exe+FB5278: 48 8B 05 69 5B 9D 03  - mov rax,[bg3.exe+498ADE8]
bg3.exe+FB527F: 48 89 44 24 20        - mov [rsp+20],rax
bg3.exe+FB5284: 4C 8D 4D 60           - lea r9,[rbp+60]
bg3.exe+FB5288: 48 8B 45 F0           - mov rax,[rbp-10]
bg3.exe+FB528C: 4C 8B 00              - mov r8,[rax]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4813</ID>
          <Description>"learnScroll"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(learnScroll,bg3.exe,48 8B 91 88 02 00 00 48 89 54 24 38 48 8B 4D 80 48 89 4C 24 30 48 89) // should be unique
alloc(newmem,$1000,learnScroll)

label(code)
label(return)

newmem:

code:
  mov rdx,[rcx+00000288]
  jmp return

learnScroll:
  jmp newmem
  nop 2
return:
registersymbol(learnScroll)

[DISABLE]

learnScroll:
  db 48 8B 91 88 02 00 00

unregistersymbol(learnScroll)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+FB500B

bg3.exe+FB4FDA: 48 8B 55 90           - mov rdx,[rbp-70]
bg3.exe+FB4FDE: 48 8B 4D 98           - mov rcx,[rbp-68]
bg3.exe+FB4FE2: E8 39 FF 8A FF        - call bg3.exe+864F20
bg3.exe+FB4FE7: 48 8B D8              - mov rbx,rax
bg3.exe+FB4FEA: 48 8B 4D A8           - mov rcx,[rbp-58]
bg3.exe+FB4FEE: 48 81 C1 44 01 00 00  - add rcx,00000144
bg3.exe+FB4FF5: E8 66 D7 A2 FF        - call bg3.exe+9E2760
bg3.exe+FB4FFA: C6 44 24 48 01        - mov byte ptr [rsp+48],01
bg3.exe+FB4FFF: 48 89 5C 24 40        - mov [rsp+40],rbx
bg3.exe+FB5004: 48 8B 0D C5 DE 68 04  - mov rcx,[bg3.exe+5642ED0]
// ---------- INJECTING HERE ----------
bg3.exe+FB500B: 48 8B 91 88 02 00 00  - mov rdx,[rcx+00000288]
// ---------- DONE INJECTING  ----------
bg3.exe+FB5012: 48 89 54 24 38        - mov [rsp+38],rdx
bg3.exe+FB5017: 48 8B 4D 80           - mov rcx,[rbp-80]
bg3.exe+FB501B: 48 89 4C 24 30        - mov [rsp+30],rcx
bg3.exe+FB5020: 48 89 7C 24 28        - mov [rsp+28],rdi
bg3.exe+FB5025: 89 44 24 20           - mov [rsp+20],eax
bg3.exe+FB5029: 4D 8B CE              - mov r9,r14
bg3.exe+FB502C: 4D 8B C7              - mov r8,r15
bg3.exe+FB502F: 49 8B D4              - mov rdx,r12
bg3.exe+FB5032: 48 8D 8D 60 03 00 00  - lea rcx,[rbp+00000360]
bg3.exe+FB5039: E8 62 5E 1A 01        - call bg3.exe+215AEA0
bg3.exe+FB503E - 48 8D 05 0B609D03     - lea rax,[bg3.exe+498B050]  ("hb050cfccgbefcg446fg89fcg3d389ce0327f") Learn spell: [1] gold
bg3.exe+FB5045 - 48 89 85 30030000     - mov [rbp+00000330],rax
bg3.exe+FB504C - BF 25000000           - mov edi,00000025  (37)
bg3.exe+FB5051 - 89 BD 38030000        - mov [rbp+00000338],edi
bg3.exe+FB5057 - 45 33 C0              - xor r8d,r8d
bg3.exe+FB505A - 48 8D 95 30030000     - lea rdx,[rbp+00000330]
bg3.exe+FB5061 - 48 8D 4D 80           - lea rcx,[rbp-80]
bg3.exe+FB5065 - E8 269E8402           - call bg3.exe+37FEE90
bg3.exe+FB506A - 90                    - nop
bg3.exe+FB506B - 48 8D 55 80           - lea rdx,[rbp-80]
bg3.exe+FB506F - 48 8D 4D 60           - lea rcx,[rbp+60]
bg3.exe+FB5073 - E8 D8E48202           - call bg3.exe+37E3550
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>347</ID>
          <Description>"Console Commands 1"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(cmdPtr,$process,48 8B 0D ?? ?? ?? ?? E8 ?? ?? ?? ?? 48 8B 0D ?? ?? ?? ?? E8 ?? ?? ?? ?? 41 B0)
alloc(cmdCode,$1000,cmdPtr)
alloc(cmdStr0,$1000)
alloc(cmdStr1,$1000)
alloc(cmdStr2,$1000)
alloc(cmdStr3,$1000)
alloc(cmdStr4,$1000)

label(cmdList)
label(cmdCall)
label(cmdArgs)
label(cmdSelf)
label(cmdAddr)

cmdPtr+(DWORD)[cmdPtr+03]+07:
cmdList:

cmdCode:
align 10
cmdCall:
sub rsp,38
mov rdx,cmdArgs
mov rax,cmdAddr
mov rcx,cmdSelf
mov rcx,[rcx]
call [rax]
add rsp,38
movzx rax,al
ret

align 10
cmdAddr:
  dq 0
align 10
cmdSelf:
  dq 0
align 10
cmdArgs:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0

registersymbol(cmdList)
registersymbol(cmdCall)
registersymbol(cmdAddr)
registersymbol(cmdSelf)
registersymbol(cmdArgs)
registersymbol(cmdStr0)
registersymbol(cmdStr1)
registersymbol(cmdStr2)
registersymbol(cmdStr3)
registersymbol(cmdStr4)

[DISABLE]
unregistersymbol(cmdList)
unregistersymbol(cmdCode)
unregistersymbol(cmdStr0)
unregistersymbol(cmdStr1)
unregistersymbol(cmdStr2)
unregistersymbol(cmdStr3)
unregistersymbol(cmdStr4)
dealloc(cmdCode)
dealloc(cmdStr0)
dealloc(cmdStr1)
dealloc(cmdStr2)
dealloc(cmdStr3)
dealloc(cmdStr4)

{ Get Function From Commands Array - not above AOB
bg3.exe+2EE6630 - C1 EA 03              - shr edx,03 { 3
bg3.exe+2EE6633 - 81 E2 FFFFFF01        - and edx,01FFFFFF { 33554431
bg3.exe+2EE6639 - 3B 51 2C              - cmp edx,[rcx+2C]
bg3.exe+2EE663C - 73 09                 - jae bg3.exe+2EE6647
bg3.exe+2EE663E - 48 8B 41 20           - mov rax,[rcx+20]
bg3.exe+2EE6642 - 48 8B 04 D0           - mov rax,[rax+rdx*8]
bg3.exe+2EE6646 - C3                    - ret
bg3.exe+2EE6647 - 33 C0                 - xor eax,eax
bg3.exe+2EE6649 - C3                    - ret
}

{ Console Commands Getter - not above AOB
bg3.exe+14CB3F0 - 48 89 5C 24 08        - mov [rsp+08],rbx
bg3.exe+14CB3F5 - 57                    - push rdi
bg3.exe+14CB3F6 - 48 83 EC 20           - sub rsp,20 { 32
bg3.exe+14CB3FA - 48 8B F9              - mov rdi,rcx
bg3.exe+14CB3FD - 48 8B DA              - mov rbx,rdx
bg3.exe+14CB400 - 48 8B 0D D99C1D04     - mov rcx,[cmdList] { (1F5C31A5DC0)
bg3.exe+14CB407 - E8 44E1BBFF           - call bg3.exe+1089550
bg3.exe+14CB40C - 48 8B 0D DDC61704     - mov rcx,[bg3.exe+5647AF0] { (1F5C2F609C0)
bg3.exe+14CB413 - E8 987D20FF           - call bg3.exe+6D31B0
bg3.exe+14CB418 - 48 85 C0              - test rax,rax
bg3.exe+14CB41B - 74 17                 - je bg3.exe+14CB434
bg3.exe+14CB41D - 48 8B 0D CCC61704     - mov rcx,[bg3.exe+5647AF0] { (1F5C2F609C0)
bg3.exe+14CB424 - E8 877D20FF           - call bg3.exe+6D31B0
bg3.exe+14CB429 - 48 8B D3              - mov rdx,rbx
bg3.exe+14CB42C - 48 8B C8              - mov rcx,rax
bg3.exe+14CB42F - E8 BC99BEFF           - call bg3.exe+10B4DF0
bg3.exe+14CB434 - 48 8B 0D EDD11704     - mov rcx,[bg3.exe+5648628] { (1F5C343BB10)
bg3.exe+14CB43B - 48 8B D3              - mov rdx,rbx
bg3.exe+14CB43E - E8 DDA2BE00           - call bg3.exe+20B5720
bg3.exe+14CB443 - 48 8B 0D CED11704     - mov rcx,[bg3.exe+5648618] { (1F5C31E2140)
bg3.exe+14CB44A - 48 8B D3              - mov rdx,rbx
bg3.exe+14CB44D - E8 4E2CB7FF           - call bg3.exe+103E0A0
bg3.exe+14CB452 - 48 8B 0D A79B1D04     - mov rcx,[bg3.exe+56A5000] { (1F5C2E5A680)
bg3.exe+14CB459 - E8 B23E3302           - call bg3.exe+37FF310
bg3.exe+14CB45E - 48 8B 0D E39B1D04     - mov rcx,[bg3.exe+56A5048] { (1F5C2E1CBE0)
bg3.exe+14CB465 - 48 8B D3              - mov rdx,rbx
bg3.exe+14CB468 - E8 2388B9FF           - call bg3.exe+1063C90
bg3.exe+14CB46D - 48 8B 0D 949B1D04     - mov rcx,[bg3.exe+56A5008] { (1F5C2E5A800)
bg3.exe+14CB474 - 48 8B D3              - mov rdx,rbx
bg3.exe+14CB477 - E8 F471B6FF           - call bg3.exe+1032670
bg3.exe+14CB47C - 48 8B 0D 5D7A1704     - mov rcx,[bg3.exe+5642EE0] { (1F5C3225080)
bg3.exe+14CB483 - 48 8B 89 A8020000     - mov rcx,[rcx+000002A8]
bg3.exe+14CB48A - E8 0105BF00           - call bg3.exe+20BB990
bg3.exe+14CB48F - FF 47 18              - inc [rdi+18]
bg3.exe+14CB492 - 48 8B 5C 24 30        - mov rbx,[rsp+30]
bg3.exe+14CB497 - 48 83 C4 20           - add rsp,20 { 32
bg3.exe+14CB49B - 5F                    - pop rdi
bg3.exe+14CB49C - C3                    - ret
}

{ Is above AOB
bg3.exe+429E785 - 48 8B 0D 74684001     - mov rcx,[bg3.exe+56A5000] { (1F5C2E5A680)
bg3.exe+429E78C - E8 8F623BFC           - call bg3.AK::Monitor::PostCodeVaList+780
bg3.exe+429E791 - 48 8B 0D 809E3A01     - mov rcx,[bg3.exe+5648618] { (1F5C31E2140)
bg3.exe+429E798 - 48 83 C1 48           - add rcx,48 { 72
bg3.exe+429E79C - 49 8B D5              - mov rdx,r13
bg3.exe+429E79F - E8 ECC6E5FD           - call bg3.exe+20FAE90
bg3.exe+429E7A4 - 48 8B 0D 35473A01     - mov rcx,[bg3.exe+5642EE0] { (1F5C3225080)
bg3.exe+429E7AB - 48 81 C1 D0000000     - add rcx,000000D0 { 208
bg3.exe+429E7B2 - E8 198B38FC           - call bg3.AK::Monitor::MonitorStreamMgrTerm
bg3.exe+429E7B7 - E8 14B11DFF           - call bg3.exe+34798D0
bg3.exe+429E7BC - E8 0FE4E1FC           - call bg3.exe+10BCBD0
bg3.exe+429E7C1 - E8 0AFC26FD           - call bg3.exe+150E3D0
bg3.exe+429E7C6 - E8 E58951FD           - call bg3.exe+17B71B0
bg3.exe+429E7CB - 48 8D 4D 97           - lea rcx,[rbp-69]
bg3.exe+429E7CF - E8 EC4453FF           - call bg3.exe+37D2CC0
bg3.exe+429E7D4 - 90                    - nop
bg3.exe+429E7D5 - 48 8B 05 9CF94D01     - mov rax,[bg3.exe+577E178] { (1F5C2E808A0)
bg3.exe+429E7DC - 48 8B 48 30           - mov rcx,[rax+30]
bg3.exe+429E7E0 - 48 85 C9              - test rcx,rcx
bg3.exe+429E7E3 - 74 45                 - je bg3.exe+429E82A
bg3.exe+429E7E5 - 4C 8D 45 97           - lea r8,[rbp-69]
bg3.exe+429E7E9 - 48 8D 15 6807DB00     - lea rdx,[bg3.exe+504EF58] { ("-dynamicStory")
bg3.exe+429E7F0 - E8 8B3A53FF           - call bg3.exe+37D2280
bg3.exe+429E7F5 - 84 C0                 - test al,al
bg3.exe+429E7F7 - 74 31                 - je bg3.exe+429E82A
bg3.exe+429E7F9 - 48 8D 05 2C8B5F00     - lea rax,[bg3.exe+489732C] { (49)
bg3.exe+429E800 - 48 89 45 87           - mov [rbp-79],rax
bg3.exe+429E804 - C7 45 8F 01000000     - mov [rbp-71],00000001 { 1
bg3.exe+429E80B - 48 8D 55 87           - lea rdx,[rbp-79]
bg3.exe+429E80F - 48 8D 4D 97           - lea rcx,[rbp-69]
bg3.exe+429E813 - E8 784C53FF           - call bg3.exe+37D3490
bg3.exe+429E818 - 85 C0                 - test eax,eax
bg3.exe+429E81A - 75 0E                 - jne bg3.exe+429E82A
bg3.exe+429E81C - 33 D2                 - xor edx,edx
// ---------- INJECTING HERE ----------
bg3.exe+429E81E - 48 8B 0D BB684001     - mov rcx,[cmdList] { (1F5C31A5DC0)
// ---------- DONE INJECTING  ----------
bg3.exe+429E825 - E8 769BDEFC           - call bg3.exe+10883A0
bg3.exe+429E82A - 48 8B 0D FF674001     - mov rcx,[bg3.exe+56A5030] { (1F5C2EE2640)
bg3.exe+429E831 - E8 6A2BDBFC           - call bg3.exe+10513A0
bg3.exe+429E836 - 41 B0 01              - mov r8b,01 { 1
bg3.exe+429E839 - 48 8B D6              - mov rdx,rsi
bg3.exe+429E83C - 48 8B 0D ED674001     - mov rcx,[bg3.exe+56A5030] { (1F5C2EE2640)
bg3.exe+429E843 - E8 782BDBFC           - call bg3.exe+10513C0
bg3.exe+429E848 - 48 8B D6              - mov rdx,rsi
bg3.exe+429E84B - 48 8B 0D 8E674001     - mov rcx,[bg3.exe+56A4FE0] { (1F5C33EA1C0)
bg3.exe+429E852 - E8 795009FF           - call bg3.exe+33338D0
bg3.exe+429E857 - 90                    - nop
bg3.exe+429E858 - 83 7D AB 10           - cmp dword ptr [rbp-55],10 { 16
bg3.exe+429E85C - 72 0A                 - jb bg3.exe+429E868
bg3.exe+429E85E - 48 8B 4D 97           - mov rcx,[rbp-69]
bg3.exe+429E862 - E8 49BFD3FE           - call bg3.exe+2FDA7B0
bg3.exe+429E867 - 90                    - nop
bg3.exe+429E868 - 48 8B 4D 17           - mov rcx,[rbp+17]
bg3.exe+429E86C - 48 33 CC              - xor rcx,rsp
bg3.exe+429E86F - E8 9C34E4FF           - call bg3.exe+40E1D10
bg3.exe+429E874 - 48 8B 9C 24 10010000  - mov rbx,[rsp+00000110]
bg3.exe+429E87C - 48 81 C4 C0000000     - add rsp,000000C0 { 192
bg3.exe+429E883 - 41 5F                 - pop r15
bg3.exe+429E885 - 41 5E                 - pop r14
bg3.exe+429E887 - 41 5D                 - pop r13
bg3.exe+429E889 - 41 5C                 - pop r12
bg3.exe+429E88B - 5F                    - pop rdi
bg3.exe+429E88C - 5E                    - pop rsi
bg3.exe+429E88D - 5D                    - pop rbp
bg3.exe+429E88E - C3                    - ret
}

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+53DD790

bg3.exe+53DD766: 74 34                    - je bg3.exe+53DD79C
bg3.exe+53DD768: 48 8D 05 71 6F E6 04     - lea rax,[bg3.exe+A2446E0]
bg3.exe+53DD76F: 48 89 44 24 38           - mov [rsp+38],rax
bg3.exe+53DD774: C7 44 24 40 01 00 00 00  - mov [rsp+40],00000001
bg3.exe+53DD77C: 48 8D 54 24 38           - lea rdx,[rsp+38]
bg3.exe+53DD781: 48 8D 4D 00              - lea rcx,[rbp+00]
bg3.exe+53DD785: E8 F6 E7 CF 02           - call bg3.exe+80DBF80
bg3.exe+53DD78A: 85 C0                    - test eax,eax
bg3.exe+53DD78C: 75 0E                    - jne bg3.exe+53DD79C
bg3.exe+53DD78E: 33 D2                    - xor edx,edx
// ---------- INJECTING HERE ----------
bg3.exe+53DD790: 48 8B 0D 29 BF 73 06     - mov rcx,[bg3.exe+BB196C0]
// ---------- DONE INJECTING  ----------
bg3.exe+53DD797: E8 A4 15 36 FE           - call bg3.exe+373ED40
bg3.exe+53DD79C: 48 8B 0D A5 BE 73 06     - mov rcx,[bg3.exe+BB19648]
bg3.exe+53DD7A3: E8 A8 C9 2E FE           - call bg3.exe+36CA150
bg3.exe+53DD7A8: 41 B0 01                 - mov r8l,01
bg3.exe+53DD7AB: 48 8B D7                 - mov rdx,rdi
bg3.exe+53DD7AE: 48 8B 0D 93 BE 73 06     - mov rcx,[bg3.exe+BB19648]
bg3.exe+53DD7B5: E8 96 C6 2E FE           - call bg3.exe+36C9E50
bg3.exe+53DD7BA: 48 8B D7                 - mov rdx,rdi
bg3.exe+53DD7BD: 48 8B 0D 44 BE 73 06     - mov rcx,[bg3.exe+BB19608]
bg3.exe+53DD7C4: E8 17 1A 6B 02           - call bg3.exe+7A8F1E0
}

{
// ORIGINAL CODE - INJECTION POINT: "bg3.exe"+1E263F8

"bg3.exe"+1E263CA: 48 81 C1 00 01 00 00  -  add rcx,00000100
"bg3.exe"+1E263D1: 48 8B EA              -  mov rbp,rdx
"bg3.exe"+1E263D4: E8 C7 56 5D 00        -  call bg3.exe+23FBAA0
"bg3.exe"+1E263D9: 45 33 C0              -  xor r8d,r8d
"bg3.exe"+1E263DC: 48 8D 8B C8 00 00 00  -  lea rcx,[rbx+000000C8]
"bg3.exe"+1E263E3: 48 8B D5              -  mov rdx,rbp
"bg3.exe"+1E263E6: E8 F5 D1 5C 00        -  call bg3.exe+23F35E0
"bg3.exe"+1E263EB: 45 33 C0              -  xor r8d,r8d
"bg3.exe"+1E263EE: 48 8D 8B 30 01 00 00  -  lea rcx,[rbx+00000130]
"bg3.exe"+1E263F5: 48 8B D5              -  mov rdx,rbp
// ---------- INJECTING HERE ----------
"bg3.exe"+1E263F8: E8 73 8A 5D 00        -  call bg3.exe+23FEE70
// ---------- DONE INJECTING  ----------
"bg3.exe"+1E263FD: 48 8B 0D 84 7E D2 03  -  mov rcx,[bg3.exe+5B4E288]
"bg3.exe"+1E26404: E8 C7 21 25 00        -  call bg3.exe+20785D0
"bg3.exe"+1E26409: 41 B0 01              -  mov r8l,01
"bg3.exe"+1E2640C: 48 8D 8B 00 01 00 00  -  lea rcx,[rbx+00000100]
"bg3.exe"+1E26413: 48 8B D5              -  mov rdx,rbp
"bg3.exe"+1E26416: E8 85 56 5D 00        -  call bg3.exe+23FBAA0
"bg3.exe"+1E2641B: 41 B0 01              -  mov r8l,01
"bg3.exe"+1E2641E: 48 8D 8B C8 00 00 00  -  lea rcx,[rbx+000000C8]
"bg3.exe"+1E26425: 48 8B D5              -  mov rdx,rbp
"bg3.exe"+1E26428: E8 B3 D1 5C 00        -  call bg3.exe+23F35E0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4926</ID>
          <Description>"Console Commands 2"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(cmdPtr,$process,48 8B 0D ?? ?? ?? ?? 48 85 ?? 74 ?? ?? 8B ?? 8B ?? E9)
alloc(cmdCode,$1000,cmdPtr)
alloc(cmdStr0,$1000)
alloc(cmdStr1,$1000)
alloc(cmdStr2,$1000)
alloc(cmdStr3,$1000)
alloc(cmdStr4,$1000)

label(cmdList)
label(cmdCall)
label(cmdArgs)
label(cmdSelf)
label(cmdAddr)

cmdPtr+(DWORD)[cmdPtr+03]+07:
cmdList:

cmdCode:
align 10
cmdCall:
sub rsp,38
mov rdx,cmdArgs
mov rax,cmdAddr
mov rcx,cmdSelf
mov rcx,[rcx]
call [rax]
add rsp,38
movzx rax,al
ret

align 10
cmdAddr:
  dq 0
align 10
cmdSelf:
  dq 0
align 10
cmdArgs:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0

registersymbol(cmdList)
registersymbol(cmdCall)
registersymbol(cmdAddr)
registersymbol(cmdSelf)
registersymbol(cmdArgs)
registersymbol(cmdStr0)
registersymbol(cmdStr1)
registersymbol(cmdStr2)
registersymbol(cmdStr3)
registersymbol(cmdStr4)

[DISABLE]
unregistersymbol(cmdList)
unregistersymbol(cmdCode)
unregistersymbol(cmdStr0)
unregistersymbol(cmdStr1)
unregistersymbol(cmdStr2)
unregistersymbol(cmdStr3)
unregistersymbol(cmdStr4)
dealloc(cmdCode)
dealloc(cmdStr0)
dealloc(cmdStr1)
dealloc(cmdStr2)
dealloc(cmdStr3)
dealloc(cmdStr4)

{
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3AC - 8B 05 EEEE0400        - mov eax,[Osiris.dll+8F570] { (4718720)
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3B2 - C1 E8 1E              - shr eax,1E { 30
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3B5 - A8 01                 - test al,01 { 1
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3B7 - 0F85 F6000000         - jne Osiris.COsiArgumentDesc::AllocateExternalEventString+A4B3
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3BD - 48 8B 41 18           - mov rax,[rcx+18]
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3C1 - 4C 8B C2              - mov r8,rdx
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3C4 - 8B 50 44              - mov edx,[rax+44]
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3C7 - 48 8D 0D 62EE0400     - lea rcx,[Osiris.dll+8F500] { (7FF6A78AA3C0)
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3CE - E8 5D0FFCFF           - call Osiris.COsiArgumentDesc::GetType+100
    Osiris.COsiArgumentDesc::GetType+100 - 48 8B 41 10                            - mov rax,[rcx+10]
    Osiris.COsiArgumentDesc::GetType+104 - 44 8B CA                               - mov r9d,edx
    Osiris.COsiArgumentDesc::GetType+107 - 41 8B C9                               - mov ecx,r9d
    Osiris.COsiArgumentDesc::GetType+10A - 49 8B D0                               - mov rdx,r8
    Osiris.COsiArgumentDesc::GetType+10D - 48 FF E0                               - jmp rax
        bg3.exe+2F1A7F0 - 8B C1                                                   - mov eax,ecx
// ---------- INJECTING HERE ----------
        bg3.exe+2F1A7F2 - 48 8B 0D 67D78802                                       - mov rcx,[bg3.exe+57A7F60] { (24258E0D290)
// ---------- INJECTING HERE ----------
        bg3.exe+2F1A7F9 - 48 85 C9                                                - test rcx,rcx
        bg3.exe+2F1A7FC - 74 0A                                                   - je bg3.exe+2F1A808
        bg3.exe+2F1A7FE - 4C 8B C2                                                - mov r8,rdx
        bg3.exe+2F1A801 - 8B D0                                                   - mov edx,eax
        bg3.exe+2F1A803 - E9 58FCFFFF                                             - jmp bg3.exe+2F1A460
            bg3.exe+2F1A460 - 40 53                                               - push rbx
            bg3.exe+2F1A462 - 56                                                  - push rsi
            bg3.exe+2F1A463 - 41 57                                               - push r15
            bg3.exe+2F1A465 - 48 81 EC 40010000                                   - sub rsp,00000140 { 320
            bg3.exe+2F1A46C - 48 8B 05 C57F7402                                   - mov rax,[bg3.exe+5662438] { (0.13)
            bg3.exe+2F1A473 - 48 33 C4                                            - xor rax,rsp
            bg3.exe+2F1A476 - 48 89 84 24 10010000                                - mov [rsp+00000110],rax
            bg3.exe+2F1A47E - 48 8B D9                                            - mov rbx,rcx
            bg3.exe+2F1A481 - 48 89 4C 24 38                                      - mov [rsp+38],rcx
            bg3.exe+2F1A486 - 48 8B 49 08                                         - mov rcx,[rcx+08]
            bg3.exe+2F1A48A - 49 8B F0                                            - mov rsi,r8
            bg3.exe+2F1A48D - E8 3EAFFFFF                                         - call bg3.exe+2F153D0
                bg3.exe+2F153D0 - C1 EA 03                                        - shr edx,03 { 3
                bg3.exe+2F153D3 - 81 E2 FFFFFF01                                  - and edx,01FFFFFF { 33554431
                bg3.exe+2F153D9 - 3B 51 2C                                        - cmp edx,[rcx+2C]
                bg3.exe+2F153DC - 73 09                                           - jae bg3.exe+2F153E7
                bg3.exe+2F153DE - 48 8B 41 20                                     - mov rax,[rcx+20]
                bg3.exe+2F153E2 - 48 8B 04 D0                                     - mov rax,[rax+rdx*8]
                bg3.exe+2F153E6 - C3                                              - ret
                bg3.exe+2F153E7 - 33 C0                                           - xor eax,eax
                bg3.exe+2F153E9 - C3                                              - ret
        bg3.exe+2F1A808 - 32 C0                                                   - xor al,al
        bg3.exe+2F1A80A - C3                                                      - ret
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3D3 - 44 0FB6 E0            - movzx r12d,al
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3D7 - 48 8B 4B 18           - mov rcx,[rbx+18]
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3DB - 48 8B 51 18           - mov rdx,[rcx+18]
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3DF - 48 85 D2              - test rdx,rdx
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3E2 - 0F84 C5000000         - je Osiris.COsiArgumentDesc::AllocateExternalEventString+A4AD
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3E8 - 45 32 F6              - xor r14b,r14b
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3EB - 48 85 FF              - test rdi,rdi
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3EE - 0F84 B9000000         - je Osiris.COsiArgumentDesc::AllocateExternalEventString+A4AD
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3F4 - 4C 8D 6A 18           - lea r13,[rdx+18]
Osiris.COsiArgumentDesc::AllocateExternalEventString+A3F8 - 0F1F 84 00 00000000   - nop dword ptr [rax+rax+00000000]
Osiris.COsiArgumentDesc::AllocateExternalEventString+A400 - 41 0FB6 D6            - movzx edx,r14b
Osiris.COsiArgumentDesc::AllocateExternalEventString+A404 - 49 8B CD              - mov rcx,r13
Osiris.COsiArgumentDesc::AllocateExternalEventString+A407 - E8 8438FCFF           - call Osiris.COsiSmartBuf::skip+18A0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4935</ID>
          <Description>"funcs"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//bg3.exe+2683F95 - 48 8D 0D 7464FFFF     - lea rcx,[ItemIsInPartyInventory] { (610044232) }
//bg3.exe+2683F9C - 48 89 4C 24 28        - mov [rsp+28],rcx
//bg3.exe+2683FA1 - 4C 89 74 24 20        - mov [rsp+20],r14
//bg3.exe+2683FA6 - 4C 8D 0D B316A202     - lea r9,[bg3.exe+50A5660] { ("ItemIsInPartyInventory") }
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>871</ID>
          <Description>"Last Item Moved (moved item must have quantity of 2 or more)"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(LastItemMoved,$process,44 38 ?? ?? ?? 0F 85 ?? ?? ?? ?? 48 8D ?? ?? ?? 48 8B ?? ?? ?? E8)
alloc(newmem,$1000,LastItemMoved)

label(LastItemMovedPtr)
label(LastItemMovedBkp)
label(return)

newmem:
LastItemMovedBkp:
  readmem(LastItemMoved+10,5)
  mov rax,LastItemMovedPtr
  mov [rax],rcx
  jmp return

align 10
LastItemMovedPtr:
  dq 0

LastItemMoved+10:
  jmp newmem
return:
registersymbol(LastItemMoved)
registersymbol(LastItemMovedBkp)
registersymbol(LastItemMovedPtr)

[DISABLE]
LastItemMoved+10:
  readmem(LastItemMovedBkp,5)
unregistersymbol(LastItemMoved)
unregistersymbol(LastItemMovedBkp)
unregistersymbol(LastItemMovedPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+13EFEE3

bg3.exe+13EFEB0: 4A 8D 0C CD 00 00 00 00  - lea rcx,[r9*8+00000000]
bg3.exe+13EFEB8: 49 3B C8                 - cmp rcx,r8
bg3.exe+13EFEBB: 0F 85 AF 00 00 00        - jne bg3.exe+13EFF70
bg3.exe+13EFEC1: 4C 8D 44 24 20           - lea r8,[rsp+20]
bg3.exe+13EFEC6: 48 8B D5                 - mov rdx,rbp
bg3.exe+13EFEC9: 48 8D 4C 24 38           - lea rcx,[rsp+38]
bg3.exe+13EFECE: E8 7D C4 D2 00           - call bg3.exe+211C350
bg3.exe+13EFED3: 44 38 64 24 40           - cmp [rsp+40],r12b
bg3.exe+13EFED8: 0F 85 9C 00 00 00        - jne bg3.exe+13EFF7A
bg3.exe+13EFEDE: 48 8D 54 24 28           - lea rdx,[rsp+28]
// ---------- INJECTING HERE ----------
bg3.exe+13EFEE3: 48 8B 4C 24 38           - mov rcx,[rsp+38]
// ---------- DONE INJECTING  ----------
bg3.exe+13EFEE8: E8 43 29 E8 00           - call bg3.exe+2272830
bg3.exe+13EFEED: 48 8B 38                 - mov rdi,[rax]
bg3.exe+13EFEF0: 48 89 7C 24 20           - mov [rsp+20],rdi
bg3.exe+13EFEF5: 48 8D 44 24 38           - lea rax,[rsp+38]
bg3.exe+13EFEFA: 48 8B 4C 24 40           - mov rcx,[rsp+40]
bg3.exe+13EFEFF: 84 C9                    - test cl,cl
bg3.exe+13EFF01: 49 0F 45 C4              - cmovne rax,r12
bg3.exe+13EFF05: 48 85 C0                 - test rax,rax
bg3.exe+13EFF08: 0F 84 DA 00 00 00        - je bg3.exe+13EFFE8
bg3.exe+13EFF0E: 48 8B 10                 - mov rdx,[rax]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>830</ID>
              <Description>"Quantity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>LastItemMovedPtr</Address>
              <Offsets>
                <Offset>4</Offset>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>425</ID>
          <Description>"Settings Pointer"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(settingsAob,$process,48 8B 05 ?? ?? ?? ?? 80 B8 ?? ?? ?? ?? 00 74 ?? BA 01 00 00 00)
label(settings)
label(godmode)
settingsAob+(DWORD)[settingsAob+03]+7:
settings:
(DWORD)[settingsAob+09]:
godmode:
registersymbol(settings)
registersymbol(godmode)

[DISABLE]
unregistersymbol(settings)
unregistersymbol(godmode)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+32A3AE1

bg3.exe+32A3ABF: 33 DB                 - xor ebx,ebx
bg3.exe+32A3AC1: 4C 8B 7C 24 20        - mov r15,[rsp+20]
bg3.exe+32A3AC6: 48 8B 6C 24 58        - mov rbp,[rsp+58]
bg3.exe+32A3ACB: 48 85 DB              - test rbx,rbx
bg3.exe+32A3ACE: 74 3E                 - je bg3.exe+32A3B0E
bg3.exe+32A3AD0: BA 00 08 00 00        - mov edx,00000800
bg3.exe+32A3AD5: 48 8B CB              - mov rcx,rbx
bg3.exe+32A3AD8: E8 83 7A 9E FF        - call bg3.exe+2C8B560
bg3.exe+32A3ADD: 84 C0                 - test al,al
bg3.exe+32A3ADF: 75 5C                 - jne bg3.exe+32A3B3D
// ---------- INJECTING HERE ----------
bg3.exe+32A3AE1: 48 8B 05 18 B0 33 04  - mov rax,[bg3.exe+75DEB00]
// ---------- DONE INJECTING  ----------
bg3.exe+32A3AE8: 80 B8 A4 01 00 00 00  - cmp byte ptr [rax+000001A4],00
bg3.exe+32A3AEF: 74 1D                 - je bg3.exe+32A3B0E
bg3.exe+32A3AF1: BA 01 00 00 00        - mov edx,00000001
bg3.exe+32A3AF6: 48 8B CB              - mov rcx,rbx
bg3.exe+32A3AF9: E8 62 7A 9E FF        - call bg3.exe+2C8B560
bg3.exe+32A3AFE: 84 C0                 - test al,al
bg3.exe+32A3B00: 74 0C                 - je bg3.exe+32A3B0E
bg3.exe+32A3B02: 80 7E 62 00           - cmp byte ptr [rsi+62],00
bg3.exe+32A3B06: 75 06                 - jne bg3.exe+32A3B0E
bg3.exe+32A3B08: 80 7E 20 09           - cmp byte ptr [rsi+20],09
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>427</ID>
              <Description>"Settings"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>settings</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>428</ID>
                  <Description>"God Mode"</Description>
                  <DropDownList DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>+godmode</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>540</ID>
                  <Description>"Weighted Dice"</Description>
                  <DropDownList DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Byte</VariableType>
                  <Address>+810</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>430</ID>
                  <Description>"Game Speed"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>Float</VariableType>
                  <Address>+5C</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1187</ID>
          <Description>"Allow DLC Content (probably have to reload a save)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(dlc1,$process,0F 10 05 ?? ?? ?? ?? 0F 11 ?? ?? ?? 84 C0 75)
dlc1+0E:
  db EB
registersymbol(dlc1)

aobscanmodule(dlc2,$process,84 C0 75 ?? 48 8B ?? ?? ?? ?? ?? 8B ?? ?? 85 ?? 79 ?? 32 C0)
dlc2+12:
  mov al,1
registersymbol(dlc2)

[DISABLE]
dlc1+0E:
  db 75
unregistersymbol(dlc1)

dlc2+12:
  db 32 C0
unregistersymbol(dlc2)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+146DCC6

bg3.exe+146DC9B: 48 8B CD              - mov rcx,rbp
bg3.exe+146DC9E: E8 3D 50 C6 FF        - call bg3.exe+10D2CE0
bg3.exe+146DCA3: 48 8B F0              - mov rsi,rax
bg3.exe+146DCA6: 48 85 C0              - test rax,rax
bg3.exe+146DCA9: 0F 84 5C 01 00 00     - je bg3.exe+146DE0B
bg3.exe+146DCAF: 48 8D 4D 10           - lea rcx,[rbp+10]
bg3.exe+146DCB3: E8 F8 4F C6 FF        - call bg3.exe+10D2CB0
bg3.exe+146DCB8: 0F 10 05 F1 8A 35 04  - movups xmm0,[bg3.exe+57C67B0]
bg3.exe+146DCBF: 0F 11 44 24 38        - movups [rsp+38],xmm0
bg3.exe+146DCC4: 84 C0                 - test al,al
// ---------- INJECTING HERE ----------
bg3.exe+146DCC6: 75 68                 - jne bg3.exe+146DD30
// ---------- DONE INJECTING  ----------
bg3.exe+146DCC8: 48 8D 4D 10           - lea rcx,[rbp+10]
bg3.exe+146DCCC: E8 0F 06 1F FF        - call bg3.AK::Monitor::PostCodeVaList+C0D0
bg3.exe+146DCD1: 48 8B D0              - mov rdx,rax
bg3.exe+146DCD4: 48 8D 4C 24 48        - lea rcx,[rsp+48]
bg3.exe+146DCD9: E8 62 F2 36 02        - call bg3.exe+37DCF40
bg3.exe+146DCDE: 90                    - nop
bg3.exe+146DCDF: 48 8D 54 24 48        - lea rdx,[rsp+48]
bg3.exe+146DCE4: 48 8D 4C 24 20        - lea rcx,[rsp+20]
bg3.exe+146DCE9: E8 92 6D C6 FF        - call bg3.exe+10D4A80
bg3.exe+146DCEE: 90                    - nop
}

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+146DE0B

bg3.exe+146DDE4: 48 C1 E1 04              - shl rcx,04
bg3.exe+146DDE8: 48 03 8B C8 00 00 00     - add rcx,[rbx+000000C8]
bg3.exe+146DDEF: 48 8D 54 24 38           - lea rdx,[rsp+38]
bg3.exe+146DDF4: E8 77 4B 34 00           - call bg3.exe+17B2970
bg3.exe+146DDF9: 84 C0                    - test al,al
bg3.exe+146DDFB: 75 4A                    - jne bg3.exe+146DE47
bg3.exe+146DDFD: 48 8B 83 B8 00 00 00     - mov rax,[rbx+000000B8]
bg3.exe+146DE04: 8B 14 B8                 - mov edx,[rax+rdi*4]
bg3.exe+146DE07: 85 D2                    - test edx,edx
bg3.exe+146DE09: 79 D5                    - jns bg3.exe+146DDE0
// ---------- INJECTING HERE ----------
bg3.exe+146DE0B: 32 C0                    - xor al,al
// ---------- DONE INJECTING  ----------
bg3.exe+146DE0D: 48 8B 4C 24 70           - mov rcx,[rsp+70]
bg3.exe+146DE12: 48 33 CC                 - xor rcx,rsp
bg3.exe+146DE15: E8 76 E7 C7 02           - call bg3.exe+40EC590
bg3.exe+146DE1A: 4C 8D 9C 24 80 00 00 00  - lea r11,[rsp+00000080]
bg3.exe+146DE22: 49 8B 5B 10              - mov rbx,[r11+10]
bg3.exe+146DE26: 49 8B 6B 20              - mov rbp,[r11+20]
bg3.exe+146DE2A: 49 8B 73 28              - mov rsi,[r11+28]
bg3.exe+146DE2E: 49 8B E3                 - mov rsp,r11
bg3.exe+146DE31: 5F                       - pop rdi
bg3.exe+146DE32: C3                       - ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4968</ID>
          <Description>"abilityCheck"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(abilityCheck,$process,F3 0F 5C 05 ?? ?? ?? ?? F3 0F 59 05 ?? ?? ?? ?? E8 ?? ?? ?? ?? F3 0F 2C D8)
abilityCheck+15:
  db 66 BB 64 00
registersymbol(abilityCheck)

[DISABLE]
abilityCheck+15:
  db F3 0F 2C D8
unregistersymbol(abilityCheck)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+3D1C344

bg3.exe+3D1C313: 0F 85 46 01 00 00        - jne bg3.exe+3D1C45F
bg3.exe+3D1C319: 8B D7                    - mov edx,edi
bg3.exe+3D1C31B: 48 8B CE                 - mov rcx,rsi
bg3.exe+3D1C31E: E8 5D 23 D5 FF           - call bg3.exe+3A6E680
bg3.exe+3D1C323: F2 0F 2C 48 78           - cvttsd2si ecx,[rax+78]
bg3.exe+3D1C328: 66 0F 6E C1              - movd xmm0,ecx
bg3.exe+3D1C32C: 0F 5B C0                 - cvtdq2ps xmm0,xmm0
bg3.exe+3D1C32F: F3 0F 5C 05 89 66 7C 01  - subss xmm0,[bg3.exe+54E29C0]
bg3.exe+3D1C337: F3 0F 59 05 0D 63 7C 01  - mulss xmm0,[bg3.exe+54E264C]
bg3.exe+3D1C33F: E8 91 D4 C8 00           - call bg3.exe+49A97D5
// ---------- INJECTING HERE ----------
bg3.exe+3D1C344: F3 0F 2C D8              - cvttss2si ebx,xmm0
// ---------- DONE INJECTING  ----------
bg3.exe+3D1C348: E9 12 01 00 00           - jmp bg3.exe+3D1C45F
bg3.exe+3D1C34D: 48 8D 85 80 00 00 00     - lea rax,[rbp+00000080]
bg3.exe+3D1C354: 83 BD 94 00 00 00 10     - cmp dword ptr [rbp+00000094],10
bg3.exe+3D1C35B: 48 0F 43 85 80 00 00 00  - cmovae rax,[rbp+00000080]
bg3.exe+3D1C363: 48 89 44 24 50           - mov [rsp+50],rax
bg3.exe+3D1C368: 8B 85 90 00 00 00        - mov eax,[rbp+00000090]
bg3.exe+3D1C36E: 89 44 24 58              - mov [rsp+58],eax
bg3.exe+3D1C372: 48 8D 4C 24 50           - lea rcx,[rsp+50]
bg3.exe+3D1C377: E8 44 45 15 FD           - call bg3.exe+E708C0
bg3.exe+3D1C37C: 44 0F B6 F8              - movzx r15d,al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4961</ID>
          <Description>"ability"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(ability,$process,48 89 44 24 20 48 8B F9 C7 44 24 28 08)
alloc(newmem,$1000,ability)

label(code)
label(return)

newmem:
  mov rdi,[rsp+38]
  lea rdi,[rdi]
code:
  mov [rsp+20],rax
  jmp return

ability:
  jmp newmem
return:
registersymbol(ability)

[DISABLE]
ability:
  db 48 89 44 24 20
unregistersymbol(ability)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+E70774

bg3.exe+E7075B: CC                       - int 3 
bg3.exe+E7075C: CC                       - int 3 
bg3.exe+E7075D: CC                       - int 3 
bg3.exe+E7075E: CC                       - int 3 
bg3.exe+E7075F: CC                       - int 3 
bg3.exe+E70760: 48 89 5C 24 08           - mov [rsp+08],rbx
bg3.exe+E70765: 57                       - push rdi
bg3.exe+E70766: 48 83 EC 30              - sub rsp,30
bg3.exe+E7076A: 8B 59 08                 - mov ebx,[rcx+08]
bg3.exe+E7076D: 48 8D 05 DC FA 02 04     - lea rax,[bg3.exe+4EA0250]
// ---------- INJECTING HERE ----------
bg3.exe+E70774: 48 89 44 24 20           - mov [rsp+20],rax
// ---------- DONE INJECTING  ----------
bg3.exe+E70779: 48 8B F9                 - mov rdi,rcx
bg3.exe+E7077C: C7 44 24 28 08 00 00 00  - mov [rsp+28],00000008
bg3.exe+E70784: 83 FB 08                 - cmp ebx,08
bg3.exe+E70787: 75 1B                    - jne bg3.exe+E707A4
bg3.exe+E70789: 48 8D 54 24 20           - lea rdx,[rsp+20]
bg3.exe+E7078E: E8 FD FF 6E FF           - call bg3.AK::WriteBytesCount::Reserve+6700
bg3.exe+E70793: 85 C0                    - test eax,eax
bg3.exe+E70795: 75 0D                    - jne bg3.exe+E707A4
bg3.exe+E70797: B0 01                    - mov al,01
bg3.exe+E70799: 48 8B 5C 24 40           - mov rbx,[rsp+40]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4969</ID>
          <Description>"get ability"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{
bg3.exe+3D1C086 - E8 D54615FD           - call bg3.exe+E70760
bg3.exe+3D1C08B - 0FB6 F0               - movzx esi,al
bg3.exe+3D1C08E - 4D 85 F6              - test r14,r14
bg3.exe+3D1C091 - 0F84 AFFEFFFF         - je bg3.exe+3D1BF46
bg3.exe+3D1C097 - 40 80 FE 07           - cmp sil,07 { 7
bg3.exe+3D1C09B - 0F84 92010000         - je bg3.exe+3D1C233
bg3.exe+3D1C0A1 - 40 0FB6 DE            - movzx ebx,sil
bg3.exe+3D1C0A5 - 0FB6 44 24 31         - movzx eax,byte ptr [rsp+31]
bg3.exe+3D1C0AA - 3C 03                 - cmp al,03 { 3
bg3.exe+3D1C0AC - 74 16                 - je bg3.exe+3D1C0C4
-----------------------------------------------------------------------------------
bg3.exe+3D1C0AE - 41 8B 5C 9E 04        - mov ebx,[r14+rbx*4+04]
-----------------------------------------------------------------------------------
bg3.exe+3D1C0B3 - 3C 02                 - cmp al,02 { 2
bg3.exe+3D1C0B5 - 0F85 A4030000         - jne bg3.exe+3D1C45F
bg3.exe+3D1C0BB - 66 0F6E C3            - movd xmm0,ebx
bg3.exe+3D1C0BF - E9 68020000           - jmp bg3.exe+3D1C32C
bg3.exe+3D1C0C4 - 48 8B 05 051CE101     - mov rax,[bg3.exe+5B2DCD0] { (21BE12C2D00)

bg3.exe+3D1C32F - F3 0F5C 05 89667C01   - subss xmm0,[bg3.exe+54E29C0] { (10.00)
bg3.exe+3D1C337 - F3 0F59 05 0D637C01   - mulss xmm0,[bg3.exe+54E264C] { (0.50)
bg3.exe+3D1C33F - E8 91D4C800           - call bg3.exe+49A97D5 { -&gt;-&gt;ucrtbase.floorf
bg3.exe+3D1C344 - F3 0F2C D8            - cvttss2si ebx,xmm0

bg3.exe+E6F8CE - 48 8D 05 8B050604     - lea rax,[bg3.exe+4ECFE60] { ("hcd19f46ag85bcg41f2gb8fbg1dc69843d250")
bg3.exe+E6F79E - 48 8D 05 6B060604     - lea rax,[bg3.exe+4ECFE10] { ("hc30ef867gedecg4c22ga387g648ea8224248")
}
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>927</ID>
          <Description>"Saved Character Pointers"</Description>
          <Options moHideChildren="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">[ENABLE]
aobscanmodule(saveChar,$process,?? 8B ?? ?? ?? 8B ?? E8 ?? ?? ?? ?? ?? 8B ?? ?? 0F 10 ?? 0F 10 ?? ?? 44 0F 10 ?? ?? 44 0F 10 ?? ?? 44 0F 10 ?? ?? F2)
alloc(newmem,$1000,saveChar)

label(saveCharPtr)
label(saveCharBkp)
label(return)

newmem:
  test r14,r14
  je @f
  xor rcx,rcx
  mov ecx,[r14+34]
  cmp ecx,#20
  jg @f
  mov r9,saveCharPtr
  mov [r9+rcx*8],rax
saveCharBkp:
  readmem(saveChar,7)
  jmp return

align 10
saveCharPtr:
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0
  dq 0

saveChar:
  jmp newmem
  nop 2
return:
registersymbol(saveChar)
registersymbol(saveCharBkp)
registersymbol(saveCharPtr)

[DISABLE]
saveChar:
  readmem(saveCharBkp,7)
unregistersymbol(saveChar)
unregistersymbol(saveCharBkp)
unregistersymbol(saveCharPtr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: bg3.exe+2C4374C

bg3.exe+2C43725: 48 0F A3 D1        - bt rcx,rdx
bg3.exe+2C43729: 0F 92 C0           - setb al
bg3.exe+2C4372C: 84 C0              - test al,al
bg3.exe+2C4372E: 0F 84 CE 00 00 00  - je bg3.exe+2C43802
bg3.exe+2C43734: 48 8B 13           - mov rdx,[rbx]
bg3.exe+2C43737: 45 33 C0           - xor r8d,r8d
bg3.exe+2C4373A: 49 8B 4E 08        - mov rcx,[r14+08]
bg3.exe+2C4373E: E8 3D BF A4 FE     - call bg3.exe+168F680
bg3.exe+2C43743: 4C 8B 44 24 48     - mov r8,[rsp+48]
bg3.exe+2C43748: 48 8D 55 80        - lea rdx,[rbp-80]
// ---------- INJECTING HERE ----------
bg3.exe+2C4374C: 49 8B 4E 10        - mov rcx,[r14+10]
// ---------- DONE INJECTING  ----------
bg3.exe+2C43750: 4C 8B C8           - mov r9,rax
bg3.exe+2C43753: E8 A8 6A 07 00     - call bg3.exe+2CBA200
bg3.exe+2C43758: 41 8B 4E 30        - mov ecx,[r14+30]
bg3.exe+2C4375C: 0F 10 30           - movups xmm6,[rax]
bg3.exe+2C4375F: 0F 10 78 10        - movups xmm7,[rax+10]
bg3.exe+2C43763: 44 0F 10 40 20     - movups xmm8,[rax+20]
bg3.exe+2C43768: 44 0F 10 48 30     - movups xmm9,[rax+30]
bg3.exe+2C4376D: 44 0F 10 50 40     - movups xmm10,[rax+40]
bg3.exe+2C43772: F2 44 0F 10 58 50  - movsd xmm11,[rax+50]
bg3.exe+2C43778: 41 8B 46 34        - mov eax,[r14+34]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1008</ID>
              <Description>"Save the game. Pointers will populate. Change values. Save the game again. Load that save."</Description>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>928</ID>
              <Description>"Character 1"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>saveCharPtr+0</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>929</ID>
                  <Description>"Name (do NOT change)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>930</ID>
                  <Description>"Strength"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+44</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>931</ID>
                  <Description>"Dexterity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>932</ID>
                  <Description>"Constitution"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>933</ID>
                  <Description>"Intelligence"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>934</ID>
                  <Description>"Wisdom"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>935</ID>
                  <Description>"Charisma"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>936</ID>
              <Description>"Character 2"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>saveCharPtr+8</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>937</ID>
                  <Description>"Name (do NOT change)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>938</ID>
                  <Description>"Strength"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+44</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>939</ID>
                  <Description>"Dexterity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>940</ID>
                  <Description>"Constitution"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>941</ID>
                  <Description>"Intelligence"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>942</ID>
                  <Description>"Wisdom"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>943</ID>
                  <Description>"Charisma"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>944</ID>
              <Description>"Character 3"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>saveCharPtr+10</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>945</ID>
                  <Description>"Name (do NOT change)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>946</ID>
                  <Description>"Strength"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+44</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>947</ID>
                  <Description>"Dexterity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>948</ID>
                  <Description>"Constitution"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>949</ID>
                  <Description>"Intelligence"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>950</ID>
                  <Description>"Wisdom"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>951</ID>
                  <Description>"Charisma"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>952</ID>
              <Description>"Character 4"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>saveCharPtr+18</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>953</ID>
                  <Description>"Name (do NOT change)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>954</ID>
                  <Description>"Strength"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+44</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>955</ID>
                  <Description>"Dexterity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>956</ID>
                  <Description>"Constitution"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>957</ID>
                  <Description>"Intelligence"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>958</ID>
                  <Description>"Wisdom"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>959</ID>
                  <Description>"Charisma"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>960</ID>
              <Description>"Character 5"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>saveCharPtr+20</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>961</ID>
                  <Description>"Name (do NOT change)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>962</ID>
                  <Description>"Strength"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+44</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>963</ID>
                  <Description>"Dexterity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>964</ID>
                  <Description>"Constitution"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>965</ID>
                  <Description>"Intelligence"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>966</ID>
                  <Description>"Wisdom"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>967</ID>
                  <Description>"Charisma"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>968</ID>
              <Description>"Character 6"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>saveCharPtr+28</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>969</ID>
                  <Description>"Name (do NOT change)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>970</ID>
                  <Description>"Strength"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+44</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>971</ID>
                  <Description>"Dexterity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>972</ID>
                  <Description>"Constitution"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>973</ID>
                  <Description>"Intelligence"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>974</ID>
                  <Description>"Wisdom"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>975</ID>
                  <Description>"Charisma"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>976</ID>
              <Description>"Character 7"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>saveCharPtr+30</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>977</ID>
                  <Description>"Name (do NOT change)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>978</ID>
                  <Description>"Strength"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+44</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>979</ID>
                  <Description>"Dexterity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>980</ID>
                  <Description>"Constitution"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>981</ID>
                  <Description>"Intelligence"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>982</ID>
                  <Description>"Wisdom"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>983</ID>
                  <Description>"Charisma"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>984</ID>
              <Description>"Character 8"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>saveCharPtr+38</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>985</ID>
                  <Description>"Name (do NOT change)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>986</ID>
                  <Description>"Strength"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+44</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>987</ID>
                  <Description>"Dexterity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>988</ID>
                  <Description>"Constitution"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>989</ID>
                  <Description>"Intelligence"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>990</ID>
                  <Description>"Wisdom"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>991</ID>
                  <Description>"Charisma"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>992</ID>
              <Description>"Character 9"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>saveCharPtr+40</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>993</ID>
                  <Description>"Name (do NOT change)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>994</ID>
                  <Description>"Strength"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+44</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>995</ID>
                  <Description>"Dexterity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>996</ID>
                  <Description>"Constitution"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>997</ID>
                  <Description>"Intelligence"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>998</ID>
                  <Description>"Wisdom"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>999</ID>
                  <Description>"Charisma"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1000</ID>
              <Description>"Character 10"</Description>
              <Options moHideChildren="1"/>
              <ShowAsSigned>0</ShowAsSigned>
              <GroupHeader>1</GroupHeader>
              <Address>saveCharPtr+48</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>1001</ID>
                  <Description>"Name (do NOT change)"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>String</VariableType>
                  <Length>99</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+28</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1002</ID>
                  <Description>"Strength"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+44</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1003</ID>
                  <Description>"Dexterity"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1004</ID>
                  <Description>"Constitution"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1005</ID>
                  <Description>"Intelligence"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1006</ID>
                  <Description>"Wisdom"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>1007</ID>
                  <Description>"Charisma"</Description>
                  <ShowAsSigned>0</ShowAsSigned>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+58</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>playerCharactersPtr</Name>
      <Address>1D4526F0000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"bg3.exe"+25C0F20</Address>
      <Comment>Zanzer</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
